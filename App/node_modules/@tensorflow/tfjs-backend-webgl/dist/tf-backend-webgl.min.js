/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@tensorflow/tfjs-core")):"function"==typeof define&&define.amd?define(["exports","@tensorflow/tfjs-core"],n):n((e=e||self).tf=e.tf||{},e.tf)}(this,(function(e,n){"use strict";var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)};function r(e,n,t,r){return new(t||(t=Promise))((function(a,i){function o(e){try{u(r.next(e))}catch(e){i(e)}}function s(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(o,s)}u((r=r.apply(e,n||[])).next())}))}function a(e,n){var t,r,a,i,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){o.label=i[1];break}if(6===i[0]&&o.label<a[1]){o.label=a[1],a=i;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(i);break}a[2]&&o.ops.pop(),o.trys.pop();continue}i=n.call(e,o)}catch(e){i=[6,e],r=0}finally{t=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}var i,o,s,u={},l={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function c(e,n){u[e]=n}function d(e){if(!(e in u)){var n=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var n=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(n.addEventListener("webglcontextlost",(function(n){n.preventDefault(),delete u[e]}),!1),1===e)return n.getContext("webgl",l)||n.getContext("experimental-webgl",l);return n.getContext("webgl2",l)}(e);if(null===n)return console.log("Could not get context for WebGL version",e),null;u[e]=n}var t=u[e];return t.isContextLost()?(delete u[e],d(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),u[e])}function p(e,n){return[n,e]}function f(e){var t=n.util.sizeFromShape(e),r=Math.ceil(t/4);return n.util.sizeToSquarishShape(r)}function h(e,n){return[Math.max(1,Math.ceil(n/2)),Math.max(1,Math.ceil(e/2))]}function v(e,t){var r,a,i,o,s,u,l,c,d,p=e;return 2===n.env().getNumber("WEBGL_VERSION")?(r=p.R32F,a=p.R16F,i=p.RGBA16F,o=p.RGBA32F,s=p.RED,u=4,l=1,c=p.HALF_FLOAT,d=p.FLOAT):(r=e.RGBA,a=e.RGBA,i=e.RGBA,o=p.RGBA,s=e.RGBA,u=4,l=4,c=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:s,downloadTextureFormat:e.RGBA,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:c,textureTypeFloat:d}}function x(e,t){var r=t();return n.env().getBool("DEBUG")&&function(e){var n=e.getError();if(n!==e.NO_ERROR)throw new Error("WebGL Error: "+m(e,n))}(e),r}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(i||(i={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(o||(o={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(s||(s={}));function g(e){return!!(n.env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function m(e,n){switch(n){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+n}}function b(e,n){return U(e,(function(){return e.getExtension(n)}),'Extension "'+n+'" not supported on this browser.')}function C(e,n){var t=U(e,(function(){return e.createShader(e.VERTEX_SHADER)}),"Unable to create vertex WebGLShader.");if(x(e,(function(){return e.shaderSource(t,n)})),x(e,(function(){return e.compileShader(t)})),!1===e.getShaderParameter(t,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function y(e,t){var r=U(e,(function(){return e.createShader(e.FRAGMENT_SHADER)}),"Unable to create fragment WebGLShader.");if(x(e,(function(){return e.shaderSource(r,t)})),x(e,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw function(e,t){var r=R.exec(t);if(null==r)return console.log("Couldn't parse line number in error: "+t),void console.log(e);for(var a=+r[1],i=e.split("\n"),o=i.length.toString().length+2,s=i.map((function(e,t){return n.util.rightPad((t+1).toString(),o)+e})),u=0,l=0;l<s.length;l++)u=Math.max(s[l].length,u);var c=s.slice(0,a-1),d=s.slice(a-1,a),p=s.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+n.util.rightPad(d[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}(t,e.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var k,I,R=/ERROR: [0-9]+:([0-9]+):/g;function w(e){return U(e,(function(){return e.createProgram()}),"Unable to create WebGLProgram.")}function T(e,n){if(x(e,(function(){return e.linkProgram(n)})),!1===e.getProgramParameter(n,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}function E(e,n){if(x(e,(function(){return e.validateProgram(n)})),!1===e.getProgramParameter(n,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function N(e,n){var t=U(e,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return x(e,(function(){return e.bindBuffer(e.ARRAY_BUFFER,t)})),x(e,(function(){return e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW)})),t}function S(e,n){var t=U(e,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return x(e,(function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t)})),x(e,(function(){return e.bufferData(e.ELEMENT_ARRAY_BUFFER,n,e.STATIC_DRAW)})),t}function A(e){return U(e,(function(){return e.createTexture()}),"Unable to create WebGLTexture.")}function F(e,t){var r=n.env().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){var a="["+e+"x"+t+"]";throw new Error("Requested texture size "+a+" is invalid.")}if(e>r||t>r){a="["+e+"x"+t+"]";throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+("["+r+"x"+r+"]")+".")}}function _(e){return U(e,(function(){return e.createFramebuffer()}),"Unable to create WebGLFramebuffer.")}function O(e,n,t,r,a,i,o){var s=e.getAttribLocation(n,t);return-1!==s&&(x(e,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),x(e,(function(){return e.vertexAttribPointer(s,a,e.FLOAT,!1,i,o)})),x(e,(function(){return e.enableVertexAttribArray(s)})),!0)}function D(e,n,t){z(e,t),x(e,(function(){return e.activeTexture(e.TEXTURE0+t)})),x(e,(function(){return e.bindTexture(e.TEXTURE_2D,n)}))}function L(e,n,t){return U(e,(function(){return e.getUniformLocation(n,t)}),'uniform "'+t+'" not present in program.')}function P(e,n,t){return e.getUniformLocation(n,t)}function B(e,n,t,r){x(e,(function(){return D(e,n,r)})),x(e,(function(){return e.uniform1i(t,r)}))}function V(e,n,t){x(e,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,t)})),x(e,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)}))}function W(e,n){x(e,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,n)})),x(e,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)}))}function M(e){var n=e.checkFramebufferStatus(e.FRAMEBUFFER);if(n!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+G(e,n))}function G(e,n){switch(n){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+n}}function U(e,n,t){var r=x(e,(function(){return n()}));if(null==r)throw new Error(t);return r}function z(e,n){var t=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=n+e.TEXTURE0;if(r<e.TEXTURE0||r>t)throw new Error("textureUnit must be in "+("[gl.TEXTURE0, gl.TEXTURE"+t+"]")+".")}function X(e,t){return void 0===t&&(t=2),n.util.sizeFromShape(e.slice(0,e.length-t))}function H(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function j(e){var n=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(n=[X(e)].concat(H(e))),n}function K(e,t){var r;void 0===t&&(t=!1);var a=n.env().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(a*=2,1===(e=e.map((function(t,r){return r>=e.length-2?n.util.nearestLargerEven(e[r]):e[r]}))).length&&(e=[2,e[0]])),2!==e.length){var i=n.util.squeezeShape(e);e=i.newShape}var o=n.util.sizeFromShape(e);if(e.length<=1&&o<=a)return[1,o];if(2===e.length&&e[0]<=a&&e[1]<=a)return e;if(3===e.length&&e[0]*e[1]<=a&&e[2]<=a)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=a&&e[1]*e[2]<=a)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=a&&e[3]<=a)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=a&&e[1]*e[2]*e[3]<=a)return[e[0],e[1]*e[2]*e[3]];if(t){var s=X(e),u=2,l=2;return e.length&&(u=(r=H(e))[0],l=r[1]),o=s*(u/2)*(l/2),n.util.sizeToSquarishShape(o).map((function(e){return 2*e}))}return n.util.sizeToSquarishShape(o)}function Y(e){return e%2==0}function q(e,t){if(e=e.slice(-2),t=t.slice(-2),n.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){var r=e.slice(-1)[0],a=t.slice(-1)[0];if(r===a)return!0;if(Y(r)&&Y(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Y(e[0])&&Y(t[0])}function Q(e){if(null==k){var n=d(e);k=n.getParameter(n.MAX_TEXTURE_SIZE)}return k}function Z(e){if(null==I){var n=d(e);I=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,I)}function J(e){if(0===e)return 0;var n=d(e);return $(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:$(n,"EXT_disjoint_timer_query")?1:0}function $(e,n){return null!=e.getExtension(n)}function ee(e){try{if(null!=d(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ne(e){if(0===e)return!1;var n=d(e);if(1===e){if(!$(n,"OES_texture_float"))return!1}else if(!$(n,"EXT_color_buffer_float"))return!1;return re(n)}function te(e){if(0===e)return!1;var n=d(e);if(1!==e){if($(n,"EXT_color_buffer_float"))return re(n);var t="EXT_color_buffer_half_float";if($(n,t)){var r=n.getExtension(t);return function(e,n){var t=v(e,n),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);var a=1,i=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatHalfFloat,a,i,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);var o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);var s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),s}(n,r)}return!1}return!!$(n,"OES_texture_float")&&(!!$(n,"WEBGL_color_buffer_float")&&re(n))}function re(e){var n=v(e),t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatFloat,1,1,0,n.textureFormatFloat,n.textureTypeFloat,null);var r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(t),e.deleteFramebuffer(r),a}function ae(e){return 2===e&&null!=d(e).fenceSync}function ie(e,t){Array.isArray(e)||(e=[e]),e.forEach((function(e){null!=e&&n.util.assert("complex64"!==e.dtype,(function(){return t+" does not support complex64 tensors in the WebGL backend."}))}))}var oe={__proto__:null,callAndCheck:x,canBeRepresented:g,getWebGLErrorMessage:m,getExtensionOrThrow:b,createVertexShader:C,createFragmentShader:y,createProgram:w,linkProgram:T,validateProgram:E,createStaticVertexBuffer:N,createStaticIndexBuffer:S,getNumChannels:function(){return 2===n.env().getNumber("WEBGL_VERSION")?1:4},createTexture:A,validateTextureSize:F,createFramebuffer:_,bindVertexBufferToProgramAttribute:O,bindTextureUnit:D,unbindTextureUnit:function(e,n){z(e,n),x(e,(function(){return e.activeTexture(e.TEXTURE0+n)})),x(e,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))},getProgramUniformLocationOrThrow:L,getProgramUniformLocation:P,bindTextureToProgramUniformSampler:B,bindCanvasToFramebuffer:function(e){x(e,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)})),x(e,(function(){return e.viewport(0,0,e.canvas.width,e.canvas.height)})),x(e,(function(){return e.scissor(0,0,e.canvas.width,e.canvas.height)}))},bindColorTextureToFramebuffer:V,unbindColorTextureFromFramebuffer:W,validateFramebuffer:M,getFramebufferErrorMessage:G,getBatchDim:X,getRowsCols:H,getShapeAs3D:j,getTextureShapeFromLogicalShape:K,isReshapeFree:q,getWebGLMaxTextureSize:Q,resetMaxTextureSize:function(){k=null},resetMaxTexturesInShader:function(){I=null},getMaxTexturesInShader:Z,getWebGLDisjointQueryTimerVersion:J,hasExtension:$,isWebGLVersionEnabled:ee,isCapableOfRenderingToFloatTexture:ne,isDownloadFloatTextureEnabled:te,isWebGLFenceEnabled:ae,assertNotComplex:ie},se=n.env();function ue(){var e,t,r,a,i,o,s,u,l,c;return 2===n.env().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",r="out",a="in",i="texture",o="outputColor",s="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",r="varying",a="varying",i="texture2D",o="gl_FragColor",s="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:r,varyingFs:a,texture2D:i,output:o,defineOutput:s,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function le(e,t,r){void 0===r&&(r="index");var a=n.util.computeStrides(t);return a.map((function(n,t){return"int "+e[t]+" = "+r+" / "+n+"; "+(t===a.length-1?"int "+e[t+1]+" = "+r+" - "+e[t]+" * "+n:"index -= "+e[t]+" * "+n)+";"})).join("")}function ce(e){var t=n.util.computeStrides(e).map((function(e){return e.toString()}));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * "+t[0]+" + coords.y * "+t[1]+" + coords.z;\n  }\n"}se.registerFlag("HAS_WEBGL",(function(){return se.getNumber("WEBGL_VERSION")>0})),se.registerFlag("WEBGL_VERSION",(function(){return ee(2)?2:ee(1)?1:0})),se.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(function(){return!1})),se.registerFlag("WEBGL_BUFFER_SUPPORTED",(function(){return 2===se.get("WEBGL_VERSION")})),se.registerFlag("WEBGL_CPU_FORWARD",(function(){return!0})),se.registerFlag("WEBGL_FORCE_F16_TEXTURES",(function(){return!1})),se.registerFlag("WEBGL_PACK",(function(){return se.getBool("HAS_WEBGL")})),se.registerFlag("WEBGL_PACK_NORMALIZATION",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_PACK_CLIP",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_PACK_DEPTHWISECONV",(function(){return!0})),se.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_PACK_REDUCE",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_LAZILY_UNPACK",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_CONV_IM2COL",(function(){return se.getBool("WEBGL_PACK")})),se.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(function(){return Q(se.getNumber("WEBGL_VERSION"))})),se.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(function(){return Z(se.getNumber("WEBGL_VERSION"))})),se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(function(){var e=se.getNumber("WEBGL_VERSION");return 0===e?0:J(e)})),se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(function(){return se.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!n.device_util.isMobile()})),se.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(function(){return ne(se.getNumber("WEBGL_VERSION"))})),se.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(function(){return!se.getBool("WEBGL_FORCE_F16_TEXTURES")&&se.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")})),se.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(function(){return te(se.getNumber("WEBGL_VERSION"))})),se.registerFlag("WEBGL_FENCE_API_ENABLED",(function(){return ae(se.getNumber("WEBGL_VERSION"))})),se.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(function(){return se.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0})),se.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(function(){return-1}),(function(e){if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got "+e+".")})),se.registerFlag("WEBGL_FLUSH_THRESHOLD",(function(){return n.device_util.isMobile()&&se.getBool("IS_CHROME")?1:-1}),(function(e){if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got "+e+".")}));var de="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",pe=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=i.DENSE;var n=f(e),t=ue();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+le(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+n[0]+", "+n[1]+"));\n        int index = 4 * (resTexRC.x * "+n[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        "+t.output+" = result;\n      }\n    "},fe=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=i.DENSE;var n=f(e),t=ue();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+le(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+n[0]+", "+n[1]+"));\n        int index = 4 * (resTexRC.x * "+n[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        "+t.output+" = result;\n      }\n    "},he=function(e){this.variableNames=["A"],this.outTexUsage=o.DOWNLOAD;var n=ue();this.outputShape=e,this.userCode="\n      "+de+"\n\n      void main() {\n        float x = getAAtOutCoords();\n        "+n.output+" = encode_float(x);\n      }\n    "},ve=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=o.DOWNLOAD;var n=ue();this.outputShape=e,this.userCode="\n      "+de+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        "+n.output+" = encode_float(x);\n      }\n    "},xe=function(e,n,t){void 0===t&&(t=!1),this.variableNames=["A"];var r=ue(),a=n[0],i=n[1];this.outputShape=e;var o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode="\n      "+ce(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / "+i+";\n        int c = imod(flatIndex, "+i+");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n        vec4 values = "+r.texture2D+"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        "+r.output+" = vec4("+o+", 0., 0., 0.);\n      }\n    "},ge=function(e,n,t){void 0===t&&(t=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=ue(),a=n[0],i=n[1];this.outputShape=e;var o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var l=0;l<=1;l++){var c=2*u+l;o+="\n          localCoords = coords;\n          if(localCoords[2] + "+l+" < "+e[2]+") {\n            localCoords[2] += "+l+";\n            if(localCoords[1] + "+u+" < "+e[1]+") {\n              localCoords[1] += "+u+";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / "+i+";\n              c = imod(flatIndex, "+i+");\n              uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n              values = "+r.texture2D+"(A, uv);\n\n              if(offset == 0) {\n                result["+c+"] = values[0];\n              } else if(offset == 1) {\n                result["+c+"] = values[1];\n              } else if(offset == 2) {\n                result["+c+"] = values[2];\n              } else {\n                result["+c+"] = values[3];\n              }\n            }\n          }\n        "}this.userCode="\n      "+ce(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        "+o+"\n\n        "+r.output+" = "+s+";\n      }\n    "};function me(e){var n=ue();return C(e,n.version+"\n    precision highp float;\n    "+n.attribute+" vec3 clipSpacePos;\n    "+n.attribute+" vec2 uv;\n    "+n.varyingVs+" vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }")}function be(e){return N(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ce(e){return S(e,new Uint16Array([0,1,2,2,1,3]))}function ye(e,n,t,r,a,i){F(n,t);var o=A(e),s=e.TEXTURE_2D;return x(e,(function(){return e.bindTexture(s,o)})),x(e,(function(){return e.texParameteri(s,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)})),x(e,(function(){return e.texParameteri(s,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)})),x(e,(function(){return e.texParameteri(s,e.TEXTURE_MIN_FILTER,e.NEAREST)})),x(e,(function(){return e.texParameteri(s,e.TEXTURE_MAG_FILTER,e.NEAREST)})),x(e,(function(){return e.texImage2D(s,0,r,n,t,0,a,i,null)})),x(e,(function(){return e.bindTexture(e.TEXTURE_2D,null)})),o}function ke(e){return e.internalFormatFloat}function Ie(e,n,t,r){var a=p(n,t);return ye(e,a[0],a[1],ke(r),r.textureFormatFloat,e.FLOAT)}function Re(e){return e.internalFormatHalfFloat}function we(e,n,t,r){var a=p(n,t);return ye(e,a[0],a[1],Re(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Te(e){return e.downloadTextureFormat}function Ee(e,n,t,r){var a=p(n,t);return ye(e,a[0],a[1],Te(r),e.RGBA,e.UNSIGNED_BYTE)}function Ne(e){return e.internalFormatPackedFloat}function Se(e,n,t,r){var a=h(n,t);return ye(e,a[0],a[1],Ne(r),e.RGBA,e.FLOAT)}function Ae(e){return e.internalFormatPackedHalfFloat}function Fe(e,n,t,r){var a=h(n,t);return ye(e,a[0],a[1],Ae(r),e.RGBA,r.textureTypeHalfFloat)}function _e(e,n,t){return x(e,(function(){return e.bindBuffer(e.ARRAY_BUFFER,t)})),O(e,n,"clipSpacePos",t,3,20,0)&&O(e,n,"uv",t,2,20,12)}function Oe(e,n,t,r,a,i){var o,s,u;x(e,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),a instanceof Uint8Array?(o=new Uint8Array(t*r*4),s=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(t*r*4),s=e.FLOAT,u=i.internalFormatPackedFloat),o.set(a),x(e,(function(){return e.texImage2D(e.TEXTURE_2D,0,u,t,r,0,e.RGBA,s,o)})),x(e,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function De(e,n,t){x(e,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),t.data instanceof Uint8Array?x(e,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t.width,t.height,0,e.RGBA,e.UNSIGNED_BYTE,t.data)})):x(e,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t)})),x(e,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function Le(e,n,t,r){var a=e.createBuffer();x(e,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,a)}));var i=16*n*t;return x(e,(function(){return e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)})),x(e,(function(){return e.readPixels(0,0,t,n,e.RGBA,e.FLOAT,0)})),x(e,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,null)})),a}function Pe(e,n,t){var r=e,a=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,n),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function Be(e,n,t,r){var a=p(n,t),i=a[0],o=a[1],s=new Uint8Array(n*t*4);return x(e,(function(){return e.readPixels(0,0,i,o,r.downloadTextureFormat,e.UNSIGNED_BYTE,s)})),new Float32Array(s.buffer)}function Ve(e,n,t,r,a,i,o,s){var u=e,l=new Float32Array(function(e,n){var t=h(e,n);return t[0]*t[1]*4}(i,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,n),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function We(e,n,t){var r=new Float32Array(n*t*4);return x(e,(function(){return e.readPixels(0,0,t,n,e.RGBA,e.FLOAT,r)})),r}var Me={__proto__:null,createVertexShader:me,createVertexBuffer:be,createIndexBuffer:Ce,getInternalFormatForFloat32MatrixTexture:ke,createFloat32MatrixTexture:Ie,getInternalFormatForFloat16MatrixTexture:Re,createFloat16MatrixTexture:we,getInternalFormatForUnsignedBytesMatrixTexture:Te,createUnsignedBytesMatrixTexture:Ee,getInternalFormatForPackedMatrixTexture:Ne,createPackedMatrixTexture:Se,getInternalFormatForFloat16PackedMatrixTexture:Ae,createFloat16PackedMatrixTexture:Fe,bindVertexProgramAttributeStreams:_e,uploadDenseMatrixToTexture:Oe,uploadPixelDataToTexture:De,createBufferFromOutputTexture:Le,downloadFloat32MatrixFromBuffer:Pe,downloadByteEncodedFloatMatrixFromOutputTexture:Be,downloadPackedMatrixFromBuffer:Ve,downloadMatrixFromPackedOutputTexture:We},Ge=function(){function e(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=n.env().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,c(t,e)):this.gl=d(t);var r="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(1===n.env().getNumber("WEBGL_VERSION")){var i="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,"OES_texture_float"),$(this.gl,i))this.textureHalfFloatExtension=b(this.gl,i);else if(n.env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),$(this.gl,a))this.colorBufferHalfFloatExtension=b(this.gl,a);else if(n.env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",$(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else{if(!$(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=be(this.gl),this.indexBuffer=Ce(this.gl),this.framebuffer=_(this.gl),this.textureConfig=v(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(e.prototype,"debug",{get:function(){return n.env().getBool("DEBUG")},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){var e=this;if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var n=this.gl;x(n,(function(){return n.finish()})),x(n,(function(){return n.bindFramebuffer(n.FRAMEBUFFER,null)})),x(n,(function(){return n.deleteFramebuffer(e.framebuffer)})),x(n,(function(){return n.bindBuffer(n.ARRAY_BUFFER,null)})),x(n,(function(){return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null)})),x(n,(function(){return n.deleteBuffer(e.indexBuffer)})),this.disposed=!0}},e.prototype.createFloat32MatrixTexture=function(e,n){return this.throwIfDisposed(),Ie(this.gl,e,n,this.textureConfig)},e.prototype.createFloat16MatrixTexture=function(e,n){return this.throwIfDisposed(),we(this.gl,e,n,this.textureConfig)},e.prototype.createUnsignedBytesMatrixTexture=function(e,n){return this.throwIfDisposed(),Ee(this.gl,e,n,this.textureConfig)},e.prototype.uploadPixelDataToTexture=function(e,n){this.throwIfDisposed(),De(this.gl,e,n)},e.prototype.uploadDenseMatrixToTexture=function(e,n,t,r){this.throwIfDisposed(),Oe(this.gl,e,n,t,r,this.textureConfig)},e.prototype.createFloat16PackedMatrixTexture=function(e,n){return this.throwIfDisposed(),Fe(this.gl,e,n,this.textureConfig)},e.prototype.createPackedMatrixTexture=function(e,n){return this.throwIfDisposed(),Se(this.gl,e,n,this.textureConfig)},e.prototype.deleteMatrixTexture=function(e){var n=this;this.throwIfDisposed(),this.outputTexture===e&&(W(this.gl,this.framebuffer),this.outputTexture=null),x(this.gl,(function(){return n.gl.deleteTexture(e)}))},e.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,n,t){var r=this;return this.downloadMatrixDriver(e,(function(){return Be(r.gl,n,t,r.textureConfig)}))},e.prototype.downloadPackedMatrixFromBuffer=function(e,n,t,r,a,i){return Ve(this.gl,e,0,0,0,a,i,this.textureConfig)},e.prototype.downloadFloat32MatrixFromBuffer=function(e,n){return Pe(this.gl,e,n)},e.prototype.createBufferFromTexture=function(e,n,t){this.bindTextureToFrameBuffer(e);var r=Le(this.gl,n,t,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},e.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},e.prototype.createFence=function(e){var t,r,a=this;if(n.env().getBool("WEBGL_FENCE_API_ENABLED")){var i=e,o=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=function(){var e=i.clientWaitSync(o,0,0);return e===i.ALREADY_SIGNALED||e===i.CONDITION_SATISFIED},t=o}else n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=function(){return a.isQueryAvailable(t,n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):r=function(){return!0};return{query:t,isFencePassed:r}},e.prototype.downloadMatrixFromPackedTexture=function(e,n,t){var r=this;return this.downloadMatrixDriver(e,(function(){return We(r.gl,n,t)}))},e.prototype.createProgram=function(e){this.throwIfDisposed();var n=this.gl,t=y(n,e),r=me(n),a=w(n);return x(n,(function(){return n.attachShader(a,r)})),x(n,(function(){return n.attachShader(a,t)})),T(n,a),this.debug&&E(n,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=_e(n,this.program,this.vertexBuffer)),a},e.prototype.deleteProgram=function(e){var n=this;this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&x(this.gl,(function(){return n.gl.deleteProgram(e)}))},e.prototype.setProgram=function(e){var n=this;this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&E(this.gl,this.program),x(this.gl,(function(){return n.gl.useProgram(e)}))},e.prototype.getUniformLocation=function(e,n,t){return void 0===t&&(t=!0),this.throwIfDisposed(),t?L(this.gl,e,n):P(this.gl,e,n)},e.prototype.getAttributeLocation=function(e,n){var t=this;return this.throwIfDisposed(),x(this.gl,(function(){return t.gl.getAttribLocation(e,n)}))},e.prototype.getUniformLocationNoThrow=function(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)},e.prototype.setInputMatrixTexture=function(e,n,t){this.throwIfDisposed(),this.throwIfNoProgram(),B(this.gl,e,n,t)},e.prototype.setOutputMatrixTexture=function(e,n,t){this.setOutputMatrixTextureDriver(e,t,n)},e.prototype.setOutputPackedMatrixTexture=function(e,n,t){this.throwIfDisposed();var r=h(n,t),a=r[0],i=r[1];this.setOutputMatrixTextureDriver(e,a,i)},e.prototype.setOutputMatrixWriteRegion=function(e,n,t,r){this.setOutputMatrixWriteRegionDriver(t,e,r,n)},e.prototype.setOutputPackedMatrixWriteRegion=function(e,n,t,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},e.prototype.debugValidate=function(){null!=this.program&&E(this.gl,this.program),M(this.gl)},e.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&&this.debugValidate(),x(e,(function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)}))},e.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),x(this.gl,(function(){return e.gl.finish()}))},e.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},e.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},e.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},e.prototype.beginQuery=function(){if(2===n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),r=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,r),r}var a=this.getQueryTimerExtensionWebGL1(),i=a.createQueryEXT();return a.beginQueryEXT(a.TIME_ELAPSED_EXT,i),i},e.prototype.endQuery=function(){if(2!==n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{var t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT)}},e.prototype.waitForQueryAndGetTime=function(e){return r(this,void 0,void 0,(function(){var t=this;return a(this,(function(r){switch(r.label){case 0:return[4,n.util.repeatedTry((function(){return t.disposed||t.isQueryAvailable(e,n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}))];case 1:return r.sent(),[2,this.getQueryTime(e,n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}}))}))},e.prototype.getQueryTime=function(e,n){if(0===n)return null;if(2===n){var t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6},e.prototype.isQueryAvailable=function(e,n){if(0===n)return!0;if(2===n){var t=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}a=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint},e.prototype.pollFence=function(e){var n=this;return new Promise((function(t){n.addItemToPoll((function(){return e.isFencePassed()}),(function(){return t()}))}))},e.prototype.pollItems=function(){for(var e=function(e){for(var n=0;n<e.length;++n){if(!e[n]())break}return n-1}(this.itemsToPoll.map((function(e){return e.isDoneFn}))),n=0;n<=e;++n){(0,this.itemsToPoll[n].resolveFn)()}this.itemsToPoll=this.itemsToPoll.slice(e+1)},e.prototype.addItemToPoll=function(e,t){var r=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||n.util.repeatedTry((function(){return r.pollItems(),0===r.itemsToPoll.length}))},e.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),V(this.gl,e,this.framebuffer),this.debug&&M(this.gl)},e.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(V(this.gl,this.outputTexture,this.framebuffer),this.debug&&M(this.gl)):W(this.gl,this.framebuffer)},e.prototype.downloadMatrixDriver=function(e,n){this.bindTextureToFrameBuffer(e);var t=n();return this.unbindTextureToFrameBuffer(),t},e.prototype.setOutputMatrixTextureDriver=function(e,n,t){this.throwIfDisposed();var r=this.gl;V(r,e,this.framebuffer),this.debug&&M(r),this.outputTexture=e,x(r,(function(){return r.viewport(0,0,n,t)})),x(r,(function(){return r.scissor(0,0,n,t)}))},e.prototype.setOutputMatrixWriteRegionDriver=function(e,n,t,r){var a=this;this.throwIfDisposed(),x(this.gl,(function(){return a.gl.scissor(e,n,t,r)}))},e.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},e.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error("No GPU program is currently set.")},e}();var Ue=n.backend_util.getBroadcastDims;function ze(e,t,r,a){var i=[];e.forEach((function(e){var t=n.util.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?i.push("uniform float "+e.name+(t>1?"["+t+"]":"")+";"):(i.push("uniform sampler2D "+e.name+";"),i.push("uniform int offset"+e.name+";"))}));var o,s,u=i.join("\n"),l=e.map((function(e){return function(e,t,r){void 0===r&&(r=!1);var a="";a+=r?He(e):Xe(e);var i=e.shapeInfo.logicalShape,o=t.logicalShape;i.length<=o.length&&(a+=r?function(e,t){var r,a=e.name,i=a.charAt(0).toUpperCase()+a.slice(1),o="get"+i+"AtOutCoords",s=e.shapeInfo.logicalShape.length,u=t.logicalShape.length,l=Ue(e.shapeInfo.logicalShape,t.logicalShape),c=Je(u),d=u-s,p=["x","y","z","w","u","v"];r=0===s?"":u<2&&l.length>=1?"coords = 0;":l.map((function(e){return"coords."+p[e+d]+" = 0;"})).join("\n");var f="";f=u<2&&s>0?"coords":e.shapeInfo.logicalShape.map((function(e,n){return"coords."+p[n+d]})).join(", ");var h="return outputValue;",v=1===n.util.sizeFromShape(e.shapeInfo.logicalShape),x=1===n.util.sizeFromShape(t.logicalShape);if(1!==s||v||x){if(v&&!x)h=1===u?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){var g=s-2,m=s-1;l.indexOf(g)>-1&&l.indexOf(m)>-1?h="return vec4(outputValue.x);":l.indexOf(g)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(m)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 "+o+"() {\n      "+c+" coords = getOutputCoords();\n      "+r+"\n      vec4 outputValue = get"+i+"("+f+");\n      "+h+"\n    }\n  "}(e,t):function(e,t){var r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"AtOutCoords",o=t.texShape,s=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&n.util.arraysEqual(s,o))return"\n      float "+i+"() {\n        return sampleTexture("+r+", resultUV);\n      }\n    ";var c,d=Je(l),p=Ue(e.shapeInfo.logicalShape,t.logicalShape),f=l-u,h=["x","y","z","w","u","v"];c=0===u?"":l<2&&p.length>=1?"coords = 0;":p.map((function(e){return"coords."+h[e+f]+" = 0;"})).join("\n");var v="";v=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map((function(e,n){return"coords."+h[n+f]})).join(", ");return"\n    float "+i+"() {\n      "+d+" coords = getOutputCoords();\n      "+c+"\n      return get"+a+"("+v+");\n    }\n  "}(e,t));return a}(e,t,a)})).join("\n"),c=t.texShape,d=ue(),p=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return "+e.texture2D+"(textureSampler, uv).r;\n    }\n  "}(d),f=function(e){return e.version+"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    "+e.varyingFs+" vec2 resultUV;\n    "+e.defineOutput+"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    "+e.defineSpecialNaN+"\n    "+e.defineSpecialInf+"\n    "+e.defineRound+"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    "+je+"\n    "+Ke+"\n    "+Ye+"\n  "}(d);return t.isPacked?(o=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,n){var t=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];if(1===t[0])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * "+t[1]+".0);\n      }\n    ";if(1===t[1])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * "+t[0]+".0);\n      }\n    ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      return 2 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n    }\n  "}(0,t);case 2:return function(e,t){var r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(n.util.arraysEqual(e,t))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2("+r[0]+", "+r[1]+"));\n      }\n    ";var a=Math.ceil(e[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+r[0]+", "+r[1]+"));\n\n      int index = resTexRC.x * "+r[1]+" + resTexRC.y;\n      int r = 2 * (index / "+a+");\n      int c = imod(index, "+a+") * 2;\n\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return r=e,a=t,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+i[0]+", "+i[1]+"));\n      int index = resTexRC.x * "+i[1]+" + resTexRC.y;\n\n      int b = index / "+s+";\n      index -= b * "+s+";\n\n      int r = 2 * (index / "+o+");\n      int c = imod(index, "+o+") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";default:return function(e,n){for(var t=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,o="",s="b, r, c",u=2;u<e.length-1;u++)o="\n      int b"+u+" = index / "+(i*=e[e.length-u-1])+";\n      index -= b"+u+" * "+i+";\n    "+o,s="b"+u+", "+s;return"\n    ivec"+e.length+" getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+o+"\n\n      int b = index / "+a+";\n      index -= b * "+a+";\n\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec"+e.length+"("+s+");\n    }\n  "}(e,t)}var r,a,i,o,s}(t.logicalShape,c),s=function(e){return"\n    void setOutput(vec4 val) {\n      "+e.output+" = val;\n    }\n  "}(d)):(o=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,n){if(1===n[0])return"\n      int getOutputCoords() {\n        return int(resultUV.x * "+n[1]+".0);\n      }\n    ";if(1===n[1])return"\n      int getOutputCoords() {\n        return int(resultUV.y * "+n[0]+".0);\n      }\n    ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      return resTexRC.x * "+n[1]+" + resTexRC.y;\n    }\n  "}(0,t);case 2:return function(e,t){if(n.util.arraysEqual(e,t))return"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2("+t[0]+", "+t[1]+"));\n      }\n    ";if(1===e[1])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ";if(1===e[0])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      int r = index / "+e[1]+";\n      int c = index - r * "+e[1]+";\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return r=t,a=le(["r","c","d"],e),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+r[0]+", "+r[1]+"));\n      int index = resTexRC.x * "+r[1]+" + resTexRC.y;\n      "+a+"\n      return ivec3(r, c, d);\n    }\n  ";case 4:return function(e,n){var t=le(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      "+t+"\n      return ivec4(r, c, d, d2);\n    }\n  "}(e,t);case 5:return function(e,n){var t=le(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2("+n[0]+",\n                             "+n[1]+"));\n\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      "+t+"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "}(e,t);case 6:return function(e,n){var t=le(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      "+t+"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var r,a}(t.logicalShape,c),s=function(e){return"\n    void setOutput(float val) {\n      "+e.output+" = vec4(val, 0, 0, 0);\n    }\n  "}(d)),a&&(f+=qe),[f,p,s,u,o,l,r].join("\n")}function Xe(e){var t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){var n=e.name,t="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float "+t+"() {return "+n+";}";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===a&&1===i)return"\n      float "+t+"() {\n        return sampleTexture("+n+", halfCR);\n      }\n    ";var o=e.shapeInfo.texShape,s=o[0],u=o[1],l=Qe(n);return"\n    float "+t+"() {\n      vec2 uv = uvFromFlat("+s+", "+u+", "+l+");\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 1:return function(e){var n=e.name,t="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float "+t+"(int index) {\n        "+Ze(e)+"\n      }\n    ";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return"\n      float "+t+"(int index) {\n        return sampleTexture("+n+", halfCR);\n      }\n    ";var o=Qe(n);if(1===i)return"\n      float "+t+"(int index) {\n        vec2 uv = vec2(0.5, (float(index + "+o+") + 0.5) / "+a+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ";if(1===a)return"\n      float "+t+"(int index) {\n        vec2 uv = vec2((float(index + "+o+") + 0.5) / "+i+".0, 0.5);\n        return sampleTexture("+n+", uv);\n      }\n    ";return"\n    float "+t+"(int index) {\n      vec2 uv = uvFromFlat("+a+", "+i+", index + "+o+");\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&n.util.arraysEqual(t,i)){var o=i[0];return"\n    float "+a+"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2("+i[1]+".0, "+o+".0);\n      return sampleTexture("+r+", uv);\n    }\n  "}var s=n.util.squeezeShape(t),u=s.newShape,l=s.keptDims,c=u;if(c.length<t.length){var d=["row","col"];return"\n      "+Xe($e(e,c))+"\n      float "+a+"(int row, int col) {\n        return "+a+"("+en(d,l)+");\n      }\n    "}if(e.shapeInfo.isUniform)return"\n      float "+a+"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2("+t[1]+", 1)));\n        "+Ze(e)+"\n      }\n    ";var p=i[0],f=i[1],h=Qe(r);if(1===f)return"\n    float "+a+"(int row, int col) {\n      float index = dot(vec3(row, col, "+h+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / "+p+".0);\n      return sampleTexture("+r+", uv);\n    }\n  ";if(1===p)return"\n    float "+a+"(int row, int col) {\n      float index = dot(vec3(row, col, "+h+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2((index + 0.5) / "+f+".0, 0.5);\n      return sampleTexture("+r+", uv);\n    }\n  ";return"\n  float "+a+"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * "+t[1]+" + col + "+h+";\n    vec2 uv = uvFromFlat("+p+", "+f+", index);\n    return sampleTexture("+r+", uv);\n  }\n"}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[1]*t[2],o=t[2],s=n.util.squeezeShape(t),u=s.newShape,l=s.keptDims,c=u;if(c.length<t.length){var d=["row","col","depth"];return"\n        "+Xe($e(e,c))+"\n        float "+a+"(int row, int col, int depth) {\n          return "+a+"("+en(d,l)+");\n        }\n      "}if(e.shapeInfo.isUniform)return"\n      float "+a+"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3("+i+", "+o+", 1)));\n        "+Ze(e)+"\n      }\n    ";var p=e.shapeInfo.texShape,f=p[0],h=p[1],v=e.shapeInfo.flatOffset;if(h===i&&null==v)return"\n        float "+a+"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2("+o+", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2("+h+".0, "+f+".0);\n          return sampleTexture("+r+", uv);\n        }\n      ";if(h===o&&null==v)return"\n    float "+a+"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2("+t[1]+", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+h+".0, "+f+".0);\n      return sampleTexture("+r+", uv);\n    }\n  ";var x=Qe(r);return"\n      float "+a+"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * "+i+" + col * "+o+" + depth + "+x+";\n        vec2 uv = uvFromFlat("+f+", "+h+", index);\n        return sampleTexture("+r+", uv);\n      }\n  "}(e);case 4:return function(e){var t=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[3],o=t[2]*i,s=t[1]*o,u=n.util.squeezeShape(t),l=u.newShape,c=u.keptDims;if(l.length<t.length){var d=["row","col","depth","depth2"];return"\n      "+Xe($e(e,l))+"\n      float "+a+"(int row, int col, int depth, int depth2) {\n        return "+a+"("+en(d,c)+");\n      }\n    "}if(e.shapeInfo.isUniform)return"\n      float "+a+"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4("+s+", "+o+", "+i+", 1)));\n        "+Ze(e)+"\n      }\n    ";var p=e.shapeInfo.flatOffset,f=e.shapeInfo.texShape,h=f[0],v=f[1];if(v===s&&null==p)return"\n      float "+a+"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3("+o+", "+i+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+v+".0, "+h+".0);\n        return sampleTexture("+r+", uv);\n      }\n    ";if(v===i&&null==p)return"\n      float "+a+"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3("+t[1]*t[2]+", "+t[2]+", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+v+".0, "+h+".0);\n        return sampleTexture("+r+", uv);\n      }\n    ";var x=Qe(r);return"\n    float "+a+"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+s+" + col * "+o+" +\n          depth * "+i+" + depth2;\n      vec2 uv = uvFromFlat("+h+", "+v+", index + "+x+");\n      return sampleTexture("+r+", uv);\n    }\n  "}(e);case 5:return function(e){var t=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[4],o=t[3]*i,s=t[2]*o,u=t[1]*s,l=n.util.squeezeShape(t),c=l.newShape,d=l.keptDims;if(c.length<t.length){var p=["row","col","depth","depth2","depth3"];return"\n      "+Xe($e(e,c))+"\n      float "+a+"(int row, int col, int depth, int depth2, int depth3) {\n        return "+a+"("+en(p,d)+");\n      }\n    "}if(e.shapeInfo.isUniform)return"\n      float "+a+"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+u+", "+s+", "+o+", "+i+")) +\n          depth3;\n        "+Ze(e)+"\n      }\n    ";var f=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,v=h[0],x=h[1];if(x===u&&null==f)return"\n      float "+a+"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4("+s+", "+o+", "+i+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+x+".0, "+v+".0);\n        return sampleTexture("+r+", uv);\n      }\n    ";if(x===i&&null==f)return"\n      float "+a+"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]+",\n               "+t[2]*t[3]+", "+t[3]+", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+x+".0, "+v+".0);\n        return sampleTexture("+r+", uv);\n      }\n    ";var g=Qe(r);return"\n    float "+a+"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+u+" + col * "+s+" + depth * "+o+" +\n          depth2 * "+i+" + depth3 + "+g+";\n      vec2 uv = uvFromFlat("+v+", "+x+", index);\n      return sampleTexture("+r+", uv);\n    }\n  "}(e);case 6:return function(e){var t=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.util.squeezeShape(t),o=i.newShape,s=i.keptDims;if(o.length<t.length){var u=["row","col","depth","depth2","depth3","depth4"];return"\n      "+Xe($e(e,o))+"\n      float "+a+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return "+a+"("+en(u,s)+");\n      }\n    "}var l=t[5],c=t[4]*l,d=t[3]*c,p=t[2]*d,f=t[1]*p;if(e.shapeInfo.isUniform)return"\n      float "+a+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4("+f+", "+p+", "+d+", "+c+")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2("+l+", 1)));\n        "+Ze(e)+"\n      }\n    ";var h=e.shapeInfo.flatOffset,v=e.shapeInfo.texShape,x=v[0],g=v[1];if(g===f&&null==h)return"\n      float "+a+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4("+p+", "+d+", "+c+", "+l+")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+g+".0, "+x+".0);\n        return sampleTexture("+r+", uv);\n      }\n    ";if(g===l&&null==h)return"\n      float "+a+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]*t[4]+",\n               "+t[2]*t[3]*t[4]+",\n               "+t[3]*t[4]+",\n               "+t[4]+")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+g+".0, "+x+".0);\n        return sampleTexture("+r+", uv);\n      }\n    ";var m=Qe(r);return"\n    float "+a+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+f+" + col * "+p+" + depth * "+d+" +\n          depth2 * "+c+" + depth3 * "+l+" + depth4 + "+m+";\n      vec2 uv = uvFromFlat("+x+", "+g+", index);\n      return sampleTexture("+r+", uv);\n    }\n  "}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function He(e){var t,r,a;switch(e.shapeInfo.logicalShape.length){case 0:return t=e.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),a=ue(),"\n    vec4 "+r+"() {\n      return "+a.texture2D+"("+t+", halfCR);\n    }\n  ";case 1:return function(e){var n=e.name,t="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=ue();return"\n    vec4 "+t+"(int index) {\n      vec2 uv = packedUVfrom1D(\n        "+a[0]+", "+a[1]+", index);\n      return "+i.texture2D+"("+n+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,o=i[0],s=i[1],u=ue();if(null!=i&&n.util.arraysEqual(t,i))return"\n      vec4 "+a+"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2("+s+".0, "+o+".0);\n\n        return "+u.texture2D+"("+r+", uv);\n      }\n    ";var l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(t[1]/2);return"\n    vec4 "+a+"(int row, int col) {\n      vec2 uv = packedUVfrom2D("+c+", "+l[0]+", "+l[1]+", row, col);\n      return "+u.texture2D+"("+r+", uv);\n    }\n  "}(e);case 3:return function(e){var n=e.shapeInfo.logicalShape,t=e.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){var o=[1,2],s=["b","row","col"];return"\n        "+He($e(e,n.slice(1)))+"\n        vec4 "+r+"(int b, int row, int col) {\n          return "+r+"("+en(s,o)+");\n        }\n      "}var u=i[0],l=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2),p=ue();return"\n    vec4 "+r+"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        "+u+", "+l+", "+d+", "+c+", b, row, col);\n      return "+p.texture2D+"("+t+", uv);\n    }\n  "}(e);default:return function(e){for(var n=e.shapeInfo.logicalShape,t=n.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],s=o[0],u=o[1],l=Math.ceil(n[t-1]/2),c=l*Math.ceil(n[t-2]/2),d="int b, int row, int col",p="b * "+c+" + (row / 2) * "+l+" + (col / 2)",f=2;f<t-1;f++)d="int b"+f+", "+d,p="b"+f+" * "+(c*=n[t-f-1])+" + "+p;var h=ue();return"\n    vec4 "+a+"("+d+") {\n      int index = "+p+";\n      int texR = index / "+u+";\n      int texC = index - texR * "+u+";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+u+", "+s+");\n      return "+h.texture2D+"("+r+", uv);\n    }\n  "}(e)}}var je="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ke="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ye="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",qe="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Qe(e){return"offset"+e}function Ze(e){var t=e.name,r=n.util.sizeFromShape(e.shapeInfo.logicalShape);return r<2?"return "+t+";":"\n    for (int i = 0; i < "+r+"; i++) {\n      if (i == index) {\n        return "+t+"[i];\n      }\n    }\n  "}function Je(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank "+e+" is not yet supported")}function $e(e,n){var t=JSON.parse(JSON.stringify(e));return t.shapeInfo.logicalShape=n,t}function en(e,n){return n.map((function(n){return e[n]})).join(", ")}function nn(e,t){if(e.length!==t.length)throw Error("Binary was compiled with "+e.length+" inputs, but was executed with "+t.length+" inputs");e.forEach((function(e,r){var a=e.logicalShape,i=t[r],o=i.shape;if(!n.util.arraysEqual(a,o))throw Error("Binary was compiled with different shapes than the current args. Shapes "+a+" and "+o+" must match");if(!e.isUniform||!i.isUniform){var s=e.texShape,u=i.isUniform?null:i.texData.texShape;if(!n.util.arraysEqual(s,u))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+s+" and "+u+" must match")}}))}function tn(e){return(t,r,a,i,o)=>{const s=n.backend_util.assertAndGetBroadcastShape(t,r),u=s.length,l=n.util.computeStrides(s),c=n.util.sizeFromShape(s),d=n.util.getTypedArrayFromDType(o,c),p=t.length,f=r.length,h=n.util.computeStrides(t),v=n.util.computeStrides(r),x=n.backend_util.getBroadcastDims(t,s),g=n.backend_util.getBroadcastDims(r,s);if(x.length+g.length===0)for(let n=0;n<d.length;++n)d[n]=e(a[n%a.length],i[n%i.length]);else for(let t=0;t<d.length;++t){const r=n.util.indexToLoc(t,u,l),o=r.slice(-p);x.forEach((e=>o[e]=0));const s=n.util.locToIndex(o,p,h),c=r.slice(-f);g.forEach((e=>c[e]=0));const m=n.util.locToIndex(c,f,v);d[t]=e(a[s],i[m])}return[d,s]}}const rn=tn(((e,n)=>e+n));function an(e){return(t,r,a)=>{const i=n.util.getTypedArrayFromDType(r,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],a);return i}}const on=an((e=>Math.ceil(e)));const sn=an((e=>Math.exp(e))),un=an((e=>Math.expm1(e))),ln=an((e=>Math.floor(e)));const cn=tn(((e,n)=>e>n?1:0)),dn=tn(((e,n)=>e<n?1:0));const pn=an((e=>Math.log(e)));const fn=tn(((e,n)=>Math.max(e,n))),hn=tn(((e,n)=>Math.min(e,n))),vn=tn(((e,n)=>e*n));const xn=an((e=>1/Math.sqrt(e)));const gn=tn(((e,n)=>e-n));var mn=rn,bn=function(e,t,r,a,i){const o=n.util.sizeFromShape(a),s=n.util.makeZerosTypedArray(i,r);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(s[r]+=o>0?t[n]:1)}return s},Cn=function(e,t,r,a=!1){const i=e.shape[0],o=e.shape[1],s=n.buffer([i,r],t.dtype);for(let n=0;n<i;n++)for(let i=0;i<o;i++){const o=e.get(n,i);if(o<0)throw new Error("Input x must be non-negative!");o>=r||(a?s.set(1,n,o):t.size>0?s.set(s.get(n,o)+t.get(n,i),n,o):s.set(s.get(n,o)+1,n,o))}return s},yn=on,kn=function(e,t,r,a){const i=n.util.getArrayFromDType(r,n.util.sizeFromShape(t));if(a&&"string"!==r){let t=0;e.forEach((e=>{const r=n.util.sizeFromShape(e.shape);i.set(e.vals,t),t+=r}))}else{let a=0;e.forEach((e=>{const o="string"===r?n.backend_util.fromUint8ToStringArray(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let n=0;n<e.shape[1];++n)i[r+n]=o[s++]}a+=e.shape[1]}))}return i},In=sn,Rn=un,wn=ln,Tn=function(e,t,r){const a=n.buffer(r,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),i=r[0],o=r[2],s=t.locToIndex([i,o]);r[2]=t.values[s];const u=e.locToIndex(r);a.values[n]=e.values[u]}return a},En=cn,Nn=dn,Sn=function(e,t,r){const a=(t-e)/(r-1),i=n.util.makeZerosTypedArray(r,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+a;return i},An=pn,Fn=function(e,t,r,a){const i=n.util.getTypedArrayFromDType(a,n.util.sizeFromShape(r));for(let n=0;n<i.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}i[n]=a}return i},_n=fn,On=hn,Dn=vn,Ln=function(e,t,r){const a=n.util.createScalarValue(-1,r);return vn([],t,a,e,r)},Pn=function(e,t,r,a){const[i,o]=n.backend_util.computeOutAndReduceShapes(e,a),s=n.upcastType(t,"int32"),u=n.util.makeZerosTypedArray(n.util.sizeFromShape(i),s),l=n.util.sizeFromShape(o);for(let e=0;e<u.length;++e){const n=e*l;let t=1;for(let e=0;e<l;++e)t*=r[n+e];u[e]=t}return{outVals:u,outShape:i,outDtype:s}},Bn=function(e,t,r,a){if(e===t||e<t&&r<0||t<e&&r>1)return n.util.makeZerosTypedArray(0,a);const i=Math.abs(Math.ceil((t-e)/r)),o=n.util.makeZerosTypedArray(i,a);t<e&&1===r&&(r=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+r;return o},Vn=xn,Wn=function(e){const n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.abs(e[t]);return n},Mn=function(e,t,r,a,i){const o=n.slice_util.isSliceContinous(a,t,r),s=n.util.sizeFromShape(r),u=n.util.computeStrides(a);if(o){const r=n.slice_util.computeFlatOffset(t,u);return"string"===i?e.slice(r,r+s):e.subarray(r,r+s)}const l="string"===i?n.backend_util.fromUint8ToStringArray(e):e,c=n.buffer(a,i,l),d=n.buffer(r,i);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(c.get(...r),...n)}return"string"===i?n.backend_util.fromStringArrayToUint8(d.values):d.values},Gn=function(e,t,r,a){const i=n.buffer(e,t.dtype);for(let e=0;e<i.size;e++){const n=i.indexToLoc(e),o=new Array(n.length);for(let e=0;e<o.length;e++)o[e]=n[e]*r[e]+a[e];i.set(t.get(...o),...n)}return i},Un=gn,zn=function(e,t){const r=new Array(e.rank);for(let n=0;n<r.length;n++)r[n]=e.shape[n]*t[n];const a=n.buffer(r,e.dtype);for(let n=0;n<a.values.length;++n){const t=a.indexToLoc(n),r=new Array(e.rank);for(let n=0;n<r.length;n++)r[n]=t[n]%e.shape[n];const i=e.locToIndex(r);a.values[n]=e.values[i]}return a},Xn=function(e,t,r,a,i){const o=t[t.length-1],[s,u]=[e.length/o,o],l=n.util.getTypedArrayFromDType(r,s*a),c=n.util.getTypedArrayFromDType("int32",s*a);for(let n=0;n<s;n++){const t=n*u,r=e.subarray(t,t+u),i=[];for(let e=0;e<r.length;e++)i.push({value:r[e],index:e});i.sort(((e,n)=>n.value-e.value));const o=n*a,s=l.subarray(o,o+a),d=c.subarray(o,o+a);for(let e=0;e<a;e++)s[e]=i[e].value,d[e]=i[e].index}const d=t.slice();return d[d.length-1]=a,[n.buffer(d,r,l),n.buffer(d,"int32",c)]},Hn=function(e,t,r,a,i){const o=t.length,s=n.util.sizeFromShape(t),u=n.util.computeStrides(t),l=n.util.computeStrides(i),c=n.util.getTypedArrayFromDType(r,n.util.sizeFromShape(i));for(let t=0;t<s;++t){const r=n.util.indexToLoc(t,o,u),i=new Array(r.length);for(let e=0;e<i.length;e++)i[e]=r[a[e]];c[n.util.locToIndex(i,o,l)]=e[t]}return c},jn=function(e,t,r,a){const i=n.util.parseAxisParam(t,r)[0],o=[1,r[0],1];for(let e=0;e<i;e++)o[0]*=r[e];o[1]=r[i];for(let e=i+1;e<r.length;e++)o[2]*=r[e];const s={},u=new Int32Array(r[i]),l=new n.TensorBuffer(o,a,e),c=[],d=1===o[0]&&1===o[2];for(let n=0;n<r[i];n++){let t;if(d)t=e[n].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let r=0;r<o[2];r++)e.push(l.get(t,n,r));t=e.join(",")}if(void 0!==s[t])u[n]=s[t];else{const e=Object.keys(s).length;s[t]=e,u[n]=e,c.push(n)}}const p=o.slice();p[1]=Object.keys(s).length;const f=new n.TensorBuffer(p,a);c.forEach(((e,n)=>{for(let t=0;t<o[0];t++)for(let r=0;r<o[2];r++)f.set(l.get(t,e,r),t,n,r)}));const h=r.slice();return h[i]=p[1],{outputValues:f.values,outputShape:h,indices:u}};function Kn(e,n){return["x","y","z","w","u","v"].slice(0,n).map((function(n){return e+"."+n}))}function Yn(e,n){return 1===n?[e]:Kn(e,n)}var qn=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;var n=e.length;if(0===n)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{var t=Yn("rc",n),r=Je(n),a=function(e,n,t){if(1===e)return"rc > "+n[0];for(var r="",a=e-2;a<e;a++)r+=t[a]+" >= "+n[a],a<e-1&&(r+="||");return r}(n,e,t),i=function(e,n,t,r){if(1===e)return"";var a=r.slice(-2);return"\n    int r = "+a[0]+";\n    int c = "+a[1]+";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= "+n+";\n    bool rEdge = rp1 >= "+t+";\n  "}(n,e[e.length-1],e[e.length-2],t),o=function(e,n){var t=e.length,r=function(e,n){for(var t=[],r=0;r<=1;r++)for(var a=0;a<=1;a++){for(var i=(0===r?"r":"rp1")+", "+(0===a?"c":"cp1"),o=2;o<e;o++)i=n[n.length-1-o]+","+i;t.push(i)}return t}(t,n);return 1===t?"getA(rc),\n            rc + 1 >= "+e[0]+" ? 0. : getA(rc + 1),\n            0, 0":"getA("+r[0]+"),\n          cEdge ? 0. : getA("+r[1]+"),\n          rEdge ? 0. : getA("+r[2]+"),\n          rEdge || cEdge ? 0. : getA("+r[3]+")"}(e,t);this.userCode="\n        void main() {\n          "+r+" rc = getOutputCoords();\n\n          if("+a+") {\n            setOutput(vec4(0));\n          } else {\n            "+i+"\n\n            setOutput(vec4("+o+"));\n          }\n        }\n      "}};var Qn=function(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var t="",r=0;r<4;r++){var a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),t+="\n        "+a+"\n        "+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+"\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result["+r+"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        "+(r>0?"}":"")+"\n      "}this.userCode="\n      \n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      "+le(["r","c","d"],n)+"\n      return ivec3(r, c, d);\n    }\n  \n      "+ce(e)+"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = "+e[1]+";\n        int cols = "+e[2]+";\n\n        "+t+"\n\n        setOutput(result);\n      }\n    "};var Zn=function(){function e(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return e.prototype.acquireTexture=function(e,n,t){var r=$n(n,t),a=et(e,r,t);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);var i,o=Jn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,t);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();var u=this.freeTextures[a].shift();return this.usedTextures[a].push(u),u}return r===s.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===s.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===s.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===s.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===s.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),i},e.prototype.releaseTexture=function(e,t,r,a){if(null!=this.freeTextures){var i=$n(r,a),o=et(t,i,a);o in this.freeTextures||(this.freeTextures[o]=[]);var s=Jn(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=n.env().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=s):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;var l=this.usedTextures[o],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}},e.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+e+")");var n=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log("Bytes unused: "+this._numBytesFree+" ("+Math.round(100*n)+"%)")}},Object.defineProperty(e.prototype,"numBytesAllocated",{get:function(){return this._numBytesAllocated},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"numBytesFree",{get:function(){return this._numBytesFree},enumerable:!0,configurable:!0}),e.prototype.getNumUsedTextures=function(){return this.numUsedTextures},e.prototype.getNumFreeTextures=function(){return this.numFreeTextures},e.prototype.dispose=function(){var e=this;if(null!=this.freeTextures){for(var n in this.freeTextures)this.freeTextures[n].forEach((function(n){e.gpgpu.deleteMatrixTexture(n)}));for(var n in this.usedTextures)this.usedTextures[n].forEach((function(n){e.gpgpu.deleteMatrixTexture(n)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}},e}();function Jn(e,n,t,r,a){var i,o=function(e,n){switch(e){case s.PACKED_2X2_FLOAT32:return Ne(n);case s.PACKED_2X2_FLOAT16:return Ae(n);case s.UNPACKED_FLOAT32:return ke(n);case s.UNPACKED_FLOAT16:return Re(n);case s.PACKED_4X1_UNSIGNED_BYTE:return Te(n);default:throw new Error("Unknown physical texture type "+e)}}(n,r);if(a){var u=h(e[0],e[1]);i=u[0]*u[1]}else{var l=p(e[0],e[1]);i=l[0]*l[1]}return i*function(e,n){var t=e;if(n===t.R32F)return 4;if(n===t.R16F)return 2;if(n===t.RGBA32F)return 16;if(n===e.RGBA)return 16;if(n===t.RGBA16F)return 8;throw new Error("Unknown internal format "+n)}(t,o)}function $n(e,t){if(e===o.UPLOAD)return s.PACKED_2X2_FLOAT32;if(e===o.RENDER||null==e)return function(e){return n.env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?s.PACKED_2X2_FLOAT32:s.UNPACKED_FLOAT32:e?s.PACKED_2X2_FLOAT16:s.UNPACKED_FLOAT16}(t);if(e===o.DOWNLOAD||e===o.PIXELS)return s.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function et(e,n,t){return e[0]+"_"+e[1]+"_"+n+"_"+t}var nt=function(e,n){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      float unaryOperation(float x) {\n        "+n+"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},tt="if (isnan(x)) return x;",rt="return abs(x);",at="return x;",it=function(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        "+n+"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},ot=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;var n=e.length,t=Yn("rc",n),r=Je(n),a=function(e,n){if(1===e)return"rc";for(var t="",r=0;r<e;r++)t+=n[r],r<e-1&&(t+=",");return t}(n,t),i=t.slice(-2),o=n<=1?"rc":"vec2("+i.join(",")+")";this.userCode="\n      void main() {\n        "+r+" rc = getOutputCoords();\n        vec4 packedInput = getA("+a+");\n\n        setOutput(getChannel(packedInput, "+o+"));\n      }\n    "},st=n.kernel_impls.whereImpl,ut={};var lt=function(e){function s(t){var r,a=e.call(this)||this;if(a.pendingRead=new WeakMap,a.pendingDisposal=new WeakSet,a.dataRefCount=new WeakMap,a.numBytesInGPU=0,a.uploadWaitMs=0,a.downloadWaitMs=0,a.lastGlFlushTime=0,a.warnedAboutMemory=!1,a.pendingDeletes=0,a.disposed=!1,!n.env().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){var i=d(n.env().getNumber("WEBGL_VERSION"));a.binaryCache=((r=n.env().getNumber("WEBGL_VERSION"))in ut||(ut[r]={}),ut[r]),a.gpgpu=new Ge(i),a.canvas=i.canvas,a.gpgpuCreatedLocally=!0}else a.gpgpu=t,a.binaryCache={},a.gpgpuCreatedLocally=!1,a.canvas=t.gl.canvas;return a.textureManager=new Zn(a.gpgpu),a.numMBBeforeWarning=null==n.env().global.screen?1024:n.env().global.screen.height*n.env().global.screen.width*window.devicePixelRatio*600/1024/1024,a.texData=new n.DataStorage(a,n.engine()),a}return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}(s,e),s.prototype.nextDataId=function(){return s.nextDataId++},s.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},s.prototype.write=function(e,t,r){if((n.env().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||n.env().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:r,values:e,usage:o.UPLOAD,refCount:1}),a},s.prototype.refCount=function(e){return this.texData.has(e)?this.texData.get(e).refCount:0},s.prototype.incRef=function(e){this.texData.get(e).refCount++},s.prototype.decRef=function(e){this.texData.has(e)&&this.texData.get(e).refCount--},s.prototype.move=function(e,t,r,a,i){if(n.env().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:a,values:t,usage:o.UPLOAD,refCount:i})},s.prototype.disposeIntermediateTensorInfo=function(e){this.disposeData(e.dataId)},s.prototype.readSync=function(e){var t=this.texData.get(e),r=t.values,a=t.dtype,i=t.complexTensorInfos,o=t.slice,s=t.shape,u=t.isPacked;if(null!=o){var l=void 0;l=u?new it(s,at):new nt(s,at);var c=this.runWebGLProgram(l,[{dataId:e,shape:s,dtype:a}],a),d=this.readSync(c.dataId);return this.disposeIntermediateTensorInfo(c),d}if(null!=r)return this.convertAndCacheOnCPU(e);if("string"===a)return r;var p,f,h=null!=this.activeTimers;if(h&&(p=n.util.now()),"complex64"===a){var v=this.readSync(i.real.dataId),x=this.readSync(i.imag.dataId);f=n.backend_util.mergeRealAndImagArrays(v,x)}else f=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=n.util.now()-p),this.convertAndCacheOnCPU(e,f)},s.prototype.read=function(e){return r(this,void 0,void 0,(function(){var t,r,i,o,s,u,l,c,d,p,h,v,x,g,m,b,C,y,k,I,R,w;return a(this,(function(a){switch(a.label){case 0:if(this.pendingRead.has(e))return t=this.pendingRead.get(e),[2,new Promise((function(e){return t.push(e)}))];if(r=this.texData.get(e),i=r.values,o=r.shape,s=r.slice,u=r.dtype,l=r.complexTensorInfos,c=r.isPacked,null!=s)return d=void 0,d=c?new it(o,at):new nt(o,at),p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:u}],u),h=this.read(p.dataId),this.disposeIntermediateTensorInfo(p),[2,h];if(null!=i)return[2,this.convertAndCacheOnCPU(e)];if(!n.env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===n.env().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return v=null,"complex64"!==u&&n.env().get("WEBGL_BUFFER_SUPPORTED")&&(x=this.decode(e),g=this.texData.get(x.dataId),v=(w=this.gpgpu).createBufferFromTexture.apply(w,[g.texture].concat(f(o)))),this.pendingRead.set(e,[]),"complex64"===u?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:a.sent(),a.label=2;case 2:return"complex64"!==u?[3,4]:[4,Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)])];case 3:return b=a.sent(),C=b[0],y=b[1],m=n.backend_util.mergeRealAndImagArrays(C,y),[3,5];case 4:null==v?m=this.getValuesFromTexture(e):(k=n.util.sizeFromShape(o),m=this.gpgpu.downloadFloat32MatrixFromBuffer(v,k)),a.label=5;case 5:return null!=x&&this.disposeIntermediateTensorInfo(x),I=this.convertAndCacheOnCPU(e,m),R=this.pendingRead.get(e),this.pendingRead.delete(e),R.forEach((function(e){return e(I)})),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&n.engine().removeDataId(e,this),this.pendingDeletes--),[2,I]}}))}))},s.prototype.bufferSync=function(e){var t=this.readSync(e.dataId),r=t;if("string"===e.dtype)try{r=t.map((function(e){return n.util.decodeString(e)}))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return n.buffer(e.shape,e.dtype,r)},s.prototype.checkNumericalProblems=function(e){if(null!=e)for(var t=0;t<e.length;t++){var r=e[t];if(!g(r)){if(n.env().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value "+r+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value "+r+" cannot be represented on this device.")}}},s.prototype.getValuesFromTexture=function(e){var t,r=this.texData.get(e),a=r.shape,i=r.dtype,o=r.isPacked,s=n.util.sizeFromShape(a);if(n.env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var u=this.decode(e),l=this.texData.get(u.dataId),c=(t=this.gpgpu).downloadMatrixFromPackedTexture.apply(t,[l.texture].concat(f(a))).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}var d=n.env().getBool("WEBGL_PACK")&&!0===o,p=d?j(a):a,h=d?new ve(p):new he(p),v=this.runWebGLProgram(h,[{shape:p,dtype:i,dataId:e}],"float32"),x=this.texData.get(v.dataId),g=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(x.texture,x.texShape[0],x.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(v),g},s.prototype.timerAvailable=function(){return n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0},s.prototype.time=function(e){return r(this,void 0,void 0,(function(){var t,r,i,o,s,u,l;return a(this,(function(a){switch(a.label){case 0:return t=this.activeTimers,r=[],i=!1,null==this.programTimersStack?(this.programTimersStack=r,i=!0):this.activeTimers.push(r),this.activeTimers=r,e(),o=n.util.flatten(this.activeTimers.map((function(e){return e.query}))).filter((function(e){return null!=e})),s=n.util.flatten(this.activeTimers.map((function(e){return e.name}))).filter((function(e){return null!=e})),this.activeTimers=t,i&&(this.programTimersStack=null),u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(o)]:[3,2];case 1:return l=a.sent(),u.kernelMs=n.util.sum(l),u.getExtraProfileInfo=function(){return l.map((function(e,n){return{name:s[n],ms:e}})).map((function(e){return e.name+": "+e.ms})).join(", ")},[3,3];case 2:u.kernelMs={error:"WebGL query timers are not supported in this environment."},a.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,u]}}))}))},s.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}},s.prototype.startTimer=function(){return n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:n.util.now(),endMs:null}},s.prototype.endTimer=function(e){return n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=n.util.now(),e)},s.prototype.getQueryTime=function(e){return r(this,void 0,void 0,(function(){var t;return a(this,(function(r){return n.env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(e)]:[2,(t=e).endMs-t.startMs]}))}))},s.prototype.disposeData=function(e,n){if(void 0===n&&(n=!1),this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);var t=this.texData.get(e).complexTensorInfos;return null!=t&&(this.disposeData(t.real.dataId,n),this.disposeData(t.imag.dataId,n)),this.texData.delete(e),!0},s.prototype.releaseGPUData=function(e){var n=this.texData.get(e),t=n.texture,r=n.dtype,a=n.texShape,i=n.usage,o=n.isPacked,s=n.slice,u=s&&s.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(t,a,i,o)));var c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null},s.prototype.getTexture=function(e){return this.uploadToGPU(e),this.texData.get(e).texture},s.prototype.getDataInfo=function(e){return this.texData.get(e)},s.prototype.shouldExecuteOnCPU=function(e,t){var r=this;return void 0===t&&(t=128),n.env().getBool("WEBGL_CPU_FORWARD")&&e.every((function(e){return null==r.texData.get(e.dataId).texture&&n.util.sizeFromShape(e.shape)<t}))},s.prototype.getGPGPUContext=function(){return this.gpgpu},s.prototype.where=function(e){n.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return st(e.shape,t)},s.prototype.packedUnaryOp=function(e,t,r){var a=new it(e.shape,t),i=this.compileAndRun(a,[e],r);return n.engine().makeTensorFromDataId(i.dataId,i.shape,i.dtype)},s.prototype.abs=function(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){var t=Wn(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(n.env().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,rt,e.dtype);var r=new nt(e.shape,rt),a=this.compileAndRun(r,[e]);return n.engine().makeTensorFromDataId(a.dataId,a.shape,a.dtype)},s.prototype.makeTensorInfo=function(e,t,r){var a;if("string"===t&&null!=r&&r.length>0&&n.util.isString(r[0])){var i=r.map((function(e){return n.util.encodeString(e)}));a=this.write(i,e,t)}else a=this.write(r,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}},s.prototype.makeOutput=function(e,t,r){var a=this.makeTensorInfo(e,t,r).dataId;return n.engine().makeTensorFromDataId(a,e,t,this)},s.prototype.unpackTensor=function(e){var n=new ot(e.shape);return this.runWebGLProgram(n,[e],e.dtype)},s.prototype.packTensor=function(e){var n=new qn(e.shape);return this.runWebGLProgram(n,[e],e.dtype,null,!0)},s.prototype.packedReshape=function(e,n){var t=[X(e.shape)].concat(H(e.shape)),r={dtype:e.dtype,shape:t,dataId:e.dataId},a=[X(n)].concat(H(n)),i=new Qn(a,t),o=this.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:n,dtype:o.dtype}},s.prototype.decode=function(e){var n,t=this.texData.get(e),r=t.isPacked,a=t.shape,i=t.dtype,o=j(a);n=r?new fe(o):new pe(o);return{dtype:i,shape:a,dataId:this.runWebGLProgram(n,[{shape:o,dtype:i,dataId:e}],i,null,!0).dataId}},s.prototype.runWebGLProgram=function(e,t,r,a,o){var s=this;void 0===o&&(o=!1);var u=this.makeTensorInfo(e.outputShape,r),l=this.texData.get(u.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===i.DENSE){var c=f(e.outputShape);l.texShape=c.map((function(e){return 2*e}))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===n.util.sizeFromShape(u.shape))return l.values=n.util.getTypedArrayFromDType(u.dtype,0),u;var d=[],p=t.map((function(t){if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var r=s.texData.get(t.dataId);if(null==r.texture){if(!e.packedInputs&&n.util.sizeFromShape(t.shape)<=n.env().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:r.values};e.packedInputs&&(r.isPacked=!0,r.shape=t.shape)}else if(!!r.isPacked!=!!e.packedInputs)t=r.isPacked?s.unpackTensor(t):s.packTensor(t),d.push(t),r=s.texData.get(t.dataId);else if(r.isPacked&&!q(r.shape,t.shape)){var a=t,i=t.shape;t.shape=r.shape,t=s.packedReshape(t,i),d.push(t),r=s.texData.get(t.dataId),a.shape=i}return s.uploadToGPU(t.dataId),{shape:t.shape,texData:r,isUniform:!1}}));this.uploadToGPU(u.dataId);var h,v={shape:u.shape,texData:l,isUniform:!1},x=function(e,n,t){var r="";n.concat(t).forEach((function(e){var n=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,t=e.isUniform?"uniform":e.texData.texShape;r+=e.shape+"_"+t+"_"+n}));var a=e.userCode,i=e.constructor.name;return i+"_"+r+"_"+a}(e,p,v),g=this.getAndSaveBinary(x,(function(){return function(e,t,r,a){var i=t.userCode,o=r.map((function(e,n){var r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=o.map((function(e){return e.shapeInfo})),u={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},l=ze(o,u,i,t.packedInputs),c=e.createProgram(l),d=null,p=e.getUniformLocation(c,"NAN",!1);1===n.env().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(c,"INFINITY",!1));for(var f={},h=0;h<t.variableNames.length;h++){var v=t.variableNames[h];f[v]=e.getUniformLocation(c,v,!1),f["offset"+v]=e.getUniformLocation(c,"offset"+v,!1)}return{program:t,source:l,webGLProgram:c,uniformLocations:f,inShapeInfos:s,outShapeInfo:u,infLoc:d,nanLoc:p}}(s.gpgpu,e,p,v)})),m=null!=this.activeTimers;m&&(h=this.startTimer()),function(e,t,r,a,i){nn(t.inShapeInfos,r),nn([t.outShapeInfo],[a]);var o=a.texData.texture,s=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(o,s[0],s[1]):e.setOutputMatrixTexture(o,s[0],s[1]),e.setProgram(t.webGLProgram),1===n.env().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),r.forEach((function(r,a){var i=t.program.variableNames[a],o=t.uniformLocations[i],s=t.uniformLocations["offset"+i];if(null!=o)if(r.isUniform)if(n.util.sizeFromShape(r.shape)<2)e.gl.uniform1f(o,r.uniformValues[0]);else{var u=r.uniformValues;u instanceof Float32Array||(u=new Float32Array(u)),e.gl.uniform1fv(o,u)}else null!=r.texData.slice&&null!=s&&e.gl.uniform1i(s,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture,o,a)})),null!=i&&i(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,g,p,v,a),d.forEach((function(e){return s.disposeIntermediateTensorInfo(e)})),m&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));var b=n.env().get("WEBGL_FLUSH_THRESHOLD");if(b>0){var C=n.util.now();C-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=C)}if(!n.env().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===o){var y=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),y}return u},s.prototype.compileAndRun=function(e,n,t,r,a){return void 0===a&&(a=!1),t=t||n[0].dtype,this.runWebGLProgram(e,n,t,r,a)},s.prototype.getAndSaveBinary=function(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]},s.prototype.getTextureManager=function(){return this.textureManager},s.prototype.dispose=function(){var e=this;if(!this.disposed){if(!n.env().getBool("IS_TEST"))Object.keys(this.binaryCache).forEach((function(n){e.gpgpu.deleteProgram(e.binaryCache[n].webGLProgram),delete e.binaryCache[n]}));this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}},s.prototype.floatPrecision=function(){var e=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=n.tidy((function(){if(!n.env().get("WEBGL_RENDER_FLOAT32_ENABLED")){var t=n.env().getBool("DEBUG");n.env().set("DEBUG",!1);var r=e.abs(n.scalar(1e-8)).dataSync()[0];if(n.env().set("DEBUG",t),r>0)return 32}return 16}))),this.floatPrecisionValue},s.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},s.prototype.uploadToGPU=function(e){var t,r=this.texData.get(e),a=r.shape,i=r.dtype,s=r.values,u=r.texture,l=r.usage,c=r.isPacked;if(null==u){var d,p=null!=this.activeTimers;p&&(d=n.util.now());var f=r.texShape;if(null==f&&(f=K(a,c),r.texShape=f),null!=s){var v=j(a),x=void 0,g=f[1],m=f[0],b=s instanceof Uint8Array;c?(g=(t=h(f[0],f[1]))[0],m=t[1],x=new ge(v,[m,g],b)):x=new xe(v,[m,g],b);var C=this.makeTensorInfo([m,g],i);this.texData.get(C.dataId).usage=b?o.PIXELS:o.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(C.dataId),g,m,s);var y=this.runWebGLProgram(x,[C],i,null,!0),k=this.texData.get(y.dataId);r.texture=k.texture,r.texShape=k.texShape,r.isPacked=k.isPacked,r.usage=k.usage,this.disposeIntermediateTensorInfo(C),this.texData.delete(y.dataId),r.values=null,p&&(this.uploadWaitMs+=n.util.now()-d)}else{var I=this.acquireTexture(f,l,i,c);r.texture=I}}},s.prototype.convertAndCacheOnCPU=function(e,n){var t=this.texData.get(e),r=t.dtype;return this.releaseGPUData(e),null!=n&&(t.values=function(e,n){if("float32"===n||"complex64"===n)return e;if("int32"===n||"bool"===n){for(var t="int32"===n?new Int32Array(e.length):new Uint8Array(e.length),r=0;r<t.length;++r)t[r]=Math.round(e[r]);return t}throw new Error("Unknown dtype "+n)}(n,r)),t.values},s.prototype.acquireTexture=function(e,n,t,r){if(this.numBytesInGPU+=this.computeBytes(e,t),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+a+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(e,n,r)},s.prototype.computeBytes=function(e,t){return e[0]*e[1]*n.util.bytesPerElement(t)},s.nextDataId=0,s}(n.KernelBackend);function ct(){n.env().set("WEBGL_FORCE_F16_TEXTURES",!0)}n.device_util.isBrowser()&&n.registerBackend("webgl",(function(){return new lt}),2);var dt={forceHalfFloat:ct},pt=function(e,t,r){this.variableNames=["A","B"],this.outputShape=n.backend_util.assertAndGetBroadcastShape(t,r),this.userCode="\n      float binaryOperation(float a, float b) {\n        "+e+"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    "},ft=function(e,t,r,a){void 0===a&&(a=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.backend_util.assertAndGetBroadcastShape(t,r);var i=this.outputShape.length,o="";if(a)if(0===i||1===n.util.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o="\n          "+Je(i)+" coords = getOutputCoords();\n        ",1===i)o+="\n            result.y = (coords + 1) >= "+this.outputShape[0]+" ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ";else{var s=Yn("coords",i);o+="\n            bool nextRowOutOfBounds =\n              ("+s[i-2]+" + 1) >= "+this.outputShape[i-2]+";\n            bool nextColOutOfBounds =\n              ("+s[i-1]+" + 1) >= "+this.outputShape[i-1]+";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        "+e+"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        "+o+"\n\n        setOutput(result);\n      }\n    "};function ht(e){var n=e.inputs,t=e.backend,r=n.x;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var vt={kernelName:n.Identity,backendName:"webgl",kernelFunc:ht};function xt(e){var n=e.inputs,t=e.backend,r=n.real,a=n.imag,i=t.makeTensorInfo(r.shape,"complex64"),o=t.texData.get(i.dataId),s=ht({inputs:{x:r},backend:t}),u=ht({inputs:{x:a},backend:t});return o.complexTensorInfos={real:s,imag:u},i}var gt={kernelName:n.Complex,backendName:"webgl",kernelFunc:xt},mt="return (a < 0.) ? b * a : a;",bt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var Ct={kernelName:n.LeakyRelu,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.alpha,s=r.makeTensorInfo([],"float32",n.util.createScalarValue(o,"float32")),u=n.env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ft(bt,i.shape,s.shape):new pt(mt,i.shape,s.shape),l=r.runWebGLProgram(u,[i,s],i.dtype);return r.disposeIntermediateTensorInfo(s),l}},yt="return (a < 0.) ? b * a : a;",kt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var It={kernelName:n.Prelu,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=t.x,i=t.alpha,o=n.env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ft(kt,a.shape,i.shape):new pt(yt,a.shape,i.shape);return r.runWebGLProgram(o,[a,i],a.dtype)}};function Rt(e){var t=e.opSnippet,r=e.packedOpSnippet,a=e.cpuKernelImpl,i=e.dtype;return function(e){var o,s=e.inputs,u=e.backend,l=s.x,c=u,d=i||l.dtype;if(c.shouldExecuteOnCPU([l])&&null!=a){var p=c.texData.get(l.dataId),f=a(p.values,d);return c.makeTensorInfo(l.shape,d,f)}return o=n.env().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=r?new it(l.shape,r):new nt(l.shape,t),c.runWebGLProgram(o,[l],d)}}function wt(e){var t=e.opSnippet,r=e.packedOpSnippet,a=e.checkOutOfBounds,i=void 0!==a&&a,o=e.supportsComplex,s=void 0!==o&&o,u=e.cpuKernelImpl,l=e.dtype;return function(e){var a=e.inputs,o=e.backend,c=a,d=c.a,p=c.b,f=o;if(s&&"complex64"===d.dtype){var h=f.texData.get(d.dataId),v=f.texData.get(p.dataId),x=[[h.complexTensorInfos.real,v.complexTensorInfos.real],[h.complexTensorInfos.imag,v.complexTensorInfos.imag]].map((function(e){var r=e[0],a=e[1],i={dataId:r.dataId,dtype:r.dtype,shape:d.shape},o={dataId:a.dataId,dtype:a.dtype,shape:p.shape},s=new pt(t,d.shape,p.shape);return f.runWebGLProgram(s,[i,o],n.upcastType(r.dtype,a.dtype))})),g=x[0],m=x[1],b=xt({inputs:{real:g,imag:m},backend:f});return f.disposeIntermediateTensorInfo(g),f.disposeIntermediateTensorInfo(m),b}var C,y=l||n.upcastType(d.dtype,p.dtype);if(f.shouldExecuteOnCPU([d,p])&&null!=u){h=f.texData.get(d.dataId),v=f.texData.get(p.dataId);var k=u(d.shape,p.shape,h.values,v.values,y),I=k[0],R=k[1],w=f.makeTensorInfo(R,y);return f.texData.get(w.dataId).values=I,w}return C=n.env().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=r?new ft(r,d.shape,p.shape,i):new pt(t,d.shape,p.shape),f.runWebGLProgram(C,[d,p],y)}}function Tt(e,n){if(void 0===n&&(n=!1),"linear"===e)return"return x;";if("relu"===e)return n?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return n?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return n?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return n?kt:yt;if("leakyrelu"===e)return n?bt:mt;throw new Error("Activation "+e+" has not been implemented for the WebGL backend.")}var Et=function(e,n,t,r,a,i,o,s,u){void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===i&&(i=!1),void 0===o&&(o=null),void 0===s&&(s=!1),void 0===u&&(u=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;var l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],v="",x="";o&&(v=s?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+o+"\n        }":u?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          "+o+"\n        }":"vec4 activation(vec4 x) {\n          "+o+"\n        }",x="result = activation(result);");var g=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");var m="rc.x",b="rc.x";e[0]<n[0]?m="int(min(float(rc.x), "+(e[0]-1)+".))":n[0]<e[0]&&(b="int(min(float(rc.x), "+(n[0]-1)+".))"),this.userCode="\n      "+v+"\n\n      const float sharedDimension = "+c+".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < "+c+"; i++) {\n          int batchA = "+m+";\n          int batchB = "+b+";\n          vec4 a = getMatrixA(batchA, "+d+");\n          vec4 b = getMatrixB(batchB, "+p+");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += ("+f[0]+" * "+h[0]+");\n          result += ("+f[1]+" * "+h[1]+");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        "+g+"\n\n        "+x+"\n\n        setOutput(result);\n      }\n    "},Nt="return areal * breal - aimag * bimag;",St="return areal * bimag + aimag * breal;",At=function(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=n.backend_util.assertAndGetBroadcastShape(t,r),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        "+e+"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    "},Ft="return a * b;";function _t(e){var t,r=e.inputs,a=e.backend,i=r.a,o=r.b,s=n.backend_util.upcastType(i.dtype,o.dtype);if("complex64"===i.dtype){var u=a.texData.get(i.dataId),l=a.texData.get(o.dataId),c=new At(Nt,i.shape,o.shape),d=new At(St,i.shape,o.shape),p=[{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:i.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],f=a.runWebGLProgram(c,p,"float32"),h=a.runWebGLProgram(d,p,"float32"),v=xt({inputs:{real:f,imag:h},backend:a});return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(h),v}if(a.shouldExecuteOnCPU([i,o])){u=a.texData.get(i.dataId),l=a.texData.get(o.dataId);var x=Dn(i.shape,o.shape,u.values,l.values,s),g=x[0],m=x[1],b=a.makeTensorInfo(m,s);return a.texData.get(b.dataId).values=g,b}return t=n.env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ft(Ft,i.shape,o.shape):new pt(Ft,i.shape,o.shape),a.runWebGLProgram(t,[i,o],s)}var Ot={kernelName:n.Multiply,backendName:"webgl",kernelFunc:_t};function Dt(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.shape,s=r,u=n.util.sizeFromShape(i.shape),l=n.util.inferFromImplicitShape(o,u),c=n.util.sizeFromShape(l);n.util.assert(u===c,(function(){return"The new shape ("+l+") has "+c+" elements and the old shape ("+i.shape+") has "+u+" elements. The new shape and old shape must have the same number of elements."}));var d=s.texData.get(i.dataId);return!d.isPacked||q(i.shape,l)||null!==d.texture&&q(d.shape,l)?(s.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype}):function(e,n,t){var r=[X(e.shape)].concat(H(e.shape)),a={dtype:e.dtype,shape:r,dataId:e.dataId},i=[X(n)].concat(H(n)),o=new Qn(i,r),s=t.runWebGLProgram(o,[a],e.dtype,null,!0);return{dataId:s.dataId,shape:n,dtype:s.dtype}}(i,l,s)}var Lt={kernelName:n.Reshape,backendName:"webgl",kernelFunc:Dt},Pt=function(e,t){this.variableNames=["x"];var r=e.windowSize,a=e.batchSize,i=e.inSize,o=e.outSize;this.outputShape=[a,o];var s=4*Math.floor(r/4),u=r%4,l="sumValue += dot(values, ones);";if(null!=t){var c=1/t;l="sumValue += dot(values * "+(n.util.isInt(c)?c.toPrecision(2):c)+", ones);"}var d="";i%r>0&&(d="\n        if (inIdx < 0 || inIdx >= "+i+") {\n          return 0.0;\n        }\n      "),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+d+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+r+";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+s+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+l+"\n        }\n\n        int inIdx = inOffset + "+s+";\n        if ("+(1===u)+") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          "+l+"\n        } else if ("+(2===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          "+l+"\n        } else if ("+(3===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          "+l+"\n        }\n        setOutput(sumValue);\n      }\n    "},Bt=function(e,n){this.variableNames=["x"];var t=e.windowSize,r=e.batchSize,a=e.inSize,i=e.outSize;this.outputShape=[r,i];var o="0.0",s="";"prod"===n?o="1.0":"min"===n?(o="1.0 / 1e-20",s="min"):"max"===n&&(o="-1.0 / 1e-20",s="max");var u=n+"("+n+"("+n+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===n?u="sumValue":"prod"===n?u="prodValue":"all"===n?u="allValue":"any"===n&&(u="anyValue");var l=4*Math.floor(t/4),c=t%4,d="\n      if ("+("sum"===n)+") {\n        sumValue += dot(values, ones);\n      } else if ("+("prod"===n)+") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = "+s+"(values, minMaxValue);\n      }\n    ",p="vec4";"all"===n?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===n&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");var f="";a%t>0&&(f="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      "),this.userCode="\n      const float initializationValue = "+o+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+f+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+t+";\n\n        vec4 minMaxValue = vec4("+o+");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < "+l+"; i += 4) {\n          int inIdx = inOffset + i;\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+d+"\n        }\n\n        int inIdx = inOffset + "+l+";\n        if ("+(1===c)+") {\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          "+d+"\n        } else if ("+(2===c)+") {\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          "+d+"\n        } else if ("+(3===c)+") {\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          "+d+"\n        }\n        setOutput("+u+");\n      }\n    "};function Vt(e,t,r,a){for(var i=function(e){for(var t=[];0===t.length||1!==t[t.length-1].outSize;){var r=t.length?t[t.length-1].outSize:e[1],a=n.backend_util.computeOptimalWindowSize(r);t.push({inSize:r,windowSize:a,outSize:Math.ceil(r/a)})}return t}(e.shape),o=e,s=0;s<i.length;s++){var u,l=i[s],c=l.inSize,d=l.windowSize,p=l.outSize,f=void 0;f="mean"===r?0===s?new Pt({windowSize:d,inSize:c,batchSize:e.shape[0],outSize:p},c):new Pt({windowSize:d,inSize:c,batchSize:e.shape[0],outSize:p}):new Bt({windowSize:d,inSize:c,batchSize:e.shape[0],outSize:p},r),u=o,o=a.runWebGLProgram(f,[o],t),u.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(u)}return o}var Wt=function(e,n){this.variableNames=["A"];for(var t=new Array(e.length),r=0;r<t.length;r++)t[r]=e[n[r]];this.outputShape=t,this.rank=t.length;var a=Je(this.rank),i=function(e){var n=e.length;if(n>6)throw Error("Transpose for rank "+n+" is not yet supported");for(var t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(n),a=0;a<e.length;a++)r[e[a]]=t[a];return r.join()}(n);this.userCode="\n    void main() {\n      "+a+" resRC = getOutputCoords();\n      setOutput(getA("+i+"));\n    }\n    "};var Mt=function(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var t=new Array(e.length),r=0;r<t.length;r++)t[r]=e[n[r]];if(this.outputShape=t,this.rank=t.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var a=Je(this.rank),i=Kn("rc",this.rank),o=new Array(this.rank);for(r=0;r<n.length;r++)o[n[r]]=i[r];var s="vec2("+o.slice(-2).join()+")",u="++"+i[this.rank-1]+" < "+t[this.rank-1],l="getChannel(getA("+o.join()+"), "+s+")";this.userCode="\n    void main() {\n      "+a+" rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = "+l+";\n      if("+u+") {\n        result[1] = "+l+";\n      }\n      --"+i[this.rank-1]+";\n      if(++"+i[this.rank-2]+" < "+t[this.rank-2]+") {\n        result[2] = "+l+";\n        if("+u+") {\n          result[3] = "+l+";\n        }\n      }\n      setOutput(result);\n    }\n    "};function Gt(e,t,r){var a=n.env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Mt(e.shape,t):new Wt(e.shape,t);return r.runWebGLProgram(a,[e],e.dtype)}function Ut(e){var t=e.inputs,r=e.backend,a=e.attrs;return function(e,t,r,a){var i=t,o=e.shape.length,s=n.util.parseAxisParam(i,e.shape),u=s,l=n.backend_util.getAxesPermutation(u,o),c=null!=l,d=e;c&&(d=Gt(e,l,a),u=n.backend_util.getInnerMostAxes(u.length,o)),n.backend_util.assertAxesAreInnerMostDims("sum",u,o);var p=n.backend_util.computeOutAndReduceShapes(d.shape,u),f=p[0],h=p[1],v=f;r&&(v=n.backend_util.expandShapeToKeepDim(f,s));var x=n.util.sizeFromShape(h),g=Dt({inputs:{x:d},attrs:{shape:[n.util.sizeFromShape(e.shape)/x,x]},backend:a}),m=Vt(g,n.sumOutType(e.dtype),"sum",a),b=Dt({inputs:{x:m},attrs:{shape:v},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(m),c&&a.disposeIntermediateTensorInfo(d),b}(t.x,a.axis,a.keepDims,r)}var zt={kernelName:n.Sum,backendName:"webgl",kernelFunc:Ut};function Xt(e){for(var n,t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.perm,s=r,u=i.shape.length,l=new Array(u),c=0;c<l.length;c++)l[c]=i.shape[o[c]];if(s.shouldExecuteOnCPU([i])){var d=s.texData.get(i.dataId).values,p=Hn(d,i.shape,i.dtype,o,l);n=s.makeTensorInfo(l,i.dtype),s.texData.get(n.dataId).values=p}else n=Gt(i,o,s);return n}var Ht={kernelName:n.Transpose,backendName:"webgl",kernelFunc:Xt};function jt(e){var t=e.a,r=e.b,a=e.transposeA,i=e.transposeB,o=e.backend,s=e.bias,u=void 0===s?null:s,l=e.preluActivationWeights,c=void 0===l?null:l,d=e.leakyreluAlpha,p=void 0===d?0:d,f=e.activation,h=void 0===f?null:f,v=t.shape.length,x=r.shape.length,g=a?t.shape[v-2]:t.shape[v-1],m=i?r.shape[x-1]:r.shape[x-2],b=a?t.shape[v-1]:t.shape[v-2],C=i?r.shape[x-2]:r.shape[x-1],y=t.shape.slice(0,-2),k=r.shape.slice(0,-2),I=n.util.sizeFromShape(y),R=n.util.sizeFromShape(k),w=I===R||1===I||1===R;n.util.assert(v>=2&&x>=2&&w,(function(){return"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of ("+y+") and ("+k+")."}));var T=(I>R?t.shape.slice(0,-2):r.shape.slice(0,-2)).concat([b,C]);n.util.assert(g===m,(function(){return"Error in matMul: inner shapes ("+g+") and ("+m+") of Tensors with shapes "+t.shape+" and "+r.shape+" and transposeA="+a+" and transposeB="+i+" must match."}));var E,N=a?[I,g,b]:[I,b,g],S=i?[R,C,m]:[R,m,C],A=Dt({inputs:{x:t},backend:o,attrs:{shape:N}}),F=Dt({inputs:{x:r},backend:o,attrs:{shape:S}}),_=[A,F],O=Math.max(I,R),D=a?A.shape[1]:A.shape[2],L=null!=u,P=null!=c,B="leakyrelu"===h,V=null!=h?Tt(h,!0):null;if((1===b||1===C)&&D>1e3&&!1===(L||P||B||null!=V)){var W=A,M=F;a&&(W=Xt({inputs:{x:A},backend:o,attrs:{perm:[0,2,1]}}),_.push(W)),i&&(M=Xt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),_.push(M));var G=1===C,U=W;1!==C&&(U=Dt({inputs:{x:W},backend:o,attrs:{shape:[O,D,1]}}),_.push(U));var z=1===C?2:1,X=M;G&&(X=Dt({inputs:{x:M},backend:o,attrs:{shape:[O,1,D]}}),_.push(X));var H=_t({inputs:{a:U,b:X},backend:o});E=Ut({inputs:{x:H},backend:o,attrs:{axis:z,keepDims:!0}}),_.push(H)}else{var j=n.upcastType(t.dtype,r.dtype),K=new Et(N,S,[O,b,C],a,i,L,V,P,B),Y=[A,F];if(null!=u&&Y.push(u),P&&Y.push(c),B){var q=o.makeTensorInfo([],"float32",n.util.createScalarValue(p,"float32"));Y.push(q),_.push(q)}E=o.runWebGLProgram(K,Y,j)}var Q=Dt({inputs:{x:E},backend:o,attrs:{shape:T}});_.push(E);for(var Z=0,J=_;Z<J.length;Z++){var $=J[Z];o.disposeIntermediateTensorInfo($)}return Q}var Kt={kernelName:n._FusedMatMul,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.a,i=n.b,o=n.bias,s=n.preluActivationWeights,u=r.transposeA,l=r.transposeB,c=r.activation;return jt({a:a,b:i,transposeA:u,transposeB:l,backend:t,bias:o,preluActivationWeights:s,leakyreluAlpha:r.leakyreluAlpha,activation:c})}},Yt="return abs(x);";var qt={kernelName:n.Abs,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=r.x;if(a.shouldExecuteOnCPU([i])&&"complex64"!==i.dtype){var o=a.texData.get(i.dataId),s=Wn(o.values);return a.makeTensorInfo(i.shape,i.dtype,s)}return t=n.env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new it(i.shape,Yt):new nt(i.shape,Yt),a.runWebGLProgram(t,[i],i.dtype)}},Qt=Rt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Zt={kernelName:n.Acos,backendName:"webgl",kernelFunc:Qt},Jt=Rt({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),$t={kernelName:n.Acosh,backendName:"webgl",kernelFunc:Jt},er="return a + b;",nr=wt({opSnippet:er,packedOpSnippet:er,supportsComplex:!0,cpuKernelImpl:mn}),tr={kernelName:n.Add,backendName:"webgl",kernelFunc:nr},rr=function(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((function(e,n){return"T"+n}));var t=[];this.variableNames.forEach((function(e){t.push("float v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+t.join("\n        ")+"\n\n        float result = "+r+";\n        setOutput(result);\n      }\n    "},ar=function(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((function(e,n){return"T"+n}));var t=[];this.variableNames.forEach((function(e){t.push("vec4 v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+t.join("\n        ")+"\n\n        vec4 result = "+r+";\n        setOutput(result);\n      }\n    "};var ir={kernelName:n.AddN,backendName:"webgl",kernelFunc:function e(t){var r=t.inputs,a=t.backend,i=r;if(1===i.length)return ht({inputs:{x:i[0]},backend:a});if(i.length>n.env().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var o=Math.floor(i.length/2),s=e({inputs:i.slice(0,o),backend:a}),u=e({inputs:i.slice(o),backend:a});return e({inputs:[s,u],backend:a})}var l=i.map((function(e){return e.dtype})).reduce((function(e,t){return n.upcastType(e,t)})),c=i.map((function(e){return e.shape})),d=n.env().getBool("WEBGL_PACK")?new ar(i[0].shape,c):new rr(i[0].shape,c);return a.runWebGLProgram(d,i,l)}};var or={kernelName:n.All,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.axis,s=a.keepDims,u=i.shape.length,l=n.util.parseAxisParam(o,i.shape),c=l,d=n.backend_util.getAxesPermutation(c,u),p=i;null!=d&&(p=Xt({inputs:{x:i},backend:r,attrs:{perm:d}}),c=n.backend_util.getInnerMostAxes(c.length,u)),n.backend_util.assertAxesAreInnerMostDims("all",c,u);var f,h=n.backend_util.computeOutAndReduceShapes(p.shape,c),v=h[0],x=h[1],g=Dt({inputs:{x:p},backend:r,attrs:{shape:[-1,n.util.sizeFromShape(x)]}}),m=Vt(g,g.dtype,"all",r);return f=Dt(s?{inputs:{x:m},backend:r,attrs:{shape:n.backend_util.expandShapeToKeepDim(v,l)}}:{inputs:{x:m},backend:r,attrs:{shape:v}}),r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),null!=d&&r.disposeIntermediateTensorInfo(p),f}};var sr={kernelName:n.Any,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.axis,s=a.keepDims,u=i.shape.length,l=n.util.parseAxisParam(o,i.shape),c=l,d=n.backend_util.getAxesPermutation(c,u),p=i;null!=d&&(p=Xt({inputs:{x:i},backend:r,attrs:{perm:d}}),c=n.backend_util.getInnerMostAxes(c.length,u)),n.backend_util.assertAxesAreInnerMostDims("any",c,u);var f,h=n.backend_util.computeOutAndReduceShapes(p.shape,c),v=h[0],x=h[1],g=Dt({inputs:{x:p},backend:r,attrs:{shape:[-1,n.util.sizeFromShape(x)]}}),m=Vt(g,g.dtype,"any",r);return f=Dt(s?{inputs:{x:m},backend:r,attrs:{shape:n.backend_util.expandShapeToKeepDim(v,l)}}:{inputs:{x:m},backend:r,attrs:{shape:v}}),r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),null!=d&&r.disposeIntermediateTensorInfo(p),f}},ur=function(e,n,t){this.variableNames=["A"];var r=e.windowSize,a=e.batchSize,i=e.outSize;t||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];var o="max"===n?">":"<",s=t?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+r+";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < "+r+"; i++) {\n          int inIdx = "+s+";\n          float candidate = getA(batch, inIdx);\n          if (candidate "+o+" bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    "},lr=function(e,t,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,n.util.assert(e.length>2,(function(){return"Packed arg"+(r.charAt(0).toUpperCase()+r.slice(1))+" supports only inputs with rank above 2."}));var i=e[e.length-1],o=Math.ceil(i/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");var s,u,l=this.outputShape,c=l.length,d=Je(c),p=Yn("coords",c);if(1===o){var f=Je(u=c+1);s="\n        "+f+" sourceLocR = "+f+"("+p.join()+", 0);\n        ++"+p[c-1]+";\n        "+f+" sourceLocG = "+f+"("+p.join()+", 0);\n        ++"+p[c-2]+";\n        "+f+" sourceLocA = "+f+"("+p.join()+", 0);\n        --"+p[c-1]+";\n        "+f+" sourceLocB = "+f+"("+p.join()+", 0);\n        --"+p[c-2]+";"}else u=c,s="\n        "+d+" sourceLocR = coords;\n        ++"+p[c-1]+";\n        "+d+" sourceLocG = coords;\n        ++"+p[c-2]+";\n        "+d+" sourceLocA = coords;\n        --"+p[c-1]+";\n        "+d+" sourceLocB = coords;\n        --"+p[c-2]+";";var h=["x","y","z","w","u","v"].slice(0,u),v="."+h[u-1],x=h.map((function(e){return"int "+e})),g=Yn("sourceLocR",u-1).concat("inIdx.r"),m=Yn("sourceLocG",u-1).concat("inIdx.g"),b=Yn("sourceLocB",u-1).concat("inIdx.b"),C=Yn("sourceLocA",u-1).concat("inIdx.a"),y="max"===r?"greaterThan":"lessThan",k=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel("+g.join()+"),\n                             getBestIndicesAChannel("+m.join()+"),\n                             getBestIndicesAChannel("+b.join()+"),\n                             getBestIndicesAChannel("+C.join()+")));",I="vec4(\n            getAChannel("+g.join()+"),\n            hasNextCol ? getAChannel("+m.join()+") : 0.,\n            hasNextRow ? getAChannel("+b.join()+") : 0.,\n            hasNextRow && hasNextCol ? getAChannel("+C.join()+") : 0.)",R=a?"":"\n      float getBestIndicesAChannel("+x.join()+") {\n        return getChannel(getBestIndicesA("+h.join()+"),\n                                          vec2("+h.slice(-2).join()+"));\n      }";this.userCode="\n      float getAChannel("+x.join()+") {\n        return getChannel(getA("+h.join()+"),\n                               vec2("+h.slice(-2).join()+"));\n      }\n      "+R+"\n      void main() {\n        "+d+" coords = getOutputCoords();\n        bool hasNextCol = "+p[c-1]+" < "+(l[c-1]-1)+";\n        bool hasNextRow = "+p[c-2]+" < "+(l[c-2]-1)+";\n        "+s+"\n        ivec4 srcIdx = ivec4(sourceLocR"+v+", sourceLocG"+v+",\n          sourceLocB"+v+", sourceLocA"+v+") * "+t+";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = "+I+";\n\n        for (int i = 0; i < "+t+"; i++) {\n          inIdx = srcIdx;\n          "+k+"\n          vec4 candidate = "+I+";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4("+y+"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    "};function cr(e,t,r,a){void 0===a&&(a=null);var i=t.shape[0],o=t.shape[1];null!=a&&(i=a.shape[0],o=a.shape[1]);var s=n.backend_util.computeOptimalWindowSize(o),u={windowSize:s,inSize:o,batchSize:i,outSize:Math.ceil(o/s)},l=new ur(u,r,null==a),c=[t];null!=a&&c.push(a);var d=e.runWebGLProgram(l,c,"int32");if(1===d.shape[1])return d;var p=cr(e,t,r,d);return e.disposeIntermediateTensorInfo(d),p}function dr(e,t,r,a){void 0===a&&(a=null);var i=null!=a?a.shape:t.shape,o=i[i.length-1],s=n.backend_util.computeOptimalWindowSize(o),u=new lr(i,s,r,null==a),l=null==a?[t]:[t,a],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){var d=dr(e,t,r,c);return e.disposeIntermediateTensorInfo(c),d}return c}function pr(e,t,r,a){var i=[r];if(n.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),i,t.shape.length),!n.env().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){var o=[],s=n.backend_util.computeOutAndReduceShapes(t.shape,i),u=s[0],l=s[1],c=n.util.sizeFromShape(l),d=Dt({inputs:{x:t},backend:e,attrs:{shape:[-1,c]}});o.push(d);var p=cr(e,d,a);o.push(p);var f=Dt({inputs:{x:p},backend:e,attrs:{shape:u}});return o.forEach((function(n){return e.disposeIntermediateTensorInfo(n)})),f}return dr(e,t,a)}var fr={kernelName:n.ArgMax,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.axis,s=n.util.parseAxisParam(o,i.shape),u=n.backend_util.getAxesPermutation(s,i.shape.length),l=i,c=[];null!=u&&(l=Xt({inputs:{x:i},backend:r,attrs:{perm:u}}),c.push(l),s=n.backend_util.getInnerMostAxes(s.length,l.shape.length)),n.backend_util.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);var d=pr(r,l,s[0],"max");return c.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),d}};var hr={kernelName:n.ArgMin,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.axis,s=n.util.parseAxisParam(o,i.shape),u=n.backend_util.getAxesPermutation(s,i.shape.length),l=i,c=[];null!=u&&(l=Xt({inputs:{x:i},backend:r,attrs:{perm:u}}),c.push(l),s=n.backend_util.getInnerMostAxes(s.length,l.shape.length)),n.backend_util.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);var d=pr(r,l,s[0],"min");return c.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),d}},vr=Rt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),xr={kernelName:n.Asin,backendName:"webgl",kernelFunc:vr},gr=Rt({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),mr={kernelName:n.Asinh,backendName:"webgl",kernelFunc:gr},br=Rt({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Cr={kernelName:n.Atan,backendName:"webgl",kernelFunc:br},yr=wt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),kr={kernelName:n.Atan2,backendName:"webgl",kernelFunc:yr},Ir=Rt({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Rr={kernelName:n.Atanh,backendName:"webgl",kernelFunc:Ir},wr=function(e,n,t,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===n&&t)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,o=e.strideHeight,s=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;var h="avg"===n,v="((batch  * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + d",x="(xR * "+e.inWidth+" + xC) * "+e.inChannels+" + d",g="0.0";if(h||(g="-1.0 / 1e-20"),t)this.userCode="\n        const ivec2 strides = ivec2("+o+", "+s+");\n        const ivec2 pads = ivec2("+p+", "+f+");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < "+c+";\n              wR += "+u+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+d+";\n                wC += "+l+") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = "+(r?a?v:x:"wR * "+d+" + wC")+";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var m=n+"("+n+"("+n+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===n&&(m="avgValue / count");var b=4*Math.floor(i/4),C=i%4,y="\n      if ("+h+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec2 strides = ivec2("+o+", "+s+");\n      const ivec2 pads = ivec2("+p+", "+f+");\n      const float initializationValue = "+g+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+g+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < "+c+";\n            wR += "+u+") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+b+"; wC += 4) {\n            int xC = xCCorner + wC * "+l+";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              getValue(batch, xR, xC + 3 * "+l+", d)\n            );\n\n            "+y+"\n          }\n\n          int xC = xCCorner + "+b+";\n          if ("+(1===C)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            "+y+"\n          } else if ("+(2===C)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              initializationValue,\n              initializationValue\n            );\n\n            "+y+"\n          } else if ("+(3===C)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              initializationValue\n            );\n\n            "+y+"\n          }\n        }\n        setOutput("+m+");\n      }\n    "}},Tr=function(e,n,t,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===n&&t)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,o=e.strideDepth,s=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,v=e.padInfo.front,x=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;var m="avg"===n,b="0.0";if(m||(b="-1.0 / 1e-20"),t)this.userCode="\n        const ivec3 strides =\n            ivec3("+o+", "+s+", "+u+");\n        const ivec3 pads = ivec3("+v+", "+x+", "+g+");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < "+p+";\n              wD += "+l+") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int wR = 0; wR < "+f+";\n                wR += "+c+") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int wC = 0; wC < "+h+";\n                  wC += "+d+") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = "+(r?a?"(((batch * "+e.inDepth+" + xD) * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"((xD * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"wD * "+f+" * "+h+" +\n                      wR * "+h+" + wC")+";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var C=n+"("+n+"("+n+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===n&&(C="avgValue / count");var y=4*Math.floor(i/4),k=i%4,I="\n      if ("+m+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec3 strides =\n        ivec3("+o+", "+s+", "+u+");\n      const ivec3 pads = ivec3("+v+", "+x+", "+g+");\n      const float initializationValue = "+b+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+b+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < "+p+";\n            wD += "+l+") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+f+";\n            wR += "+c+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+y+"; wC += 4) {\n              int xC = xCCorner + wC * "+d+";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+d+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+d+", ch),\n                getValue(batch, xD, xR, xC + 3 * "+d+", ch)\n              );\n\n              "+I+"\n            }\n\n            int xC = xCCorner + "+y+";\n            if ("+(1===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(2===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+d+", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(3===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+d+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+d+", ch),\n                initializationValue\n              );\n\n              "+I+"\n            }\n          }\n          setOutput("+C+");\n        }\n      }\n    "}};var Er={kernelName:n.AvgPool,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x;ie(i,"avgPool");var o=a.filterSize,s=a.strides,u=a.pad,l=a.dimRoundingMode;n.util.assert(n.backend_util.eitherStridesOrDilationsAreOne(s,1),(function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+s+" and dilations '1'"}));var c=n.backend_util.computePool2DInfo(i.shape,o,s,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&n.util.arraysEqual(c.inShape,c.outShape))return ht({inputs:{x:i},backend:r});var d=new wr(c,"avg",!1);return r.runWebGLProgram(d,[i],"float32")}};var Nr={kernelName:n.AvgPool3D,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.filterSize,s=a.strides,u=a.pad,l=a.dimRoundingMode,c=a.dataFormat,d=n.backend_util.computePool3DInfo(i.shape,o,s,[1,1,1],u,l,c),p=new Tr(d,"avg",!1);return r.runWebGLProgram(p,[i],"float32")}},Sr=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var n=e.filterHeight,t=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,o=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=s-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(n*t);this.userCode="\n      const ivec2 pads = ivec2("+l+", "+c+");\n      const float avgMultiplier = float("+d+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+s+";\n            wR += "+i+") {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+u+";\n            wC+= "+o+") {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ar=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var n=e.filterDepth,t=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=c-1-e.padInfo.front,h=d-1-e.padInfo.top,v=p-1-e.padInfo.left,x=1/(n*t*r);this.userCode="\n      const ivec3 pads = ivec3("+f+", "+h+", "+v+");\n      const float avgMultiplier = float("+x+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+c+";\n            wD += "+s+") {\n          float dyD = float(dyDCorner + wD) / "+a+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+d+";\n              wR += "+u+") {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+p+";\n                wC += "+l+") {\n              float dyC = float(dyCCorner + wC) / "+o+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "};var Fr={kernelName:n.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.dy,o=t.input,s=a.filterSize,u=a.strides,l=a.pad,c=a.dimRoundingMode,d=n.backend_util.computePool3DInfo(o.shape,s,u,[1,1,1],l,c),p=new Ar(d);return r.runWebGLProgram(p,[i],o.dtype)}};var _r={kernelName:n.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.dy,o=t.input,s=o;ie([i,o],"avgPoolGrad");var u=a.filterSize,l=a.strides,c=a.pad,d=n.backend_util.computePool2DInfo(s.shape,u,l,1,c),p=new Sr(d);return r.runWebGLProgram(p,[i],s.dtype)}};var Or={kernelName:n.BatchMatMul,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs;return jt({a:n.a,b:n.b,transposeA:r.transposeA,transposeB:r.transposeB,backend:t})}},Dr=function(e,t,r,a,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],n.backend_util.assertAndGetBroadcastShape(e,t),n.backend_util.assertAndGetBroadcastShape(e,r);var s="0.0";null!=a&&(n.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var u="1.0";null!=i&&(n.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = "+s+";\n        float scale = "+u+";\n        float inv = scale * inversesqrt(variance + float("+o+"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    "},Lr=function(e,t,r,a,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],n.backend_util.assertAndGetBroadcastShape(e,t),n.backend_util.assertAndGetBroadcastShape(e,r);var s="vec4(0.0)";null!=a&&(n.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var u="vec4(1.0)";null!=i&&(n.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = "+s+";\n        vec4 scale = "+u+";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4("+o+"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    "},Pr={kernelName:n.FusedBatchNorm,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.mean,s=t.variance,u=t.offset,l=t.scale;n.util.assert(o.shape.length===s.shape.length,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),n.util.assert(null==u||o.shape.length===u.shape.length,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),n.util.assert(null==l||o.shape.length===l.shape.length,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}));var c=a.varianceEpsilon;null==c&&(c=.001);var d=[i,o,s],p=null;null!=u&&(p=u.shape,d.push(u));var f=null;null!=l&&(f=l.shape,d.push(l));var h=n.env().getBool("WEBGL_PACK_NORMALIZATION")?new Lr(i.shape,o.shape,s.shape,p,f,c):new Dr(i.shape,o.shape,s.shape,p,f,c);return r.runWebGLProgram(h,d,d[0].dtype)}},Br=function(){function e(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var n,t=Je(this.rank),r="uniform int start["+this.rank+"];",a=function(e){if(1===e)return"sourceLoc";if(e<=6)return Vr.slice(0,e).map((function(e){return"sourceLoc."+e})).join(",");throw Error("Slicing for rank "+e+" is not yet supported")}(this.rank);n="\n        "+t+" sourceLoc;\n        "+t+" coords = getOutputCoords();\n        "+e.map((function(e,n){return"sourceLoc."+Vr[n]+" = start["+n+"] + coords."+Vr[n]+";"})).join("\n")+"\n      ",this.userCode="\n      "+r+"\n      void main() {\n        "+n+"\n        setOutput(getSource("+a+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var n=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(t,r){null==n.startLoc&&(n.startLoc=t.getUniformLocationNoThrow(r,"start"),null==n.startLoc)||t.gl.uniform1iv(n.startLoc,e)}},e}(),Vr=["x","y","z","w","u","v"];var Wr=function(){function e(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var n=Je(this.rank),t=Yn("coords",this.rank),r=Yn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2("+r.slice(-2).join()+")",i="getChannel(getSource("+r.join()+"), "+a+")",o="\n      result.x = "+i+";\n      if (++"+t[this.rank-1]+" < "+e[this.rank-1]+") {\n        ++"+r[this.rank-1]+";\n        result.y = "+i+";\n        --"+r[this.rank-1]+";\n      }\n    ",s=1===this.rank?"":"\n      --"+t[this.rank-1]+";\n      if (++"+t[this.rank-2]+" < "+e[this.rank-2]+") {\n        ++"+r[this.rank-2]+";\n        result.z = "+i+";\n        if (++"+t[this.rank-1]+" < "+e[this.rank-1]+") {\n          ++"+r[this.rank-1]+";\n          result.w = "+i+";\n        }\n      }\n    ",u=this.rank<=4?"sourceLoc = coords +\n            "+n+"("+e.map((function(e,n){return"start["+n+"]"})).join()+");":e.map((function(e,n){return r[n]+" = "+t[n]+" + start["+n+"];"})).join("\n");this.userCode="\n      uniform int start["+this.rank+"];\n      void main() {\n        "+n+" coords = getOutputCoords();\n        "+n+" sourceLoc;\n        "+u+"\n        vec4 result = vec4(0.);\n        "+o+"\n        "+s+"\n        setOutput(result);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var n=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(t,r){null==n.startLoc&&(n.startLoc=t.getUniformLocationNoThrow(r,"start"),null==n.startLoc)||t.gl.uniform1iv(n.startLoc,e)}},e}();function Mr(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.begin,s=a.size,u=n.slice_util.parseSliceParams(i,o,s),l=u[0],c=u[1];if(n.slice_util.assertParamsValid(i,l,c),0===n.util.sizeFromShape(c))return r.makeTensorInfo(c,i.dtype,[]);if(r.shouldExecuteOnCPU([i])||"string"===i.dtype){var d=r.texData.get(i.dataId),p=Mn(d.values,l,c,i.shape,i.dtype);return r.makeTensorInfo(c,i.dtype,p)}var f=r.texData.get(i.dataId).isPacked,h=n.slice_util.isSliceContinous(i.shape,l,c);if(f||!h){var v=n.env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wr(c):new Br(c),x=v.getCustomSetupFunc(l);return r.runWebGLProgram(v,[i],i.dtype,x)}return r.uploadToGPU(i.dataId),function(e,t,r,a){var i=a.texData.get(e.dataId),o=a.makeTensorInfo(r,e.dtype),s=a.texData.get(o.dataId);Object.assign(s,i),s.refCount=1,s.shape=r,s.dtype=e.dtype;var u=n.slice_util.computeFlatOffset(t,n.util.computeStrides(e.shape));i.slice&&(u+=i.slice.flatOffset),s.slice={flatOffset:u,origDataId:i.slice&&i.slice.origDataId||e.dataId};var l=a.dataRefCount.get(s.slice.origDataId)||1;return a.dataRefCount.set(s.slice.origDataId,l+1),o}(i,l,c,r)}var Gr={kernelName:n.Slice,backendName:"webgl",kernelFunc:Mr},Ur={kernelName:n.BatchToSpaceND,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.blockShape,s=a.crops;n.util.assert(i.shape.length<=4,(function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"}));var u=o.reduce((function(e,n){return e*n})),l=n.backend_util.getReshaped(i.shape,o,u),c=n.backend_util.getPermuted(l.length,o.length),d=n.backend_util.getReshapedPermuted(i.shape,o,u),p=n.backend_util.getSliceBeginCoords(s,o.length),f=n.backend_util.getSliceSize(d,s,o.length),h=[],v=Dt({inputs:{x:i},backend:r,attrs:{shape:l}}),x=Xt({inputs:{x:v},backend:r,attrs:{perm:c}}),g=Dt({inputs:{x:x},backend:r,attrs:{shape:d}}),m=Mr({inputs:{x:g},backend:r,attrs:{begin:p,size:f}});return h.push(v),h.push(x),h.push(g),h.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),m}};var zr={kernelName:n.Bincount,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.x,i=n.weights,o=r.size,s=t.readSync(a.dataId),u=t.readSync(i.dataId),l=bn(s,u,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,l)}},Xr=wt({opSnippet:"return float(a != b);",dtype:"bool"}),Hr={kernelName:n.NotEqual,backendName:"webgl",kernelFunc:Xr};function jr(e){var n=e.inputs,t=e.backend,r=n.input;return ht({inputs:{x:t.texData.get(r.dataId).complexTensorInfos.real},backend:t})}var Kr={kernelName:n.Real,backendName:"webgl",kernelFunc:jr};var Yr={kernelName:n.Cast,backendName:"webgl",kernelFunc:function e(t){var r=t.inputs,a=t.backend,i=t.attrs,o=r.x,s=i.dtype;if("complex64"===s){if("complex64"===o.dtype)return ht({inputs:{x:o},backend:a});var u=n.zeros(o.shape),l=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),c=xt({inputs:{real:l,imag:u},backend:a});return u.dispose(),a.disposeIntermediateTensorInfo(l),c}if("complex64"===o.dtype){var d=jr({inputs:{input:o},backend:a}),c=e({inputs:{x:d},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(d),c}if(!n.util.hasEncodingLoss(o.dtype,s))return{dataId:(c=ht({inputs:{x:o},backend:a})).dataId,shape:c.shape,dtype:s};if("int32"===s)return function(e,n){var t=new nt(e.shape,"return float(int(x));"),r=n.runWebGLProgram(t,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,a);if("bool"===s){var p=a.makeTensorInfo([],"bool",n.util.getTypedArrayFromDType("bool",1));c=Xr({inputs:{a:o,b:p},backend:a});return a.disposeIntermediateTensorInfo(p),c}throw new Error("Error in Cast: failed to cast "+o.dtype+" to "+s)}},qr="return ceil(x);",Qr=Rt({opSnippet:qr,packedOpSnippet:qr,cpuKernelImpl:yn}),Zr={kernelName:n.Ceil,backendName:"webgl",kernelFunc:Qr},Jr=function(){function e(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,n){var t=this;return function(r,a){null==t.minLoc&&(t.minLoc=r.getUniformLocationNoThrow(a,"minVal"),t.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(t.minLoc,e),r.gl.uniform1f(t.maxLoc,n)}},e}(),$r=function(){function e(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,n){var t=this;return function(r,a){null==t.minLoc&&(t.minLoc=r.getUniformLocationNoThrow(a,"minVal"),t.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(t.minLoc,e),r.gl.uniform1f(t.maxLoc,n)}},e}();var ea={kernelName:n.ClipByValue,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=e.attrs,o=r.x,s=i.clipValueMin,u=i.clipValueMax,l=(t=n.env().getBool("WEBGL_PACK_CLIP")?new $r(o.shape):new Jr(o.shape)).getCustomSetupFunc(s,u);return a.runWebGLProgram(t,[o],o.dtype,l)}},na=function(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "};function ta(e,n){return{dataId:n.dataId,dtype:n.dtype,shape:e.shape}}var ra={kernelName:n.ComplexAbs,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=n.x,a=t.texData.get(r.dataId),i=new na(r.shape),o=[ta(r,a.complexTensorInfos.real),ta(r,a.complexTensorInfos.imag)];return t.runWebGLProgram(i,o,o[0].dtype)}},aa=function(e){this.outputShape=[],this.outputShape=n.backend_util.computeOutShape(e,1),this.variableNames=e.map((function(e,n){return"T"+n}));var t=new Array(e.length-1);t[0]=e[0][1];for(var r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];var a=["if (yC < "+t[0]+") setOutput(getT0(yR, yC));"];for(r=1;r<t.length;r++){var i=t[r-1];a.push("else if (yC < "+t[r]+") setOutput(getT"+r+"(yR, yC-"+i+"));")}var o=t.length,s=t[t.length-1];a.push("else setOutput(getT"+o+"(yR, yC-"+s+"));"),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        "+a.join("\n        ")+"\n      }\n    "},ia=function(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=n.backend_util.computeOutShape(e,t);var r=this.outputShape,a=r.length,i=Je(a),o=Yn("coords",a),s=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((function(e,n){return"T"+n}));var u=new Array(e.length-1);u[0]=e[0][t];for(var l=1;l<u.length;l++)u[l]=u[l-1]+e[l][t];var c=s[t],d=s.slice(-2),p=s.join(),f="if ("+c+" < "+u[0]+") {\n        return getChannel(\n            getT0("+p+"), vec2("+d.join()+"));\n        }";for(l=1;l<u.length;l++){var h=u[l-1];f+="\n        if ("+c+" < "+u[l]+"  && "+c+" >= "+u[l-1]+") {\n          return getChannel(\n            getT"+l+"("+oa(s,c,h)+"),\n            vec2("+oa(d,c,h)+"));\n        }"}var v=u.length,x=u[u.length-1];f+="\n        return getChannel(\n          getT"+v+"("+oa(s,c,x)+"),\n          vec2("+oa(d,c,x)+"));",this.userCode="\n      float getValue("+s.map((function(e){return"int "+e}))+") {\n        "+f+"\n      }\n\n      void main() {\n        "+i+" coords = getOutputCoords();\n        vec4 result = vec4(getValue("+o+"), 0., 0., 0.);\n\n        "+o[a-1]+" = "+o[a-1]+" + 1;\n        if ("+o[a-1]+" < "+r[a-1]+") {\n          result.g = getValue("+o+");\n        }\n\n        "+o[a-2]+" = "+o[a-2]+" + 1;\n        if ("+o[a-2]+" < "+r[a-2]+") {\n          result.a = getValue("+o+");\n        }\n\n        "+o[a-1]+" = "+o[a-1]+" - 1;\n        if ("+o[a-2]+" < "+r[a-2]+" &&\n            "+o[a-1]+" < "+r[a-1]+") {\n          result.b = getValue("+o+");\n        }\n        setOutput(result);\n      }\n    "};function oa(e,n,t){var r=e.indexOf(n);return e.map((function(e,n){return n===r?e+" - "+t:e})).join()}function sa(e){var n=e.inputs,t=e.backend,r=n.input;return ht({inputs:{x:t.texData.get(r.dataId).complexTensorInfos.imag},backend:t})}var ua={kernelName:n.Imag,backendName:"webgl",kernelFunc:sa};function la(e,t,r){var a=e[0].dtype;if("complex64"===a){var i=e.map((function(e){return jr({inputs:{input:e},backend:r})})),o=e.map((function(e){return sa({inputs:{input:e},backend:r})})),s=la(i,t,r),u=la(o,t,r),l=xt({inputs:{real:s,imag:u},backend:r});return i.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),o.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(u),l}if("string"===a){var c=ca(e,t,r),d=c.tensors2D,p=c.outShape,f=d.map((function(e){return{vals:r.readSync(e.dataId),shape:e.shape}})),h=1===d[0].shape[0],v=kn(f,p,a,h),x=n.backend_util.computeOutShape(e.map((function(e){return e.shape})),t),g=r.makeTensorInfo(x,a,v);return d.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),g}if(e.length>n.env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var m=Math.floor(e.length/2),b=la(e.slice(0,m),t,r),C=la(e.slice(m),t,r),y=la([b,C],t,r);return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(C),y}if(n.env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){var k=new ia(e.map((function(e){return e.shape})),t);return r.runWebGLProgram(k,e,a)}var I=ca(e,t,r),R=I.tensors2D,w=I.outShape,T=new aa(R.map((function(e){return e.shape}))),E=r.runWebGLProgram(T,R,a);R.forEach((function(e){return r.disposeIntermediateTensorInfo(e)}));var N=Dt({inputs:{x:E},attrs:{shape:w},backend:r});return r.disposeIntermediateTensorInfo(E),N}function ca(e,t,r){var a=n.backend_util.computeOutShape(e.map((function(e){return e.shape})),t);return{tensors2D:e.map((function(e){return Dt({inputs:{x:e},attrs:{shape:[-1,n.util.sizeFromShape(e.shape.slice(t))]},backend:r})})),outShape:a}}function da(e){var t=e.inputs,r=e.backend,a=e.attrs.axis,i=n.util.parseAxisParam(a,t[0].shape)[0],o=n.backend_util.computeOutShape(t.map((function(e){return e.shape})),i);if(0===n.util.sizeFromShape(o))return r.makeTensorInfo(o,t[0].dtype,[]);var s=t.filter((function(e){return n.util.sizeFromShape(e.shape)>0}));if(1===s.length)return ht({inputs:{x:s[0]},backend:r});var u=s.map((function(e){return e.shape}));return n.backend_util.assertParamsConsistent(u,i),la(s,i,r)}var pa={kernelName:n.Concat,backendName:"webgl",kernelFunc:da},fa=function(e,n,t,r,a){void 0===n&&(n=!1),void 0===t&&(t=null),void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var i=e.padInfo.top,o=e.padInfo.left,s=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=4*Math.floor(e.inChannels/4),h=e.inChannels%4,v="channelsLast"===e.dataFormat,x=v?1:2,g=v?2:3,m=v?3:1,b="",C="";t&&(b=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+t+"\n        }":a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          "+t+"\n        }":"\n          float activation(float x) {\n            "+t+"\n          }\n        ",C="result = activation(result);");var y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      "+b+"\n\n      const ivec2 strides = ivec2("+s+", "+u+");\n      const ivec2 pads = ivec2("+i+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords["+m+"];\n\n        ivec2 xRCCorner =\n            ivec2(coords["+x+"], coords["+g+"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+d+"; wR++) {\n          int xR = xRCorner + wR * "+l+";\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+p+"; wC++) {\n            int xC = xCCorner + wC * "+c+";\n\n            if (xC < 0 || xC >= "+e.inWidth+") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < "+f+"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if ("+v+") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if ("+(1===h)+") {\n\n              if ("+v+") {\n                dotProd +=\n                    getX(batch, xR, xC, "+f+") *\n                    getW(wR, wC, "+f+", d2);\n              } else {\n                dotProd +=\n                    getX(batch, "+f+", xR, xC) *\n                    getW(wR, wC, "+f+", d2);\n              }\n\n            } else if ("+(2===h)+") {\n              vec2 wValues = vec2(\n                getW(wR, wC, "+f+", d2),\n                getW(wR, wC, "+f+" + 1, d2)\n              );\n\n              if ("+v+") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, "+f+"),\n                  getX(batch, xR, xC, "+f+" + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, "+f+", xR, xC),\n                  getX(batch, "+f+" + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if ("+(3===h)+") {\n              vec3 wValues = vec3(\n                getW(wR, wC, "+f+", d2),\n                getW(wR, wC, "+f+" + 1, d2),\n                getW(wR, wC, "+f+" + 2, d2)\n              );\n\n              if ("+v+") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, "+f+"),\n                  getX(batch, xR, xC, "+f+" + 1),\n                  getX(batch, xR, xC, "+f+" + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, "+f+", xR, xC),\n                  getX(batch, "+f+" + 1, xR, xC),\n                  getX(batch, "+f+" + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        "+y+"\n        "+C+"\n        setOutput(result);\n      }\n    "},ha=function(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var n=e.padInfo.front,t=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=4*Math.floor(e.inChannels/4),h=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3("+a+", "+i+", "+o+");\n      const ivec3 pads = ivec3("+n+", "+t+", "+r+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+c+"; wF++) {\n          int xF = xFCorner + wF * "+s+";\n\n          if (xF < 0 || xF >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+d+"; wR++) {\n            int xR = xRCorner + wR * "+u+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+p+"; wC++) {\n              int xC = xCCorner + wC * "+l+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < "+f+"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if ("+(1===h)+") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, "+f+") *\n                  getW(wF, wR, wC, "+f+", d2);\n              } else if ("+(2===h)+") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, "+f+"),\n                  getX(batch, xF, xR, xC, "+f+" + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, "+f+", d2),\n                  getW(wF, wR, wC, "+f+" + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if ("+(3===h)+") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, "+f+"),\n                  getX(batch, xF, xR, xC, "+f+" + 1),\n                  getX(batch, xF, xR, xC, "+f+" + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, "+f+", d2),\n                  getW(wF, wR, wC, "+f+" + 1, d2),\n                  getW(wF, wR, wC, "+f+" + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},va=function(e,n,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var r=t.filterWidth,a=t.inChannels,i=t.strideWidth,o=t.strideHeight,s=t.padInfo,u=t.outWidth,l=t.dilationWidth,c=t.dilationHeight,d=t.dataFormat,p=s.left,f=s.top,h=a*r,v=ue(),x="channelsLast"===d,g=x?0:1,m=x?1:2,b="",C=0;C<=1;C++)for(var y=0;y<=1;y++)b+="\n          blockIndex = rc.y + "+y+";\n          pos = rc.x + "+C+";\n\n          if(blockIndex < "+e[1]+" && pos < "+e[0]+") {\n            offsetY = int(blockIndex / ("+u+")) * "+o+" - "+f+";\n            d0 = offsetY + "+c+" * (pos / "+h+");\n\n            if(d0 < "+n[g]+" && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), "+u+".) * "+i+". - "+p+".);\n              d1 = offsetX + "+l+" * (int(mod(float(pos), "+h+".) / "+a+".));\n\n              if(d1 < "+n[m]+" && d1 >= 0) {\n\n                ch = int(mod(float(pos), "+a+".));\n\n                if ("+x+") {\n                  innerDims = vec2(d1, ch);\n                  result["+(2*C+y)+"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result["+(2*C+y)+"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ";this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        "+b+"\n\n        "+v.output+" = result;\n      }\n    "};function xa(e){var t,r=e.x,a=e.filter,i=e.convInfo,o=e.backend,s=e.bias,u=void 0===s?null:s,l=e.preluActivationWeights,c=void 0===l?null:l,d=e.leakyreluAlpha,p=void 0===d?0:d,f=e.activation,h=void 0===f?null:f,v=r.shape,x=o.texData.get(r.dataId),g=i.inChannels,m=v[0]*v[1]*v[2],b=i.outChannels,C="channelsLast"===i.dataFormat,y=[],k=(1===m||1===b)&&g>1e3,I=v[2]%2!=0&&!!x.isPacked;if(!k&&n.env().getBool("WEBGL_LAZILY_UNPACK")&&n.env().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&I){N=C?v[0]*v[1]*(v[2]+1):v[0]*v[2]*(v[3]+1);var R={dataId:r.dataId,shape:[1,N,i.inChannels],dtype:r.dtype},w=x.shape;x.shape=x.shape.slice(),x.shape[x.shape.length-2]++,n.util.assert(q(x.shape,R.shape),(function(){return"packed reshape "+x.shape+" to "+R.shape+" isn't free"}));S=Dt({inputs:{x:a},backend:o,attrs:{shape:[1,i.inChannels,i.outChannels]}});y.push(S);var T=jt({a:R,b:S,backend:o,transposeA:false,transposeB:false,bias:u,activation:h,preluActivationWeights:c,leakyreluAlpha:p}),E=o.texData.get(T.dataId);n.util.assert(E.isPacked,(function(){return"batchMatMul result is expected to be packed"})),x.shape=w,E.shape=i.outShape,(t=ht({inputs:{x:T},backend:o})).shape=i.outShape,y.push(T)}else{var N,S,A=Dt({inputs:{x:r},backend:o,attrs:{shape:[1,N=C?v[0]*v[1]*v[2]:v[0]*v[2]*v[3],i.inChannels]}}),F=jt({a:A,b:S=Dt({inputs:{x:a},backend:o,attrs:{shape:[1,i.inChannels,i.outChannels]}}),transposeA:false,transposeB:false,backend:o,bias:u,activation:h,preluActivationWeights:c,leakyreluAlpha:p});t=Dt({inputs:{x:F},backend:o,attrs:{shape:i.outShape}}),y.push(A),y.push(S),y.push(F)}for(var _=0,O=y;_<O.length;_++){var D=O[_];o.disposeIntermediateTensorInfo(D)}return t}function ga(e){var t=e.x,r=e.filter,a=e.convInfo,i=e.backend,o=e.bias,s=void 0===o?null:o,u=e.preluActivationWeights,l=void 0===u?null:u,c=e.leakyreluAlpha,d=void 0===c?0:c,p=e.activation,f=void 0===p?null:p,h=a.filterWidth,v=a.filterHeight,x=a.inChannels,g=a.outWidth,m=a.outHeight,b="channelsLast"===a.dataFormat,C=h*v*x,y=m*g,k=[C,y],I=[],R=Dt({inputs:{x:t},backend:i,attrs:{shape:t.shape.slice(1)}}),w=Dt({inputs:{x:r},backend:i,attrs:{shape:[1,C,n.util.sizeFromShape(r.shape)/C]}});I.push(R),I.push(w);var T=new va(k,R.shape,a),E=i.runWebGLProgram(T,[R],"float32"),N=Dt({inputs:{x:E},backend:i,attrs:{shape:[1,k[0],k[1]]}});I.push(E),I.push(N);var S=null!=s,A=null!=l,F="leakyrelu"===f,_=f?Tt(f,!0):null,O=new Et(N.shape,w.shape,[1,y,a.outChannels],!0,!1,S,_,A,F),D=[N,w];if(s&&D.push(s),A&&D.push(l),F){var L=i.makeTensorInfo([],"float32",n.util.createScalarValue(d,"float32"));D.push(L),I.push(L)}var P=i.runWebGLProgram(O,D,"float32"),B=Dt({inputs:{x:P},backend:i,attrs:{shape:b?[1,m,g,a.outChannels]:[1,a.outChannels,m,g]}});I.push(P);for(var V=0,W=I;V<W.length;V++){var M=W[V];i.disposeIntermediateTensorInfo(M)}return B}var ma={kernelName:n.Conv2D,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=e.attrs,o=r.x,s=r.filter,u=i.strides,l=i.pad,c=i.dataFormat,d=i.dilations,p=i.dimRoundingMode,f=n.backend_util.convertConv2DDataFormat(c),h=n.backend_util.computeConv2DInfo(o.shape,s.shape,u,d,l,p,!1,f);if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(n.env().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])t=ga({x:o,filter:s,convInfo:h,backend:a});else{var v=new fa(h);t=a.runWebGLProgram(v,[o,s],"float32")}else t=xa({x:o,filter:s,convInfo:h,backend:a});var x=Dt({inputs:{x:t},backend:a,attrs:{shape:h.outShape}});return a.disposeIntermediateTensorInfo(t),x}},ba=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var n=e.strideHeight,t=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+n+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+t+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              if ("+i+") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ca=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var n=e.filterHeight,t=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,o=n-1-e.padInfo.top,s=t-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode="\n      const ivec2 pads = ivec2("+o+", "+s+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords["+c+"];\n\n        ivec2 dyCorner = ivec2(coords["+u+"], coords["+l+"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+n+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+n+" - 1 - wR;\n\n          for (int wC = 0; wC < "+t+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+t+" - 1 - wC;\n\n            for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n\n              if ("+i+") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ya=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var n=e.strideDepth,t=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yF = 0; yF < "+e.outDepth+"; yF++) {\n            int xF = wF + yF * "+n+" - "+a+";\n\n            if (xF < 0 || xF >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n              int xR = wR + yR * "+t+" - "+i+";\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n                int xC = wC + yC * "+r+" - "+o+";\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ka=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var n=e.filterDepth,t=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,o=e.strideWidth,s=n-1-e.padInfo.front,u=t-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3("+s+", "+u+", "+l+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+n+"; wF++) {\n          float dyF = float(dyFCorner + wF) / "+a+".0;\n\n          if (dyF < 0.0 || dyF >= "+e.outDepth+".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = "+n+" - 1 - wF;\n\n          for (int wR = 0; wR < "+t+"; wR++) {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = "+t+" - 1 - wR;\n\n            for (int wC = 0; wC < "+r+"; wC++) {\n              float dyC = float(dyCCorner + wC) / "+o+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = "+r+" - 1 - wC;\n\n              for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "};var Ia={kernelName:n.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.dy,s=a.strides,u=a.pad,l=a.dataFormat,c=a.dimRoundingMode,d=a.filterShape,p=n.backend_util.convertConv2DDataFormat(l),f=n.backend_util.computeConv2DInfo(i.shape,d,s,1,u,c,!1,p),h=new ba(f);return r.runWebGLProgram(h,[i,o],"float32")}};var Ra={kernelName:n.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.dy,o=t.filter,s=a.inputShape,u=a.strides,l=a.pad,c=a.dataFormat,d=a.dimRoundingMode,p=n.backend_util.convertConv2DDataFormat(c),f=n.backend_util.computeConv2DInfo(s,o.shape,u,1,l,d,!1,p),h=new Ca(f);return r.runWebGLProgram(h,[i,o],"float32")}};var wa={kernelName:n.Conv3D,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.filter,s=a.strides,u=a.pad,l=a.dilations,c=n.backend_util.computeConv3DInfo(i.shape,o.shape,s,l,u),d=new ha(c);return r.runWebGLProgram(d,[i,o],"float32")}};var Ta={kernelName:n.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.dy,s=a.strides,u=a.pad,l=a.filterShape,c=n.backend_util.computeConv3DInfo(i.shape,l,s,1,u),d=new ya(c);return r.runWebGLProgram(d,[i,o],"float32")}};var Ea={kernelName:n.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.dy,o=t.filter,s=a.pad,u=a.strides,l=a.inputShape,c=n.backend_util.computeConv3DInfo(l,o.shape,u,1,s),d=new ka(c);return r.runWebGLProgram(d,[i,o],"float32")}},Na=Rt({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Sa={kernelName:n.Cos,backendName:"webgl",kernelFunc:Na},Aa=Rt({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Fa={kernelName:n.Cosh,backendName:"webgl",kernelFunc:Aa},_a=function(e,n,t,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var i=e[0],o=e[1],s=e[2],u=e[3],l=n[0],c=t[0],d=t[1];this.outputShape=[l,c,d,u];var p="bilinear"===r?1:0,f=[o-1+".0",s-1+".0"],h=f[0],v=f[1],x=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio","y1*"+h+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+h],g=x[0],m=x[1],b=x[2],C=d>1?[""+(s-1)/(d-1),"(x2-x1) * width_ratio","x1*"+v+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+v],y=C[0],k=C[1],I=C[2];this.userCode="\n      const float height_ratio = float("+g+");\n      const float width_ratio = float("+y+");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= "+i+") {\n          return;\n        }\n\n        float height_scale = "+m+";\n        float width_scale = "+k+";\n\n        float in_y = "+b+";\n        if( in_y < 0.0 || in_y > "+h+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n        float in_x = "+I+";\n        if( in_x < 0.0 || in_x > "+v+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if("+p+" == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    "},Oa={kernelName:n.CropAndResize,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.image,i=n.boxes,o=n.boxInd,s=r.cropSize,u=r.method,l=r.extrapolationValue,c=new _a(a.shape,i.shape,s,u,l);return t.runWebGLProgram(c,[a,i,o],"float32")}},Da=function(){function e(e,n,t){this.variableNames=["x"],this.outputShape=e;var r=e.length,a=n?"0.0":"getX("+La(r,"coords")+")",i=e[e.length-1],o="",s="";n?(o=t?"end != "+(i-1):"end != 0",s=t?"end + 1":"end - 1"):(o=t?"end + pow2 < "+i:"end >= pow2",s=t?"end + pow2":"end - pow2"),this.userCode="\n      uniform float index;\n      void main() {\n        "+Je(r)+" coords = getOutputCoords();\n        int end = "+Pa(r,"coords")+";\n        float val = "+a+";\n        int pow2 = int(pow(2.0, index));\n        if ("+o+") {\n          int idx = "+s+";\n          "+Pa(r,"coords")+" = idx;\n          val += getX("+La(r,"coords")+");\n        }\n        setOutput(val);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var n=this;return function(t,r){null==n.index&&(n.index=t.getUniformLocation(r,"index")),t.gl.uniform1f(n.index,e)}},e}();function La(e,n){if(1===e)return""+n;if(2===e)return n+".x, "+n+".y";if(3===e)return n+".x, "+n+".y, "+n+".z";if(4===e)return n+".x, "+n+".y, "+n+".z, "+n+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}function Pa(e,n){if(1===e)return""+n;if(2===e)return n+".y";if(3===e)return n+".z";if(4===e)return n+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}var Ba={kernelName:n.Cumsum,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.axis,s=a.exclusive,u=a.reverse,l=i.shape.length,c=n.backend_util.getAxesPermutation([o],l),d=i;null!=c&&(d=Xt({inputs:{x:i},backend:r,attrs:{perm:c}}));var p=n.backend_util.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(i.shape.length-1)+" but got axis="+o);for(var f=d.shape[p],h=ht({inputs:{x:d},backend:r}),v=0;v<=Math.ceil(Math.log2(f))-1;v++){var x=(m=new Da(d.shape,!1,u)).getCustomSetupFunc(v),g=h;h=r.runWebGLProgram(m,[h],h.dtype,x),r.disposeIntermediateTensorInfo(g)}if(s){var m=new Da(d.shape,s,u);g=h;h=r.runWebGLProgram(m,[h],h.dtype),r.disposeIntermediateTensorInfo(g)}if(null!=c){var b=Xt({inputs:{x:h},backend:r,attrs:{perm:n.backend_util.getUndoAxesPermutation(c)}});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),b}return h}};var Va={kernelName:n.DenseBincount,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.x,i=n.weights,o=r.size,s=r.binaryOutput;if(1===a.shape.length){var u=t.readSync(a.dataId),l=t.readSync(i.dataId),c=bn(u,l,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,c)}if(2===a.shape.length){var d=t.bufferSync(a),p=t.bufferSync(i),f=Cn(d,p,o,s);return t.makeTensorInfo(f.shape,i.dtype,f.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}},Wa=function(){function e(e,n,t){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=t,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = "+this.getHeightCoordString()+";\n      int w = "+this.getWidthCoordString()+";\n      int d = "+this.getDepthCoordString()+";\n\n      int in_h = h / "+n+";\n      int offset_h = imod(h, "+n+");\n      int in_w = w / "+n+";\n      int offset_w = imod(w, "+n+");\n      int offset_d = (offset_h * "+n+" + offset_w) *\n        "+this.getOutputDepthSize()+";\n      int in_d = d + offset_d;\n\n      float result = "+this.getInputSamplingString()+";\n      setOutput(result);\n    }\n  "}return e.prototype.getHeightCoordString=function(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"},e.prototype.getWidthCoordString=function(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"},e.prototype.getDepthCoordString=function(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"},e.prototype.getOutputDepthSize=function(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},e.prototype.getInputSamplingString=function(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},e}();var Ma={kernelName:n.DepthToSpace,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.blockSize,s=a.dataFormat;n.util.assert(o>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+o}));var u=i.shape[0],l="NHWC"===s?i.shape[1]:i.shape[2],c="NHWC"===s?i.shape[2]:i.shape[3],d="NHWC"===s?i.shape[3]:i.shape[1],p=l*o,f=c*o,h=d/(o*o),v=new Wa("NHWC"===s?[u,p,f,h]:[u,h,p,f],o,s);return r.runWebGLProgram(v,[i],i.dtype)}},Ga=function(e,n,t,r,a){void 0===n&&(n=!1),void 0===t&&(t=null),void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var i=e.inHeight,o=e.inWidth,s=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,h=e.filterWidth,v=e.outChannels/e.inChannels,x="",g="";t&&(x=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+t+"\n        }":a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          "+t+"\n        }":"\n          float activation(float x) {\n            "+t+"\n          }\n        ",g="result = activation(result);");var m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      "+x+"\n\n      const ivec2 strides = ivec2("+l+", "+c+");\n      const ivec2 pads = ivec2("+s+", "+u+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / "+v+";\n        int q = d2 - d1 * "+v+";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < "+f+"; wR++) {\n          int xR = xRCorner + wR * "+d+";\n\n          if (xR < 0 || xR >= "+i+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+h+"; wC++) {\n            int xC = xCCorner + wC * "+p+";\n\n            if (xC < 0 || xC >= "+o+") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        "+m+"\n        "+g+"\n        setOutput(result);\n      }\n    "},Ua=function(e,t,r,a,i){void 0===t&&(t=!1),void 0===r&&(r=null),void 0===a&&(a=!1),void 0===i&&(i=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;for(var o=e.outChannels/e.inChannels,s=e.inHeight,u=e.inWidth,l=e.padInfo.top,c=e.padInfo.left,d=e.strideHeight,p=e.strideWidth,f=e.dilationHeight,h=e.dilationWidth,v=e.filterHeight,x=e.filterWidth,g=x,m="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;",b=0;b<x;b++)m+="\n          vec4 xTexelC"+2*b+";\n          vec4 xC"+b+";";for(var C=0;C<v;C++){for(b=0;b<x;b++)m+="\n          xTexelC"+2*b+" = vec4(0.0);\n          xC"+b+" = vec4(0.0);";m+="\n        xR = xRCorner + "+C*f+";\n        if (xR >=0 && xR < "+s+") {\n      ";for(var y=0;y<g/2+1;y++){if(m+="\n          xC = xCCorner + "+(b=2*y)*h+";\n          ",1===p){if(b<x&&(c%2==1?(m+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < "+u+") {\n                  xTexelC"+b+" = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= "+u+") {\n                    xTexelC"+b+".zw = vec2(0.0);\n                  }\n                }\n              ",m+=1===h&&b>0?"\n                xC"+b+" = vec4(xTexelC"+(b-2)+".zw, xTexelC"+b+".xy);\n                ":"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < "+u+") {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= "+u+") {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC"+b+" = vec4(previous.zw, xTexelC"+b+".xy);\n                  } else {\n                    xC"+b+" = vec4(0.0, 0.0, xTexelC"+b+".xy);\n                  }\n                  "):m+="\n                if (xC >= 0 && xC < "+u+") {\n                  xTexelC"+b+" = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= "+u+") {\n                    xTexelC"+b+".zw = vec2(0.0);\n                  }\n                }\n\n                xC"+b+" = xTexelC"+b+";\n                ",b+1<x)){var k=c%2==0?n.util.nearestLargerEven(h):h;h%2==0&&c%2==1||h%2!=0&&c%2!=1?(m+="\n                  xCOffset = xC + "+c%2+" + "+k+";\n\n                  if (xCOffset >= 0 && xCOffset < "+u+") {\n                    xTexelC"+(b+2)+" = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= "+u+") {\n                      xTexelC"+(b+2)+".zw = vec2(0.0);\n                    }\n                  }\n                  ",h>1&&(m+="\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < "+u+") {\n                      xTexelC"+b+" = getX(batch, xR, xCOffset, d1);\n                    }\n                    "),m+="\n                  xC"+(b+1)+" = vec4(xTexelC"+b+".zw, xTexelC"+(b+2)+".xy);\n                  "):m+=1===k?"\n                    xC"+(b+1)+" = xTexelC"+b+";\n                    ":"\n                    xCOffset = xC + "+k+";\n\n                    if (xCOffset >= 0 && xCOffset < "+u+") {\n                      xTexelC"+(b+2)+" = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= "+u+") {\n                        xTexelC"+(b+2)+".zw = vec2(0.0);\n                      }\n                    }\n\n                    xC"+(b+1)+" = xTexelC"+(b+2)+";\n                    "}}else b<x&&(c%2==1?(m+="\n                xCOffset = xC + 1 - "+p+";\n                if(xCOffset >= 0 && xCOffset < "+u+") {\n                  xTexelC"+b+" = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= "+u+") {\n                    xTexelC"+b+".zw = vec2(0.0);\n                  }\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < "+u+") {\n                  xTexelC"+(b+2)+" = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= "+u+") {\n                    xTexelC"+(b+2)+".zw = vec2(0.0);\n                  }\n                }\n\n                xC"+b+" = vec4(xTexelC"+b+".zw, xTexelC"+(b+2)+".zw);\n              ",b+1<x&&(m+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + "+p+";\n                  if(xCOffset >= 0 && xCOffset < "+u+") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC"+(b+1)+" = vec4(xTexelC"+(b+2)+".xy, final.xy);\n                ")):(m+="\n                if(xC >= 0 && xC < "+u+") {\n                  xTexelC"+b+" = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= "+u+") {\n                    xTexelC"+b+".zw = vec2(0.0);\n                  }\n                }\n\n                xCOffset = xC + "+p+";\n                if(xCOffset >= 0 && xCOffset < "+u+") {\n                  xTexelC"+(b+2)+" = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= "+u+") {\n                    xTexelC"+(b+2)+".zw = vec2(0.);\n                  }\n                }\n\n                xC"+b+" = vec4(\n                  xTexelC"+b+".xy, xTexelC"+(b+2)+".xy);\n              ",b+1<x&&(m+="\n                  xC"+(b+1)+" = vec4(xTexelC"+b+".zw, xTexelC"+(b+2)+".zw);\n                ")));b<x&&(m+="\n            wTexel = getW("+C+", "+b+", d1, q);\n            dotProd += xC"+b+" * vec4(wTexel.xz, wTexel.xz);\n          ",b+1<x&&(m+="\n              wTexel = getW("+C+", "+(b+1)+", d1, q);\n              dotProd += xC"+(b+1)+" * vec4(wTexel.xz, wTexel.xz);\n            "))}m+="\n        }\n      "}var I="",R="";r&&(I=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+r+"\n        }":i?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          "+r+"\n        }":"vec4 activation(vec4 x) {\n          "+r+"\n        }",R="result = activation(result);");var w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      "+I+"\n\n      const ivec2 strides = ivec2("+d+", "+p+");\n      const ivec2 pads = ivec2("+l+", "+c+");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / "+o+";\n        int q = d2 - d1 * "+o+";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        "+m+"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        "+w+"\n        "+R+"\n        setOutput(result);\n      }\n    "};var za={kernelName:n.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.filter,s=a.strides,u=a.pad,l=a.dilations,c=a.dimRoundingMode,d=l;null==d&&(d=[1,1]),n.util.assert(n.backend_util.eitherStridesOrDilationsAreOne(s,d),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+s+" and dilations '"+d+"'"}));var p,f=n.backend_util.computeConv2DInfo(i.shape,o.shape,s,d,u,c,!0);return p=n.env().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels==1?new Ua(f):new Ga(f),r.runWebGLProgram(p,[i,o],"float32")}},Xa=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var n=e.strideHeight,t=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * "+i+" + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+n+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+t+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ha=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var n=e.filterHeight,t=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=n-1-e.padInfo.top,o=t-1-e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2("+i+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < "+n+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+n+" - 1 - wR;\n\n          for (int wC = 0; wC < "+t+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+t+" - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < "+s+"; dm++) {\n              int d2 = d1 * "+s+" + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "};var ja={kernelName:n.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.dy,s=a.strides,u=a.dilations,l=a.pad,c=a.dimRoundingMode,d=a.filterShape,p=n.backend_util.computeConv2DInfo(i.shape,d,s,u,l,c,!0),f=new Xa(p);return r.runWebGLProgram(f,[i,o],"float32")}};var Ka={kernelName:n.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.dy,o=t.filter,s=a.strides,u=a.dilations,l=a.pad,c=a.dimRoundingMode,d=a.inputShape,p=n.backend_util.computeConv2DInfo(d,o.shape,s,u,l,c,!0),f=new Ha(p);return r.runWebGLProgram(f,[i,o],"float32")}},Ya=function(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "};var qa={kernelName:n.Diag,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=t.x,i=a.shape.concat(a.shape),o=n.util.sizeFromShape(a.shape),s=Dt({inputs:{x:a},backend:r,attrs:{shape:[o]}}),u=new Ya(o),l=r.runWebGLProgram(u,[s],s.dtype),c=Dt({inputs:{x:l},backend:r,attrs:{shape:i}});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(l),c}},Qa=function(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var n=e.inHeight,t=e.inWidth,r=e.padInfo,a=e.strideHeight,i=e.strideWidth,o=e.filterHeight,s=e.filterWidth,u=e.dilationHeight,l=e.dilationWidth,c=r.top,d=r.left;this.userCode="\n      const ivec2 strides = ivec2("+a+", "+i+");\n      const ivec2 pads = ivec2("+c+", "+d+");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < "+o+"; h++) {\n          int hIn = hBeg + h * "+u+";\n\n          if (hIn >= 0 && hIn < "+n+") {\n            for (int w = 0; w < "+s+"; w++) {\n              int wIn = wBeg + w * "+l+";\n\n              if (wIn >= 0 && wIn < "+t+") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    "};var Za={kernelName:n.Dilation2D,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=e.attrs,o=r.x,s=r.filter,u=i.strides,l=i.pad,c=i.dilations,d=n.backend_util.computeDilation2DInfo(o.shape,s.shape,u,l,"NHWC",c),p=new Qa(d),f=Dt({inputs:{x:t=a.runWebGLProgram(p,[o,s],"float32")},backend:a,attrs:{shape:d.outShape}});return a.disposeIntermediateTensorInfo(t),f}};var Ja={kernelName:n.Einsum,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs.equation,i=t,o=n.backend_util.decodeEinsumEquation(a,i.length),s=o.allDims,u=o.summedDims,l=o.idDims;n.backend_util.checkEinsumDimSizes(s.length,l,i);for(var c=n.backend_util.getEinsumComputePath(u,l),d=c.path,p=c.steps,f=p.length,h=null,v=s.length,x=[],g=0;g<f;++g){for(var m=0,b=p[g];m<b.length;m++){var C=b[m],y=n.backend_util.getEinsumPermutation(v,l[C]),k=y.permutationIndices,I=y.expandDims,R=void 0;n.backend_util.isIdentityPermutation(k)?R=i[C]:(R=Xt({inputs:{x:i[C]},backend:r,attrs:{perm:k}}),x.push(R));for(var w=R.shape.slice(),T=0;T<I.length;++T)w.splice(I[T],0,1);n.util.arraysEqual(R.shape,w)||(R=Dt({inputs:{x:R},backend:r,attrs:{shape:w}}),x.push(R)),null===h?h=R:(h=_t({inputs:{a:R,b:h},backend:r}),x.push(h))}g<f-1&&(d[g]>=0&&(h=Ut({inputs:{x:h},backend:r,attrs:{axis:d[g]-(s.length-v),keepDims:!1}}),x.push(h)),v--)}for(var E=0,N=x;E<N.length;E++){var S=N[E];S!==h&&r.disposeIntermediateTensorInfo(S)}return h}},$a=Rt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ei={kernelName:n.Elu,backendName:"webgl",kernelFunc:$a},ni={kernelName:n.EluGrad,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=t.dy,i=t.y,o=n.env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ft("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,i.shape):new pt("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,i.shape);return r.runWebGLProgram(o,[a,i],a.dtype)}},ti=wt({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),ri={kernelName:n.Equal,backendName:"webgl",kernelFunc:ti},ai=Rt({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '+n.backend_util.ERF_P+";\n  float a1 = "+n.backend_util.ERF_A1+";\n  float a2 = "+n.backend_util.ERF_A2+";\n  float a3 = "+n.backend_util.ERF_A3+";\n  float a4 = "+n.backend_util.ERF_A4+";\n  float a5 = "+n.backend_util.ERF_A5+";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n"}),ii={kernelName:n.Erf,backendName:"webgl",kernelFunc:ai},oi="return exp(x);",si=Rt({opSnippet:oi,packedOpSnippet:oi,cpuKernelImpl:In}),ui={kernelName:n.Exp,backendName:"webgl",kernelFunc:si};function li(e){var t=e.inputs,r=e.attrs,a=e.backend,i=r.dim,o=t.input,s=o.shape.length,u=o.shape.slice(),l=i;return i<0&&(n.util.assert(-(s+1)<=i,(function(){return"Axis must be in the interval ["+-(s+1)+", "+s+"]"})),l=s+i+1),u.splice(l,0,1),Dt({inputs:{x:o},backend:a,attrs:{shape:u}})}var ci={kernelName:n.ExpandDims,backendName:"webgl",kernelFunc:li},di="return exp(x) - 1.0;",pi=Rt({opSnippet:di,packedOpSnippet:di,cpuKernelImpl:Rn}),fi={kernelName:n.Expm1,backendName:"webgl",kernelFunc:pi},hi=function(e,n,t){this.variableNames=["real","imag"];var r=n[1];this.outputShape=n;var a,i=t?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,o=t?r+".0":"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '+e+".");a="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = "+i+";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        "+a+"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float("+r+");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < "+r+"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / "+o+";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    "};function vi(e,t,r){var a=r.texData.get(e.dataId),i=n.util.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],s=Dt({inputs:{x:e},backend:r,attrs:{shape:[i/o,o]}}),u=s.shape,l=new hi("real",u,t),c=new hi("imag",u,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:u},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:u}],p=r.runWebGLProgram(l,d,"float32"),f=r.runWebGLProgram(c,d,"float32"),h=xt({inputs:{real:p,imag:f},backend:r});r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f);var v=Dt({inputs:{x:h},backend:r,attrs:{shape:e.shape}});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(h),v}var xi={kernelName:n.FFT,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend;return vi(n.input,!1,t)}},gi=function(){function e(e,n){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var n=this;return function(t,r){null==n.valueLoc&&(n.valueLoc=t.getUniformLocationNoThrow(r,"value")),t.gl.uniform1f(n.valueLoc,e)}},e}();function mi(e){var t=e.backend,r=e.attrs,a=r.shape,i=r.value,o=r.dtype;if("string"===(o=o||n.util.inferDtype(i))){var s=n.util.getArrayFromDType(o,n.util.sizeFromShape(a));return s.fill(i),t.makeTensorInfo(a,o,s)}var u=new gi(a,i),l=u.getCustomSetupFunc(i);return t.runWebGLProgram(u,[],o,l)}var bi,Ci={kernelName:n.Fill,backendName:"webgl",kernelFunc:mi},yi=function(e){this.variableNames=["Image"],this.outputShape=[];var n=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = "+n+" - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < "+n+") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    "},ki={kernelName:n.FlipLeftRight,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=n.image,a=t,i=new yi(r.shape);return a.runWebGLProgram(i,[r],r.dtype)}},Ii="return floor(x);",Ri=Rt({opSnippet:Ii,packedOpSnippet:Ii,cpuKernelImpl:wn}),wi={kernelName:n.Floor,backendName:"webgl",kernelFunc:Ri},Ti=wt({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ei={kernelName:n.FloorDiv,backendName:"webgl",kernelFunc:Ti},Ni=function(e){this.variableNames=["A"];var n=ue(),t=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+r+".0, "+t+".0);\n\n        vec4 values = "+n.texture2D+"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    "},Si=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var n=ue(),t=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2("+r+".0, "+t+".0);\n            vec4 values = "+n.texture2D+"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        "+n.output+" = result;\n      }\n    "},Ai={kernelName:n.FromPixels,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.pixels,s=a.numChannels,u="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,c=u?[i.videoWidth,i.videoHeight]:[i.width,i.height],d=c[0],p=c[1],f=[p,d],h=[p,d,s];(l||u)&&(null==bi&&(bi=document.createElement("canvas").getContext("2d")),bi.canvas.width=d,bi.canvas.height=p,bi.drawImage(i,0,0,d,p),i=bi.canvas);var v=r.makeTensorInfo(f,"int32");r.texData.get(v.dataId).usage=o.PIXELS,r.gpgpu.uploadPixelDataToTexture(r.getTexture(v.dataId),i);var x=n.env().getBool("WEBGL_PACK")?new Si(h):new Ni(h),g=r.runWebGLProgram(x,[v],"int32");return r.disposeData(v.dataId),g}};var Fi={kernelName:n.FusedConv2D,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=e.attrs,o=r.x,s=r.filter,u=r.bias,l=r.preluActivationWeights,c=i.strides,d=i.pad,p=i.dataFormat,f=i.dilations,h=i.dimRoundingMode,v=i.activation,x=i.leakyreluAlpha,g=n.backend_util.convertConv2DDataFormat(p),m=n.backend_util.computeConv2DInfo(o.shape,s.shape,c,f,d,h,!1,g),b=[];if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(n.env().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])t=ga({x:o,filter:s,convInfo:m,backend:a,bias:u,activation:v,preluActivationWeights:l,leakyreluAlpha:x});else{var C=null!=u,y=null!=l,k="leakyrelu"===v,I=v?Tt(v,!1):null,R=new fa(m,C,I,y,k),w=[o,s];if(u&&w.push(u),l&&w.push(l),k){var T=a.makeTensorInfo([],"float32",n.util.createScalarValue(x,"float32"));w.push(T),b.push(T)}t=a.runWebGLProgram(R,w,"float32")}else t=xa({x:o,filter:s,convInfo:m,backend:a,bias:u,activation:v,preluActivationWeights:l,leakyreluAlpha:x});var E=Dt({inputs:{x:t},backend:a,attrs:{shape:m.outShape}});return b.push(t),b.forEach((function(e){return a.disposeIntermediateTensorInfo(e)})),E}};var _i={kernelName:n.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.filter,s=t.bias,u=t.preluActivationWeights,l=a.strides,c=a.pad,d=a.dilations,p=a.dimRoundingMode,f=a.activation,h=a.leakyreluAlpha,v=[],x=d;null==x&&(x=[1,1]),n.util.assert(n.backend_util.eitherStridesOrDilationsAreOne(l,x),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+l+" and dilations '"+x+"'"}));var g,m=n.backend_util.computeConv2DInfo(i.shape,o.shape,l,x,c,p,!0),b=n.env().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,C=f?Tt(f,b):null,y=[i,o],k=null!=s,I=null!=u,R="leakyrelu"===f;if(k&&y.push(s),I&&y.push(u),R){var w=r.makeTensorInfo([],"float32",n.util.createScalarValue(h,"float32"));y.push(w),v.push(w)}g=b?new Ua(m,k,C,I,R):new Ga(m,k,C,I,R);var T=r.runWebGLProgram(g,y,"float32");return v.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),T}},Oi=function(e,n,t){this.sliceDim=e,this.strides=n,this.variableNames=["x","indices"],this.outputShape=t;var r=Je(n.length),a=Je(t.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        "+r+" strides = "+r+"("+this.strides+");\n         void main() {\n          "+a+" coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < "+this.sliceDim+"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * "+i+";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      "};var Di={kernelName:n.GatherNd,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=t.params,i=t.indices,o=i.shape,s=o[o.length-1],u=n.backend_util.prepareAndValidate(a,i),l=u[0],c=u[1],d=u[2],p=u[3],f=Dt({inputs:{x:i},backend:r,attrs:{shape:[c,s]}}),h=Dt({inputs:{x:a},backend:r,attrs:{shape:[n.util.sizeFromShape(a.shape)/d,d]}}),v=new Oi(s,p,[c,d]),x=r.runWebGLProgram(v,[h,f],h.dtype),g=Dt({inputs:{x:x},backend:r,attrs:{shape:l}});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),g}},Li=function(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;var t=Je(this.rank),r=function(e,n){for(var t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=0;a<e.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+t[a]);return r.join()}(e);this.userCode="\n      void main() {\n        "+t+" resRC = getOutputCoords();\n        setOutput(getA("+r+"));\n      }\n    "};var Pi={kernelName:n.GatherV2,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.indices,s=a.axis,u=a.batchDims,l=n.util.parseAxisParam(s,i.shape)[0],c=n.backend_util.segment_util.collectGatherOpShapeInfo(i,o,l,u),d=n.util.sizeFromShape(o.shape),p=[],f=Dt({inputs:{x:i},backend:r,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Dt({inputs:{x:o},backend:r,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(f),p.push(h);var v=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(r.shouldExecuteOnCPU([i,o])||"string"===i.dtype){var x=r.bufferSync(h),g=r.bufferSync(f),m=Tn(g,x,v);return p.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),r.makeTensorInfo(c.outputShape,m.dtype,m.values)}var b=new Li(f.shape,v),C=r.runWebGLProgram(b,[f,h],f.dtype);p.push(C);var y=Dt({inputs:{x:C},backend:r,attrs:{shape:c.outputShape}});return p.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),y}},Bi=wt({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:En,dtype:"bool"}),Vi={kernelName:n.Greater,backendName:"webgl",kernelFunc:Bi},Wi=wt({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Mi={kernelName:n.GreaterEqual,backendName:"webgl",kernelFunc:Wi};var Gi={kernelName:n.IFFT,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend;return vi(n.input,!0,t)}},Ui=Rt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),zi={kernelName:n.IsFinite,backendName:"webgl",kernelFunc:Ui},Xi=Rt({opSnippet:"return float(isinf(x));",dtype:"bool"}),Hi={kernelName:n.IsInf,backendName:"webgl",kernelFunc:Xi},ji=Rt({opSnippet:"return float(isnan(x));",dtype:"bool"}),Ki={kernelName:n.IsNan,backendName:"webgl",kernelFunc:ji},Yi=wt({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Nn,dtype:"bool"}),qi={kernelName:n.Less,backendName:"webgl",kernelFunc:Yi},Qi=wt({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Zi={kernelName:n.LessEqual,backendName:"webgl",kernelFunc:Qi};var Ji={kernelName:n.LinSpace,backendName:"webgl",kernelFunc:function(e){var n=e.backend,t=e.attrs,r=t.start,a=t.stop,i=t.num,o=Sn(r,a,i);return n.makeTensorInfo([o.length],"float32",o)}},$i=Rt({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:An}),eo={kernelName:n.Log,backendName:"webgl",kernelFunc:$i},no=Rt({opSnippet:"return log(1.0 + x);"}),to={kernelName:n.Log1p,backendName:"webgl",kernelFunc:no},ro=wt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ao={kernelName:n.LogicalAnd,backendName:"webgl",kernelFunc:ro},io=Rt({opSnippet:"return float(!(x >= 1.0));"}),oo={kernelName:n.LogicalNot,backendName:"webgl",kernelFunc:io},so=wt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),uo={kernelName:n.LogicalOr,backendName:"webgl",kernelFunc:so},lo=function(e,n,t,r,a){this.variableNames=["x"],this.outputShape=[];var i,o=n,s=e[3]-1;this.outputShape=e;var u="float("+t+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -"+o+"; j <= "+o+"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  "+s+") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * "+i+";\n        setOutput(val);\n      }\n    "},co=function(e,n,t,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var i,o=n,s=e[3]-1;this.outputShape=e;var u="float("+t+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < "+this.outputShape[3]+";\n        bool hasNextRow = c < "+this.outputShape[2]+";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - "+o+";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - "+o+"; j <= "+o+"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2("+s+"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * "+i+";\n        setOutput(result);\n      }\n    "},po={kernelName:n.LRN,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.depthRadius,s=a.bias,u=a.alpha,l=a.beta,c=n.env().getBool("WEBGL_PACK_NORMALIZATION")?new co(i.shape,o,s,u,l):new lo(i.shape,o,s,u,l);return r.runWebGLProgram(c,[i],i.dtype)}},fo=function(e,n,t,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=t,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < "+this.depth+"; ++d) {\n          int depthBegin = int(max(0.0, float(d - "+n+")));\n          int depthEnd = int(min(float("+this.depth+"),\n              float(d + "+n+" + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = "+this.depth+";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float("+r+") * norm + float("+t+");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float("+r+")\n                * float("+a+")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * "+a+");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    "},ho={kernelName:n.LRNGrad,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.x,i=n.y,o=n.dy,s=r.depthRadius,u=r.bias,l=r.alpha,c=r.beta,d=new fo(a.shape,s,u,l,c);return t.runWebGLProgram(d,[a,i,o],a.dtype)}};function vo(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.reductionIndices,s=a.keepDims,u=i.shape.length,l=n.util.parseAxisParam(o,i.shape),c=l,d=n.backend_util.getAxesPermutation(c,u),p=null!=d,f=r.shouldExecuteOnCPU([i]),h=i;if(p){if(f){for(var v=r.texData.get(h.dataId).values,x=new Array(u),g=0;g<x.length;g++)x[g]=i.shape[d[g]];var m=Hn(v,i.shape,i.dtype,d,x);h=r.makeTensorInfo(x,i.dtype),r.texData.get(h.dataId).values=m}else h=Gt(i,d,r);c=n.backend_util.getInnerMostAxes(c.length,u)}n.backend_util.assertAxesAreInnerMostDims("max",c,u);var b,C=n.backend_util.computeOutAndReduceShapes(h.shape,c),y=C[0],k=C[1],I=y;if(s&&(I=n.backend_util.expandShapeToKeepDim(y,l)),f){v=r.texData.get(h.dataId).values;var R=Fn(v,n.util.sizeFromShape(k),I,i.dtype);b=r.makeTensorInfo(I,i.dtype),r.texData.get(b.dataId).values=R}else b=function(e,t,r,a){var i=n.util.sizeFromShape(t),o=Dt({inputs:{x:e},attrs:{shape:[n.util.sizeFromShape(e.shape)/i,i]},backend:a}),s=Vt(o,e.dtype,"max",a),u=Dt({inputs:{x:s},attrs:{shape:r},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),u}(h,k,I,r);return p&&r.disposeIntermediateTensorInfo(h),b}var xo={kernelName:n.Max,backendName:"webgl",kernelFunc:vo},go=wt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:_n}),mo={kernelName:n.Maximum,backendName:"webgl",kernelFunc:go};var bo={kernelName:n.MaxPool,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x;ie(i,"maxPool");var o=a.filterSize,s=a.strides,u=a.pad,l=a.dimRoundingMode;n.util.assert(n.backend_util.eitherStridesOrDilationsAreOne(s,1),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+s+" and dilations '1'"}));var c=n.backend_util.computePool2DInfo(i.shape,o,s,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&n.util.arraysEqual(c.inShape,c.outShape))return ht({inputs:{x:i},backend:r});var d=new wr(c,"max",!1);return r.runWebGLProgram(d,[i],i.dtype)}};var Co={kernelName:n.MaxPool3D,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.filterSize,s=a.strides,u=a.pad,l=a.dataFormat,c=a.dimRoundingMode,d=n.backend_util.computePool3DInfo(i.shape,o,s,[1,1,1],u,c,l),p=new Tr(d,"max",!1);return r.runWebGLProgram(p,[i],i.dtype)}},yo=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var n=e.strideHeight,t=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,o=a-1-e.padInfo.top,s=i-1-e.padInfo.left,u=a*i-1;this.userCode="\n      const ivec2 pads = ivec2("+o+", "+s+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+a+";\n          wR += "+r+") {\n          float dyR = float(dyRCorner + wR) / "+n+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+i+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+t+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = "+u+" - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * "+i+" + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ko=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var n=e.strideDepth,t=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,o=e.dilationWidth,s=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=s-1-e.padInfo.front,d=u-1-e.padInfo.top,p=l-1-e.padInfo.left,f=s*u*l-1;this.userCode="\n      const ivec3 pads = ivec3("+c+", "+d+", "+p+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+s+";\n           wD += "+a+") {\n          float dyD = float(dyDCorner + wD) / "+n+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+u+";\n              wR += "+i+") {\n            float dyR = float(dyRCorner + wR) / "+t+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+l+";\n                wC += "+o+") {\n              float dyC = float(dyCCorner + wC) / "+r+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = "+f+" -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * "+u+" * "+l+" +\n                  wR * "+l+" + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "};var Io={kernelName:n.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.dy,o=t.input,s=a.filterSize,u=a.strides,l=a.pad,c=a.dimRoundingMode,d=n.backend_util.computePool3DInfo(o.shape,s,u,[1,1,1],l,c),p=new Tr(d,"max",!0),f=r.runWebGLProgram(p,[o],o.dtype),h=new ko(d),v=r.runWebGLProgram(h,[i,f],o.dtype);return r.disposeIntermediateTensorInfo(f),v}};var Ro={kernelName:n.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.dy,o=t.input,s=o;ie([o,t.output],"maxPoolGrad");var u=a.filterSize,l=a.strides,c=a.pad,d=a.dimRoundingMode,p=n.backend_util.computePool2DInfo(s.shape,u,l,1,c,d),f=new wr(p,"max",!0),h=r.runWebGLProgram(f,[s],s.dtype),v=new yo(p),x=r.runWebGLProgram(v,[i,h],s.dtype);return r.disposeIntermediateTensorInfo(h),x}};var wo={kernelName:n.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.attrs,a=e.backend,i=t.x,o=r,s=o.filterSize,u=o.strides,l=o.pad,c=o.includeBatchInIndex,d=a;n.util.assert(4===i.shape.length,(function(){return"Error in maxPool: input must be rank 4 but got rank "+i.shape.length+"."}));var p=[1,1];n.util.assert(n.backend_util.eitherStridesOrDilationsAreOne(u,p),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+u+" and dilations '"+p+"'"}));var f=n.backend_util.computePool2DInfo(i.shape,s,u,p,l),h=function(e,n,t,r){var a=new wr(t,"max",!1),i=r.runWebGLProgram(a,[e],"float32");return a=new wr(t,"max",!0,!0,n),[i,r.runWebGLProgram(a,[e],"float32")]}(i,c,f,d);return[h[0],h[1]]}};var To={kernelName:n.Mean,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.attrs,a=e.backend,i=t.x,o=r,s=o.keepDims,u=o.axis,l=a,c=i.shape.length,d=n.util.parseAxisParam(u,i.shape),p=d,f=n.backend_util.getAxesPermutation(p,c),h=null!=f,v=l.shouldExecuteOnCPU([i]),x=[],g=i;if(h){if(v){for(var m=l.texData.get(g.dataId).values,b=new Array(c),C=0;C<b.length;C++)b[C]=i.shape[f[C]];var y=Hn(m,i.shape,i.dtype,f,b);g=l.makeTensorInfo(b,i.dtype),l.texData.get(g.dataId).values=y}else g=Gt(i,f,l);x.push(g),p=n.backend_util.getInnerMostAxes(p.length,c)}n.backend_util.assertAxesAreInnerMostDims("sum",p,c);var k=n.backend_util.computeOutAndReduceShapes(g.shape,p),I=k[0],R=k[1],w=I;s&&(w=n.backend_util.expandShapeToKeepDim(I,d));for(var T=function(e,t,r,a){var i=n.util.sizeFromShape(t),o=Dt({inputs:{x:e},attrs:{shape:[n.util.sizeFromShape(e.shape)/i,i]},backend:a}),s=Vt(o,"float32","mean",a),u=Dt({inputs:{x:s},attrs:{shape:r},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),u}(g,R,w,l),E=0,N=x;E<N.length;E++){C=N[E];l.disposeIntermediateTensorInfo(C)}return T}};var Eo={kernelName:n.Min,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.axis,s=a.keepDims,u=i.shape.length,l=n.util.parseAxisParam(o,i.shape),c=l,d=n.backend_util.getAxesPermutation(c,u),p=i;null!=d&&(p=Xt({inputs:{x:i},backend:r,attrs:{perm:d}}),c=n.backend_util.getInnerMostAxes(c.length,i.shape.length)),n.backend_util.assertAxesAreInnerMostDims("min",c,u);var f,h=n.backend_util.computeOutAndReduceShapes(p.shape,c),v=h[0],x=h[1],g=Dt({inputs:{x:p},backend:r,attrs:{shape:[-1,n.util.sizeFromShape(x)]}}),m=Vt(g,g.dtype,"min",r);return f=Dt(s?{inputs:{x:m},backend:r,attrs:{shape:n.backend_util.expandShapeToKeepDim(v,l)}}:{inputs:{x:m},backend:r,attrs:{shape:v}}),r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),null!=d&&r.disposeIntermediateTensorInfo(p),f}},No=wt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:On}),So={kernelName:n.Minimum,backendName:"webgl",kernelFunc:No},Ao=function(e,n,t){this.variableNames=["x"],this.outputShape=n.map((function(n,t){return n[0]+e[t]+n[1]}));var r=e.length,a=Je(r),i=n.map((function(e){return e[0]})).join(","),o=n.map((function(n,t){return n[0]+e[t]})).join(","),s=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===t?0:1;this.userCode=1!==r?"\n      "+a+" start = "+a+"("+i+");\n      "+a+" end = "+a+"("+o+");\n\n      void main() {\n        "+a+" outC = getOutputCoords();\n        for (int i = 0; i < "+r+"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - "+u+";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + "+u+";\n          }\n        }\n        "+a+" coords = outC - start;\n        setOutput(getX("+s+"));\n      }\n    ":"\n        int start = "+i+";\n        int end = "+o+";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - "+u+";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + "+u+";\n          }\n          setOutput(getX(outC - start));\n        }\n      "},Fo=function(e,n,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((function(n,t){return n[0]+e[t]+n[1]}));var r,a=e.length,i=Je(a),o=n.map((function(e){return e[0]})).join(","),s=n.map((function(n,t){return n[0]+e[t]})).join(","),u=Yn("rc",a),l=Yn("source",a),c=u[a-1]+" < "+this.outputShape[a-1],d=1===a?"source":"vec2("+l.slice(-2).join()+")",p="reflect"===t?0:1,f="";f=1===a?"\n        "+i+" rc = outputLoc;\n        "+(r="\n        "+i+" source = rc;\n        if (source < start) {\n          source = start * 2 - source - "+p+";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + "+p+";\n        }\n        source -= start;\n      ")+"\n        result[0] = getChannel(getX("+l.join()+"), "+d+");\n        "+u[a-1]+" += 1;\n        if("+c+") {\n          "+r+"\n          result[1] = getChannel(getX("+l.join()+"), "+d+");\n        }\n      ":"\n        "+i+" rc = outputLoc;\n        "+(r="\n        "+i+" source = rc;\n        "+i+" lt = "+i+"(lessThan(source, start));\n        "+i+" gte = "+i+"(greaterThanEqual(source, end));\n        "+i+" orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - "+p+") +\n                gte * ((end - 1) * 2 - source + "+p+");\n        source -= start;\n      ")+"\n        result[0] = getChannel(getX("+l.join()+"), "+d+");\n        "+u[a-1]+" += 1;\n        if("+c+") {\n          "+r+"\n          result[1] = getChannel(getX("+l.join()+"), "+d+");\n        }\n        rc = outputLoc;\n        "+u[a-2]+" += 1;\n        if("+u[a-2]+" < "+this.outputShape[a-2]+") {\n          "+r+"\n          result[2] = getChannel(getX("+l.join()+"), "+d+");\n          "+u[a-1]+" += 1;\n          if("+c+") {\n            "+r+"\n            result[3] = getChannel(getX("+l.join()+"), "+d+");\n          }\n        }\n      ",this.userCode="\n      const "+i+" start = "+i+"("+o+");\n      const "+i+" end = "+i+"("+s+");\n\n      void main() {\n        "+i+" outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        "+f+"\n        setOutput(result);\n      }\n    "},_o={kernelName:n.MirrorPad,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.paddings,s=a.mode,u=n.env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fo(i.shape,o,s):new Ao(i.shape,o,s);return r.runWebGLProgram(u,[i],i.dtype)}},Oo=wt({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Do={kernelName:n.Mod,backendName:"webgl",kernelFunc:Oo},Lo=function(){function e(e,n,t){this.variableNames=["probs"],this.outputShape=[e,t],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < "+(n-1)+"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float("+(n-1)+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var n=this;return function(t,r){null==n.seedLoc&&(n.seedLoc=t.getUniformLocation(r,"seed")),t.gl.uniform1f(n.seedLoc,e)}},e}(),Po=wt({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Bo={kernelName:n.RealDiv,backendName:"webgl",kernelFunc:Po},Vo="return a - b;",Wo=wt({opSnippet:Vo,packedOpSnippet:Vo,supportsComplex:!0,cpuKernelImpl:Un}),Mo={kernelName:n.Sub,backendName:"webgl",kernelFunc:Wo};function Go(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.logits,o=a.dim,s=n.util.parseAxisParam([o],i.shape),u=vo({inputs:{x:i},backend:r,attrs:{reductionIndices:s,keepDims:!1}}),l=n.backend_util.expandShapeToKeepDim(u.shape,s),c=Dt({inputs:{x:u},backend:r,attrs:{shape:l}}),d=Wo({inputs:{a:i,b:c},backend:r}),p=si({inputs:{x:d},backend:r}),f=Ut({inputs:{x:p},backend:r,attrs:{axis:s,keepDims:!1}}),h=Dt({inputs:{x:f},backend:r,attrs:{shape:l}}),v=Po({inputs:{a:p,b:h},backend:r});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(h),v}var Uo={kernelName:n.Softmax,backendName:"webgl",kernelFunc:Go};var zo={kernelName:n.Multinomial,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.logits,i=r.numSamples,o=r.seed,s=r.normalized,u=s?a:Go({inputs:{logits:a},backend:t,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new Lo(l,c,i),p=d.getCustomSetupFunc(o),f=t.runWebGLProgram(d,[u],"int32",p);return s||t.disposeIntermediateTensorInfo(u),f}},Xo="return -x;";var Ho={kernelName:n.Neg,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=r.x;if(a.shouldExecuteOnCPU([i])){var o=a.texData.get(i.dataId),s=Ln(o.values,i.shape,i.dtype),u=s[0],l=s[1];return a.makeTensorInfo(l,i.dtype,u)}return t=n.env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new it(i.shape,Xo):new nt(i.shape,Xo),a.runWebGLProgram(t,[i],i.dtype)}},jo=n.kernel_impls.nonMaxSuppressionV3Impl;var Ko={kernelName:n.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){n.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var t=e.inputs,r=e.backend,a=e.attrs,i=t.boxes,o=t.scores,s=a.maxOutputSize,u=a.iouThreshold,l=a.scoreThreshold,c=r.readSync(i.dataId),d=r.readSync(o.dataId),p=jo(c,d,s,u,l).selectedIndices;return r.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Yo=n.kernel_impls.nonMaxSuppressionV4Impl;var qo={kernelName:n.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){n.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var t=e.inputs,r=e.backend,a=e.attrs,i=t.boxes,o=t.scores,s=a.maxOutputSize,u=a.iouThreshold,l=a.scoreThreshold,c=a.padToMaxOutputSize,d=r.readSync(i.dataId),p=r.readSync(o.dataId),f=Yo(d,p,s,u,l,c),h=f.selectedIndices,v=f.validOutputs;return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([],"int32",new Int32Array([v]))]}},Qo=n.kernel_impls.nonMaxSuppressionV5Impl;var Zo={kernelName:n.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){n.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var t=e.inputs,r=e.backend,a=e.attrs,i=t.boxes,o=t.scores,s=a.maxOutputSize,u=a.iouThreshold,l=a.scoreThreshold,c=a.softNmsSigma,d=r.readSync(i.dataId),p=r.readSync(o.dataId),f=Qo(d,p,s,u,l,c),h=f.selectedIndices,v=f.selectedScores;return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([v.length],"float32",new Float32Array(v))]}},Jo=function(e,n,t,r){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float("+r+"), float("+t+"),\n                      float(index == coords.y)));\n      }\n    "},$o={kernelName:n.OneHot,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.indices,o=a.depth,s=a.onValue,u=a.offValue,l=n.util.sizeFromShape(i.shape),c=new Jo(l,o,s,u),d=Dt({inputs:{x:i},backend:r,attrs:{shape:[l]}}),p=r.runWebGLProgram(c,[d],i.dtype);r.disposeIntermediateTensorInfo(d);var f=Dt({inputs:{x:p},backend:r,attrs:{shape:i.shape.concat([o])}});return r.disposeIntermediateTensorInfo(p),f}};function es(e){var n=e.inputs,t=e.backend,r=n.x;if("complex64"===r.dtype){var a=jr({inputs:{input:r},backend:t}),i=es({inputs:{x:a},backend:t}),o=sa({inputs:{input:r},backend:t}),s=es({inputs:{x:o},backend:t}),u=xt({inputs:{real:i,imag:s},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),u}return mi({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:t})}var ns={kernelName:n.ZerosLike,backendName:"webgl",kernelFunc:es};var ts={kernelName:n.OnesLike,backendName:"webgl",kernelFunc:function e(n){var t=n.inputs,r=n.backend,a=t.x;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){var i=jr({inputs:{input:a},backend:r}),o=e({inputs:{x:i},backend:r}),s=sa({inputs:{input:a},backend:r}),u=es({inputs:{x:s},backend:r}),l=xt({inputs:{real:o,imag:u},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(u),l}return mi({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var rs={kernelName:n.Pack,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs.axis;if(1===t.length)return li({inputs:{input:t[0]},backend:r,attrs:{dim:a}});var i=t[0].shape,o=t[0].dtype;t.forEach((function(e){n.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),n.util.assert(o===e.dtype,(function(){return"All tensors passed to stack must have matching dtypes"}))}));var s=[],u=da({inputs:t.map((function(e){var n=li({inputs:{input:e},backend:r,attrs:{dim:a}});return s.push(n),n})),backend:r,attrs:{axis:a}});return s.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),u}},as=function(){function e(e,n,t){this.variableNames=["x"],this.outputShape=n.map((function(n,t){return n[0]+e[t]+n[1]}));var r=e.length,a=Je(r),i=n.map((function(e){return e[0]})).join(","),o=n.map((function(n,t){return n[0]+e[t]})).join(","),s=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      "+a+" start = "+a+"("+i+");\n      "+a+" end = "+a+"("+o+");\n      uniform float value;\n\n      void main() {\n        "+a+" outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          "+a+" coords = outC - start;\n          setOutput(getX("+s+"));\n        }\n      }\n    ":"\n        int start = "+i+";\n        int end = "+o+";\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      "}return e.prototype.getCustomSetupFunc=function(e){var n=this;return function(t,r){null==n.valueLoc&&(n.valueLoc=t.getUniformLocationNoThrow(r,"value")),t.gl.uniform1f(n.valueLoc,e)}},e}(),is=function(){function e(e,n,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((function(n,t){return n[0]+e[t]+n[1]}));for(var r=e.length,a=Je(r),i=n.map((function(e){return e[0]})).join(","),o=n.map((function(n,t){return n[0]+e[t]})).join(","),s=Yn("rc",r),u=Yn("source",r),l=s[r-1]+" < "+this.outputShape[r-1],c=1===r?"source":"vec2("+u.slice(-2).join()+")",d=[a+" rc = outputLoc;",s[r-1]+" += 1;\n       if("+l+") {\n      ",1===r?"":"}\n       rc = outputLoc;\n       "+s[r-2]+" += 1;\n       if("+s[r-2]+" < "+this.outputShape[r-2]+") {",1===r?"":"  "+s[r-1]+" += 1;\n         if("+l+") {"],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="",h=0,v=1===r?2:4;h<v;h++)f+="\n        "+d[h]+"\n        if ("+p+") {\n          result["+h+"] = float(value);\n        } else {\n          "+a+" source = rc - start;\n          result["+h+"] = getChannel(getX("+u.join()+"), "+c+");\n        }\n      ";f+=1===r?"} ":"}}",this.userCode="\n      const "+a+" start = "+a+"("+i+");\n      const "+a+" end = "+a+"("+o+");\n      uniform float value;\n\n      void main() {\n        "+a+" outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        "+f+"\n        setOutput(result);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var n=this;return function(t,r){null==n.valueLoc&&(n.valueLoc=t.getUniformLocationNoThrow(r,"value")),t.gl.uniform1f(n.valueLoc,e)}},e}(),os=function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.paddings,s=a.constantValue,u=n.env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new is(i.shape,o,s):new as(i.shape,o,s),l=u.getCustomSetupFunc(s);return r.runWebGLProgram(u,[i],i.dtype,l)},ss={kernelName:n.PadV2,backendName:"webgl",kernelFunc:os},us=wt({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ls={kernelName:n.Pow,backendName:"webgl",kernelFunc:us};var cs={kernelName:n.Prod,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=e.attrs,o=r.x,s=i.axis,u=i.keepDims,l=o.shape.length,c=[],d=n.util.parseAxisParam(s,o.shape),p=d,f=n.backend_util.getAxesPermutation(p,l),h=o;if(null!=f&&(h=Xt({inputs:{x:o},backend:a,attrs:{perm:f}}),p=n.backend_util.getInnerMostAxes(p.length,l),c.push(h)),n.backend_util.assertAxesAreInnerMostDims("prod",p,l),a.shouldExecuteOnCPU([h])){var v=a.texData.get(h.dataId).values,x=Pn(h.shape,h.dtype,v,p),g=x.outVals,m=x.outShape,b=x.outDtype;t=a.makeTensorInfo(m,b,g)}else{var C=n.backend_util.computeOutAndReduceShapes(h.shape,p),y=(m=C[0],C[1]),k=n.util.sizeFromShape(y),I=Dt({inputs:{x:h},backend:a,attrs:{shape:[-1,k]}}),R=Vt(I,n.sumOutType(o.dtype),"prod",a);t=Dt({inputs:{x:R},backend:a,attrs:{shape:m}}),c.push(I),c.push(R)}if(u){c.push(t);var w=n.backend_util.expandShapeToKeepDim(t.shape,d);t=Dt({inputs:{x:t},backend:a,attrs:{shape:w}})}return c.forEach((function(e){return a.disposeIntermediateTensorInfo(e)})),t}},ds=function(e){var n=e.backend,t=e.attrs,r=t.start,a=t.stop,i=t.step,o=t.dtype,s=Bn(r,a,i,o);return n.makeTensorInfo([s.length],o,s)},ps={kernelName:n.Range,backendName:"webgl",kernelFunc:ds},fs=Rt({opSnippet:"return 1.0 / x;"}),hs={kernelName:n.Reciprocal,backendName:"webgl",kernelFunc:fs},vs=Rt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xs={kernelName:n.Relu,backendName:"webgl",kernelFunc:vs},gs=Rt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ms={kernelName:n.Relu6,backendName:"webgl",kernelFunc:gs},bs=function(e,n,t,r,a){this.variableNames=["A"],this.outputShape=[];var i=e[0],o=e[1],s=e[2],u=e[3];this.outputShape=[i,n,t,u];var l,c=[r&&n>1?o-1:o,r&&t>1?s-1:s],d=[r&&n>1?n-1:n,r&&t>1?t-1:t];l=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+c[0]/d[0]+",\n          "+c[1]/d[1]+");\n      const vec2 inputShapeRC = vec2("+o+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = "+l+";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    "},Cs=function(e,n,t,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var i=e[0],o=e[1],s=e[2],u=e[3];this.outputShape=[i,n,t,u];var l,c=[r&&n>1?o-1:o,r&&t>1?s-1:s],d=[r&&n>1?n-1:n,r&&t>1?t-1:t];l=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          "+c[0]/d[0]+",\n          "+c[1]/d[1]+",\n          "+c[1]/d[1]+");\n      const vec3 inputShapeRC = vec3("+o+".0, "+s+".0,\n                                     "+s+".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = "+l+";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < "+(u-1)+";\n        bool hasNextRow = coords.z < "+(t-1)+";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    "};var ys={kernelName:n.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.images,o=a.alignCorners,s=a.halfPixelCenters,u=a.size,l=u[0],c=u[1],d=n.env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Cs(i.shape,l,c,o,s):new bs(i.shape,l,c,o,s);return r.runWebGLProgram(d,[i],"float32")}},ks=function(e,n,t){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;var r=n[1],a=n[2],i=e[1],o=e[2],s=[t&&i>1?r-1:r,t&&o>1?a-1:a],u=[t&&i>1?i-1:i,t&&o>1?o-1:o],l=s[0]/u[0],c=s[1]/u[1],d=1/l,p=1/c,f=2*Math.ceil(d)+2,h=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+l+");\n        const float widthScale = float("+c+");\n\n        const float invHeightScale = float("+d+");\n        const float invWidthScale = float("+p+");\n\n        const int winHeight = int("+f+");\n        const int winWidth = int("+h+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+i+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+o+") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), "+(r-1)+".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), "+(a-1)+".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "};var Is={kernelName:n.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.images,i=n.dy,o=r.alignCorners,s=new ks(i.shape,a.shape,o);return t.runWebGLProgram(s,[i],i.dtype)}},Rs=function(e,n,t,r,a){this.variableNames=["A"],this.outputShape=[];var i=e[0],o=e[1],s=e[2],u=e[3];this.outputShape=[i,n,t,u];var l,c=[r&&n>1?o-1:o,r&&t>1?s-1:s],d=[r&&n>1?n-1:n,r&&t>1?t-1:t],p=r?"0.5":"0.0";l=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+c[0]/d[0]+",\n          "+c[1]/d[1]+");\n      const vec2 inputShapeRC = vec2("+o+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = "+l+";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + "+p+")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    "};var ws={kernelName:n.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.images,i=r.alignCorners,o=r.halfPixelCenters,s=r.size,u=s[0],l=s[1],c=new Rs(a.shape,u,l,i,o);return t.runWebGLProgram(c,[a],a.dtype)}},Ts=function(e,n,t){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;var r=n[1],a=n[2],i=e[1],o=e[2],s=[t&&i>1?r-1:r,t&&o>1?a-1:a],u=[t&&i>1?i-1:i,t&&o>1?o-1:o],l=s[0]/u[0],c=s[1]/u[1],d=1/l,p=1/c,f=2*Math.ceil(d)+2,h=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+l+");\n        const float widthScale = float("+c+");\n\n        const float invHeightScale = float("+d+");\n        const float invWidthScale = float("+p+");\n\n        const int winHeight = int("+f+");\n        const int winWidth = int("+h+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+i+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+o+") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float("+s[0]+") *\n                (float(dyR) / float("+u[0]+"));\n\n            float sourceFracCol =\n                float("+s[1]+") *\n                  (float(dyC) / float("+u[1]+"));\n\n            int sourceNearestRow = int(min(\n                float(int("+r+") - 1),\n                "+t+" ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int("+a+") - 1),\n                "+t+" ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "};var Es={kernelName:n.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.images,i=n.dy,o=r.alignCorners,s=new Ts(i.shape,a.shape,o);return t.runWebGLProgram(s,[i],i.dtype)}},Ns=function(e,n){this.variableNames=["x"];var t=e.length;if(t>4)throw new Error("WebGL backend: Reverse of rank-"+t+" tensor is not yet supported");if(this.outputShape=e,1!==t){var r=e.map((function(t,r){return function(t){return-1!==n.indexOf(t)&&1!==e[t]?e[t]+" - coords["+t+"] - 1":"coords["+t+"]"}(r)})).join(","),a=Je(t);this.userCode="\n      void main() {\n        "+a+" coords = getOutputCoords();\n        setOutput(getX("+r+"));\n      }\n    "}else this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX("+e[0]+" - coord - 1));\n        }\n      "},Ss=function(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var t=e.length;if(t>4)throw new Error("WebGL backend: Reverse of rank-"+t+" tensor is not yet supported");this.outputShape=e;var r=Yn("rc",t),a=r[t-1]+" + 1 < "+this.outputShape[t-1],i=r[t-2]+" + 1 < "+this.outputShape[t-2],o=Je(t);function s(t){var r=e.map((function(r,a){return function(t,r){return-1!==n.indexOf(t)&&1!==e[t]?e[t]+" - "+r[t]+" - 1":""+r[t]}(a,t)}));return"getChannel(getX("+r.join(",")+"), vec2("+r.slice(-2).join(",")+"))"}this.userCode=1===t?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX("+e[0]+" - rc - 1),\n            "+e[0]+" - rc - 1);\n          if("+a+"){\n              result.g = getChannel(getX("+e[0]+" - (rc  + 1) - 1),\n                "+e[0]+" - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      ":"\n        void main() {\n          "+o+" rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = "+function(e){return s(e)}(r.slice())+";\n          if("+a+"){\n            result.g = "+function(e){return e[t-1]="("+e[t-1]+" + 1)",s(e)}(r.slice())+";\n          }\n          if("+i+") {\n            result.b = "+function(e){return e[t-2]="("+e[t-2]+" + 1)",s(e)}(r.slice())+";\n            if("+a+") {\n              result.a = "+function(e){return e[t-1]="("+e[t-1]+" + 1)",e[t-2]="("+e[t-2]+" + 1)",s(e)}(r.slice())+";\n            }\n          }\n          setOutput(result);\n        }\n    "};var As={kernelName:n.Reverse,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.dims,s=i.shape.length,u=n.util.parseAxisParam(o,i.shape);if(0===s)return ht({inputs:{x:i},backend:r});var l=n.env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ss(i.shape,u):new Ns(i.shape,u);return r.runWebGLProgram(l,[i],i.dtype)}},Fs=function(){function e(e,n){this.variableNames=["Image"],this.outputShape=[];var t=e[1],r=e[2];this.outputShape=e;var a="";a="number"==typeof n?"float outputValue = "+n.toFixed(2)+";":"\n        vec3 fill = vec3("+n.join(",")+");\n        float outputValue = fill[coords[3]];",this.userCode="\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          "+a+"\n          if(coordX >= 0 && coordX < "+r+" && coordY >= 0 && coordY < "+t+") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    "}return e.prototype.getCustomSetupFunc=function(e,n,t,r){var a=this;return function(i,o){null==a.paramsLoc&&(a.paramsLoc=i.getUniformLocationNoThrow(o,"params")),i.gl.uniform4f(a.paramsLoc,e,n,t,r)}},e}(),_s={kernelName:n.RotateWithOffset,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.attrs,a=e.backend,i=t.image,o=r,s=o.radians,u=o.fillValue,l=o.center,c=a,d=new Fs(i.shape,u),p=n.backend_util.getImageCenter(l,i.shape[1],i.shape[2]),f=p[0],h=p[1],v=d.getCustomSetupFunc(f,h,Math.sin(s),Math.cos(s));return c.runWebGLProgram(d,[i],i.dtype,v)}},Os=Rt({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Ds={kernelName:n.Round,backendName:"webgl",kernelFunc:Os},Ls=Rt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Vn}),Ps={kernelName:n.Rsqrt,backendName:"webgl",kernelFunc:Ls},Bs=function(e,n,t,r,a,i,o){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;var s=Je(a.length),u=Je(i.length),l="";1===t?l="i":2===t&&(l="i, j");var c="getIndices("+l+")",d="";1===r?d="i":2===r&&(d="i, coords[1]");var p="getUpdates("+d+")",f=n>1?"strides[j]":"strides";this.userCode="\n        "+s+" strides = "+s+"("+a+");\n\n        void main() {\n          "+u+" coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < "+e+"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < "+n+"; j++) {\n              int index = round("+c+");\n              flattenedIndex += index * "+f+";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += "+p+";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      "};var Vs={kernelName:n.ScatterNd,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.indices,o=t.updates,s=a.shape,u=n.backend_util.calculateShapes(o,i,s),l=u.sliceRank,c=u.numUpdates,d=u.sliceSize,p=u.strides,f=u.outputSize,h=[f/d,d];if(0===f)return r.makeTensorInfo(s,i.dtype);var v=Dt({inputs:{x:i},backend:r,attrs:{shape:[c,l]}}),x=Dt({inputs:{x:o},backend:r,attrs:{shape:[c,d]}}),g=r.makeTensorInfo([],"float32",new Float32Array([0])),m=new Bs(c,l,v.shape.length,x.shape.length,p,h),b=r.runWebGLProgram(m,[x,v,g],x.dtype),C=Dt({inputs:{x:b},backend:r,attrs:{shape:s}});return r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(g),C}},Ws=function(e,n,t){var r,a;if(this.variableNames=["c","a","b"],this.outputShape=n,t>4)throw Error("Where for rank "+t+" is not yet supported");if(1===t)a="resRC",r="resRC";else{for(var i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[],u=0;u<n.length;u++)s.push(""+i[u]),u<e&&o.push(""+i[u]);r=o.join(),a=s.join()}var l=Je(t);this.userCode="\n      void main() {\n        "+l+" resRC = getOutputCoords();\n        float cVal = getC("+r+");\n        if (cVal >= 1.0) {\n          setOutput(getA("+a+"));\n        } else {\n          setOutput(getB("+a+"));\n        }\n      }\n    "};var Ms={kernelName:n.Select,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=t.condition,i=t.t,o=t.e,s=new Ws(a.shape.length,i.shape,i.shape.length);return r.runWebGLProgram(s,[a,i,o],n.upcastType(i.dtype,o.dtype))}},Gs=Rt({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = "+n.backend_util.SELU_SCALEALPHA+";\n  float scale = "+n.backend_util.SELU_SCALE+";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n"}),Us={kernelName:n.Selu,backendName:"webgl",kernelFunc:Gs},zs=Rt({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Xs={kernelName:n.Sigmoid,backendName:"webgl",kernelFunc:zs},Hs=Rt({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),js={kernelName:n.Sign,backendName:"webgl",kernelFunc:Hs},Ks=Rt({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Ys={kernelName:n.Sin,backendName:"webgl",kernelFunc:Ks},qs=Rt({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Qs={kernelName:n.Sinh,backendName:"webgl",kernelFunc:qs},Zs=Rt({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Js={kernelName:n.Softplus,backendName:"webgl",kernelFunc:Zs},$s={kernelName:n.SpaceToBatchND,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.blockShape,s=a.paddings;n.util.assert(i.shape.length<=4,(function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"}));var u=o.reduce((function(e,n){return e*n})),l=[[0,0]];l.push.apply(l,s);for(var c=1+o.length;c<i.shape.length;++c)l.push([0,0]);var d=[],p=os({inputs:{x:i},backend:r,attrs:{paddings:l,constantValue:0}}),f=n.backend_util.getReshaped(p.shape,o,u,!1),h=n.backend_util.getPermuted(f.length,o.length,!1),v=n.backend_util.getReshapedPermuted(p.shape,o,u,!1),x=Dt({inputs:{x:p},backend:r,attrs:{shape:f}}),g=Xt({inputs:{x:x},backend:r,attrs:{perm:h}}),m=Dt({inputs:{x:g},backend:r,attrs:{shape:v}});return d.push(p),d.push(x),d.push(g),d.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),m}};var eu={kernelName:n.SparseToDense,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.sparseIndices,o=t.sparseValues,s=t.defaultValue,u=a.outputShape,l=n.backend_util.calculateShapes(o,i,u),c=l.sliceRank,d=l.numUpdates,p=l.strides,f=l.outputSize,h=new Bs(d,c,i.shape.length,o.shape.length,p,[f,1],!1),v=r.runWebGLProgram(h,[o,i,s],o.dtype),x=Dt({inputs:{x:v},backend:r,attrs:{shape:u}});return r.disposeIntermediateTensorInfo(v),x}};var nu={kernelName:n.SplitV,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.numOrSizeSplits,s=a.axis,u=n.util.parseAxisParam(s,i.shape)[0],l=n.backend_util.prepareSplitSize(i,o,u),c=i.shape.length,d=new Array(c).fill(0),p=i.shape.slice();return l.map((function(e){var n=p.slice();n[u]=e;var t=Mr({inputs:{x:i},backend:r,attrs:{begin:d,size:n}});return d[u]+=e,t}))}},tu=Rt({opSnippet:"return sqrt(x);"}),ru={kernelName:n.Sqrt,backendName:"webgl",kernelFunc:tu},au=Rt({opSnippet:"return x * x;"}),iu={kernelName:n.Square,backendName:"webgl",kernelFunc:au},ou="return (a - b) * (a - b);",su=wt({opSnippet:ou,packedOpSnippet:ou}),uu={kernelName:n.SquaredDifference,backendName:"webgl",kernelFunc:su};var lu={kernelName:n.Step,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.attrs,r=e.backend,a=n.x,i=tt+"\n    return x > 0.0 ? 1.0 : float("+t.alpha+");\n  ",o=new nt(a.shape,i);return r.runWebGLProgram(o,[a],a.dtype)}},cu=function(e,n,t){this.variableNames=["x"],this.outputShape=t;var r=t.length,a=Je(t.length),i=Je(t.length),o="";if(1===r)o="coords * strides + begin";else{var s=0;o=t.map((function(e,n){return s++,1===t.length?"coords * strides["+n+"] + begin["+n+"]":"coords["+(s-1)+"] * strides["+n+"] + begin["+n+"]"})).join(",")}this.userCode="\n      "+a+" begin = "+a+"("+e+");\n      "+a+" strides = "+a+"("+n+");\n\n      void main() {\n        "+i+" coords = getOutputCoords();\n        setOutput(getX("+o+"));\n      }\n    "};var du={kernelName:n.StridedSlice,backendName:"webgl",kernelFunc:function(e){var t,r=e.inputs,a=e.backend,i=e.attrs,o=r.x,s=i.begin,u=i.end,l=i.strides,c=i.beginMask,d=i.endMask,p=i.ellipsisMask,f=i.newAxisMask,h=i.shrinkAxisMask,v=n.slice_util.sliceInfo(o.shape,s,u,l,c,d,p,f,h),x=v.nonStrided,g=v.$begin,m=v.$strides,b=v.size,C=v.newShape,y=v.outShape,k=Dt({inputs:{x:o},backend:a,attrs:{shape:C}});if(x){var I=Mr({inputs:{x:k},backend:a,attrs:{begin:g,size:b}});t=Dt({inputs:{x:I},backend:a,attrs:{shape:y}}),a.disposeIntermediateTensorInfo(I)}else if(y.some((function(e){return 0===e})))t=a.makeTensorInfo(y,o.dtype,[]);else{if(a.shouldExecuteOnCPU([k])){var R=a.texData.get(k.dataId).values,w=n.buffer(k.shape,k.dtype,R),T=Gn(y,w,m,g);t=a.makeTensorInfo(y,k.dtype,T.values)}else{var E=new cu(g,m,y);t=a.runWebGLProgram(E,[k],k.dtype)}}var N=Dt({inputs:{x:t},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(t),N}},pu=Rt({opSnippet:"return tan(x);"}),fu={kernelName:n.Tan,backendName:"webgl",kernelFunc:pu},hu=Rt({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),vu={kernelName:n.Tanh,backendName:"webgl",kernelFunc:hu},xu=function(e,n){this.variableNames=["A"];for(var t=new Array(e.length),r=0;r<t.length;r++)t[r]=e[r]*n[r];this.outputShape=t,this.rank=t.length;var a=Je(this.rank),i=function(e){var n=e.length;if(n>5)throw Error("Tile for rank "+n+" is not yet supported");if(1===n)return"imod(resRC, "+e[0]+")";for(var t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[],a=0;a<e.length;a++)r.push("imod("+t[a]+", "+e[a]+")");return r.join()}(e);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+i+"));\n      }\n    "};function gu(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=a.reps;if("string"===i.dtype){var s=r.readSync(i.dataId).map((function(e){return n.util.decodeString(e)})),u=n.buffer(i.shape,i.dtype,s),l=zn(u,o);return r.makeTensorInfo(l.shape,l.dtype,l.values)}var c=new xu(i.shape,o);return r.runWebGLProgram(c,[i],i.dtype)}var mu={kernelName:n.Tile,backendName:"webgl",kernelFunc:gu};var bu={kernelName:n.TopK,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.x,i=r.k,o=(r.sorted,t.readSync(a.dataId)),s=Xn(o,a.shape,a.dtype,i),u=s[0],l=s[1];return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}},Cu=function(e,n,t,r,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;var o,s="nearest"===t?1:2;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if("+o+" == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if ("+o+" == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if ("+o+" == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < "+e+" && 0 <= coordX && coordX < "+n+") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float("+a+");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float("+a+");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float("+n+"));\n                float mapY = mapCoord(inY, float("+e+"));\n\n                if ("+s+" == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        "};var yu={kernelName:n.Transform,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.image,i=n.transforms,o=r.interpolation,s=r.fillMode,u=r.fillValue,l=r.outputShape,c=a.shape,d=c[0],p=c[1],f=c[2],h=c[3],v=null!=l?l:[p,f],x=v[0],g=v[1],m=new Cu(p,f,o,s,u,[d,x,g,h]);return t.runWebGLProgram(m,[a,i],"float32")}};var ku={kernelName:n.Unique,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.attrs,r=e.backend,a=t.axis,i=n.x;ie(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");var o=r.readSync(i.dataId),s=jn(o,a,i.shape,i.dtype),u=s.outputValues,l=s.outputShape,c=s.indices;return[r.makeTensorInfo(l,i.dtype,u),r.makeTensorInfo([c.length],"int32",c)]}};var Iu={kernelName:n.Unpack,backendName:"webgl",kernelFunc:function(e){var n=e.inputs,t=e.backend,r=e.attrs,a=n.value,i=r.axis;i<0&&(i+=a.shape.length);for(var o=a,s=o.shape.length,u=a.shape[i],l=new Array(s-1),c=0,d=0;d<s;d++)d!==i&&(l[c++]=o.shape[d]);var p=[],f=new Array(s).fill(0),h=o.shape.slice();h[i]=1;var v=new Array(u);for(d=0;d<v.length;d++){f[i]=d;var x=Mr({inputs:{x:o},backend:t,attrs:{begin:f,size:h}}),g=Dt({inputs:{x:x},backend:t,attrs:{shape:l}});v[d]=g,p.push(x)}return p.forEach((function(e){return t.disposeIntermediateTensorInfo(e)})),v}},Ru=function(e,n){this.variableNames=["x","segmentIds"];var t=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,o=i*Math.ceil(a/t);this.outputShape=[r,o];var s=4*Math.floor(t/4),u=t%4,l="\n        sumValue += dot(values, segFilter);\n    ",c="";a%t>0&&(c="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      ");var d="";a%t>0&&(d="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return -1.0;\n        }\n      "),this.userCode="\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        "+c+"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        "+d+"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          "+i+")) * float("+t+"));\n        int currentSeg = int(mod(float(outIdx), float("+i+")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+s+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          "+l+"\n        }\n\n        int inIdx = inOffset + "+s+";\n        if ("+(1===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          "+l+"\n        } else if ("+(2===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          "+l+"\n        } else if ("+(3===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          "+l+"\n        }\n        setOutput(sumValue);\n      }\n    "};for(var wu=0,Tu=[po,ho,Kt,qt,Zt,$t,tr,ir,or,sr,fr,hr,xr,mr,kr,Cr,Rr,Nr,Er,Fr,_r,Or,Pr,Ur,zr,Yr,Zr,ea,ra,gt,pa,Ia,Ra,ma,Ta,Ea,wa,Sa,Fa,Oa,Ba,Va,Ma,ja,Ka,za,qa,Za,Ja,ei,ni,ri,ii,ui,ci,fi,xi,Ci,ki,wi,Ei,Ai,Fi,_i,Di,Pi,Vi,Mi,vt,Gi,ua,zi,Hi,Ki,Ct,qi,Zi,Ji,to,eo,ao,oo,uo,xo,Co,bo,Io,Ro,wo,mo,To,Eo,So,_o,Do,zo,Ot,Ho,Ko,qo,Zo,Hr,$o,ts,rs,ss,ls,It,cs,ps,Kr,Bo,hs,ms,xs,Lt,ys,Is,ws,Es,As,_s,Ds,Ps,Vs,Ms,Us,Xs,js,Ys,Qs,Gr,Uo,Js,$s,eu,nu,ru,iu,uu,lu,du,Mo,zt,fu,vu,mu,bu,yu,Ht,ku,Iu,{kernelName:n.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,r=e.backend,a=e.attrs,i=t.x,o=t.segmentIds,s=a.numSegments,u=i.shape.length,l=[],c=0,d=n.backend_util.getAxesPermutation([c],u),p=i;null!=d&&(p=Xt({inputs:{x:i},backend:r,attrs:{perm:d}}),l.push(p),c=n.backend_util.getInnerMostAxes(1,u)[0]);var f=n.backend_util.segment_util.computeOutShape(p.shape,c,s),h=n.util.sizeFromShape([p.shape[c]]),v=Dt({inputs:{x:p},backend:r,attrs:{shape:[-1,h]}});l.push(v);var x=n.sumOutType(i.dtype),g=function(e,t,a,i,o){var s=e.shape[0],u=e.shape[1],c=n.backend_util.segment_util.segOpComputeOptimalWindowSize(u,o),d=new Ru({windowSize:c,inSize:u,batchSize:s,numSegments:o},t),p=r.compileAndRun(d,[e,a],i);if(l.push(p),p.shape[1]===o)return p;var f=ds({backend:r,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),h=gu({inputs:{x:f},backend:r,attrs:{reps:[u/c]}});return l.push(f),l.push(h),g(p,t,h,i,o)},m=Dt({inputs:{x:g(v,"unsortedSegmentSum",o,x,s)},backend:r,attrs:{shape:f}}),b=m;if(null!=d){l.push(m);var C=n.backend_util.getUndoAxesPermutation(d);b=Xt({inputs:{x:b},backend:r,attrs:{perm:C}})}return l.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),b}},ns];wu<Tu.length;wu++){var Eu=Tu[wu];n.registerKernel(Eu)}e.GPGPUContext=Ge,e.MathBackendWebGL=lt,e.forceHalfFloat=ct,e.gpgpu_util=Me,e.setWebGLContext=c,e.version_webgl="3.4.0",e.webgl=dt,e.webgl_util=oe,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=tf-backend-webgl.min.js.map
