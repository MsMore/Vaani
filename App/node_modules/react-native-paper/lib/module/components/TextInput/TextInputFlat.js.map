{"version":3,"sources":["TextInputFlat.tsx"],"names":["React","View","Animated","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","color","InputLabel","TextInputAdornment","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","FLAT_INPUT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingFlat","interpolatePlaceholder","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","AdornmentSide","AdornmentType","InputMode","MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","Component","render","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","props","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","height","paddingHorizontal","textAlign","viewStyle","flatten","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","paddingOffset","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","ref","underlineColorAndroid","input","textAlignVertical","Underline","underline","transform","scaleY","create","position","bottom","paddingTop","paddingBottom","flexGrow","margin","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      textAlign,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    const isPaddingHorizontalPassed =\n      paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right,\n    });\n\n    let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n      adornmentConfig,\n    });\n\n    if (isPaddingHorizontalPassed) {\n      paddingLeft = paddingHorizontal as number;\n      paddingRight = paddingHorizontal as number;\n    }\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        paddingHorizontal,\n        inputOffset: FLAT_INPUT_OFFSET,\n        mode: InputMode.Flat,\n      }\n    );\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background).lighten(0.24).rgb().string()\n        : color(colors.background).darken(0.06).rgb().string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: FLAT_INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n    const leftAffixTopPosition = leftLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: leftLayout.height,\n        })\n      : null;\n\n    const rightAffixTopPosition = rightLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: rightLayout.height,\n        })\n      : null;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset: { paddingLeft, paddingRight },\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n    };\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      paddingHorizontal,\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Affix]: affixTopPosition,\n        [AdornmentType.Icon]: iconTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: this.props.parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderTextColor ?? placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              { paddingLeft, paddingRight },\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          })}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n});\n"]}