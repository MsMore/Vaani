{"version":3,"file":"expo-notifications.js","sourceRoot":"","sources":["../../../src/plugins/unversioned/expo-notifications.ts"],"names":[],"mappings":";;AACA,+DAIqC;AACrC,kDAAsD;AACtD,gDAAuD;AACvD,sDAAqD;AAErD,MAAM,WAAW,GAAG,oBAAoB,CAAC;AAE5B,QAAA,iBAAiB,GAAiB,MAAM,CAAC,EAAE;IACtD,OAAO,iCAAgB,CAAC,MAAM,EAAE;QAC9B,eAAe,EAAE,IAAI;QACrB,MAAM,EAAE,WAAW;QACnB,6DAA6D;QAC7D,QAAQ,EAAE,4BAA4B;KACvC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,4BAA4B,GAA+C,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;IAChG,OAAO,mCAAqB,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;QAC5C,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;QAC5C,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,4BAA4B,GAAiB,kCAAmB,CAAC,MAAM,CAAC,EAAE;IAC9E,UAAU;IACV,MAAM,GAAG,wCAAwB,CAAC,MAAM,CAAC,CAAC;IAC1C,MAAM,GAAG,yCAAyB,CAAC,MAAM,CAAC,CAAC;IAC3C,MAAM,GAAG,qCAAqB,CAAC,MAAM,CAAC,CAAC;IAEvC,MAAM;IACN,MAAM,GAAG,4BAA4B,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAE7D,OAAO,MAAM,CAAC;AAChB,CAAC,EAAE,WAAW,CAAC,CAAC;AAEhB,kBAAe,yBAAiB,CAAC","sourcesContent":["import { ConfigPlugin } from '../../Plugin.types';\nimport {\n  withNotificationIconColor,\n  withNotificationIcons,\n  withNotificationManifest,\n} from '../../android/Notifications';\nimport { createRunOncePlugin } from '../core-plugins';\nimport { withEntitlementsPlist } from '../ios-plugins';\nimport { withStaticPlugin } from '../static-plugins';\n\nconst packageName = 'expo-notifications';\n\nexport const withNotifications: ConfigPlugin = config => {\n  return withStaticPlugin(config, {\n    _isLegacyPlugin: true,\n    plugin: packageName,\n    // If the static plugin isn't found, use the unversioned one.\n    fallback: withUnversionedNotifications,\n  });\n};\n\nconst withNotificationsEntitlement: ConfigPlugin<'production' | 'development'> = (config, mode) => {\n  return withEntitlementsPlist(config, config => {\n    config.modResults['aps-environment'] = mode;\n    return config;\n  });\n};\n\nconst withUnversionedNotifications: ConfigPlugin = createRunOncePlugin(config => {\n  // Android\n  config = withNotificationManifest(config);\n  config = withNotificationIconColor(config);\n  config = withNotificationIcons(config);\n\n  // iOS\n  config = withNotificationsEntitlement(config, 'development');\n\n  return config;\n}, packageName);\n\nexport default withNotifications;\n"]}