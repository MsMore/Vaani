{"version":3,"file":"ProvisioningProfile.js","sourceRoot":"","sources":["../../src/ios/ProvisioningProfile.ts"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAE1B,iDAS2B;AAQ3B,SAAS,gCAAgC,CACvC,WAAmB,EACnB,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAA+B;IAErE,MAAM,OAAO,GAAG,sBAAU,CAAC,WAAW,CAAC,CAAC;IACxC,MAAM,MAAM,GAAG,UAAU;QACvB,CAAC,CAAC,kCAAsB,CAAC,OAAO,EAAE,UAAU,CAAC;QAC7C,CAAC,CAAC,iCAAqB,CAAC,OAAO,CAAC,CAAC;IAEnC,IAAI,CAAC,MAAM,IAAI,UAAU,EAAE;QACzB,MAAM,IAAI,KAAK,CAAC,iCAAiC,UAAU,GAAG,CAAC,CAAC;KACjE;SAAM,IAAI,CAAC,MAAM,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;KACtE;IAED,MAAM,CAAC,cAAc,EAAE,YAAY,CAAC,GAAG,MAAM,CAAC;IAE9C,sCAA0B,CAAC,OAAO,EAAE,YAAY,CAAC,sBAAsB,CAAC;SACrE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAA4B,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;SAChF,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAA4B,EAAE,EAAE;QAC/C,IAAI,CAAC,aAAa,CAAC,8BAA8B,GAAG,IAAI,WAAW,GAAG,CAAC;QACvE,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,WAAW,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,uBAAuB,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,QAAQ,CAAC;IAChD,CAAC,CAAC,CAAC;IAEL,MAAM,CAAC,OAAO,CAAC,6BAAiB,CAAC,OAAO,CAAC,CAAC;SACvC,MAAM,CAAC,wBAAY,CAAC;SACpB,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAsB,EAAE,EAAE;QACzC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC;QAC/E,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,iBAAiB,GAAG,QAAQ,CAAC;IAChF,CAAC,CAAC,CAAC;IAEL,kBAAE,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;AAC1D,CAAC;AAEQ,4EAAgC","sourcesContent":["import fs from 'fs-extra';\n\nimport {\n  ConfigurationSectionEntry,\n  findFirstNativeTarget,\n  findNativeTargetByName,\n  getBuildConfigurationForId,\n  getPbxproj,\n  getProjectSection,\n  isNotComment,\n  ProjectSectionEntry,\n} from './utils/Xcodeproj';\n\ntype ProvisioningProfileSettings = {\n  targetName?: string;\n  appleTeamId: string;\n  profileName: string;\n};\n\nfunction setProvisioningProfileForPbxproj(\n  projectRoot: string,\n  { targetName, profileName, appleTeamId }: ProvisioningProfileSettings\n): void {\n  const project = getPbxproj(projectRoot);\n  const target = targetName\n    ? findNativeTargetByName(project, targetName)\n    : findFirstNativeTarget(project);\n\n  if (!target && targetName) {\n    throw new Error(`Unable to find a target named ${targetName}.`);\n  } else if (!target) {\n    throw new Error(`Unable to find any targets in this Xcode project.`);\n  }\n\n  const [nativeTargetId, nativeTarget] = target;\n\n  getBuildConfigurationForId(project, nativeTarget.buildConfigurationList)\n    .filter(([, item]: ConfigurationSectionEntry) => item.buildSettings.PRODUCT_NAME)\n    .forEach(([, item]: ConfigurationSectionEntry) => {\n      item.buildSettings.PROVISIONING_PROFILE_SPECIFIER = `\"${profileName}\"`;\n      item.buildSettings.DEVELOPMENT_TEAM = appleTeamId;\n      item.buildSettings.CODE_SIGN_IDENTITY = '\"iPhone Distribution\"';\n      item.buildSettings.CODE_SIGN_STYLE = 'Manual';\n    });\n\n  Object.entries(getProjectSection(project))\n    .filter(isNotComment)\n    .forEach(([, item]: ProjectSectionEntry) => {\n      item.attributes.TargetAttributes[nativeTargetId].DevelopmentTeam = appleTeamId;\n      item.attributes.TargetAttributes[nativeTargetId].ProvisioningStyle = 'Manual';\n    });\n\n  fs.writeFileSync(project.filepath, project.writeSync());\n}\n\nexport { setProvisioningProfileForPbxproj };\n"]}